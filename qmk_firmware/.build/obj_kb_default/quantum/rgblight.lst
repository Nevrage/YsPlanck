   1               		.file	"rgblight.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.sethsv,"ax",@progbits
  11               	.global	sethsv
  13               	sethsv:
  14               	.LVL0:
  15               	.LFB7:
  16               		.file 1 "quantum/rgblight.c"
   1:quantum/rgblight.c **** #include <avr/eeprom.h>
   2:quantum/rgblight.c **** #include <avr/interrupt.h>
   3:quantum/rgblight.c **** #include <util/delay.h>
   4:quantum/rgblight.c **** #include "progmem.h"
   5:quantum/rgblight.c **** #include "timer.h"
   6:quantum/rgblight.c **** #include "rgblight.h"
   7:quantum/rgblight.c **** #include "debug.h"
   8:quantum/rgblight.c **** 
   9:quantum/rgblight.c **** // Lightness curve using the CIE 1931 lightness formula
  10:quantum/rgblight.c **** //Generated by the python script provided in http://jared.geek.nz/2013/feb/linear-led-pwm
  11:quantum/rgblight.c **** const uint8_t DIM_CURVE[] PROGMEM = {
  12:quantum/rgblight.c ****     0, 0, 0, 0, 0, 1, 1, 1, 1, 1,
  13:quantum/rgblight.c ****     1, 1, 1, 1, 2, 2, 2, 2, 2, 2,
  14:quantum/rgblight.c ****     2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
  15:quantum/rgblight.c ****     3, 4, 4, 4, 4, 4, 4, 5, 5, 5,
  16:quantum/rgblight.c ****     5, 5, 6, 6, 6, 6, 6, 7, 7, 7,
  17:quantum/rgblight.c ****     7, 8, 8, 8, 8, 9, 9, 9, 10, 10,
  18:quantum/rgblight.c ****     10, 10, 11, 11, 11, 12, 12, 12, 13, 13,
  19:quantum/rgblight.c ****     13, 14, 14, 15, 15, 15, 16, 16, 17, 17,
  20:quantum/rgblight.c ****     17, 18, 18, 19, 19, 20, 20, 21, 21, 22,
  21:quantum/rgblight.c ****     22, 23, 23, 24, 24, 25, 25, 26, 26, 27,
  22:quantum/rgblight.c ****     28, 28, 29, 29, 30, 31, 31, 32, 32, 33,
  23:quantum/rgblight.c ****     34, 34, 35, 36, 37, 37, 38, 39, 39, 40,
  24:quantum/rgblight.c ****     41, 42, 43, 43, 44, 45, 46, 47, 47, 48,
  25:quantum/rgblight.c ****     49, 50, 51, 52, 53, 54, 54, 55, 56, 57,
  26:quantum/rgblight.c ****     58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
  27:quantum/rgblight.c ****     68, 70, 71, 72, 73, 74, 75, 76, 77, 79,
  28:quantum/rgblight.c ****     80, 81, 82, 83, 85, 86, 87, 88, 90, 91,
  29:quantum/rgblight.c ****     92, 94, 95, 96, 98, 99, 100, 102, 103, 105,
  30:quantum/rgblight.c ****     106, 108, 109, 110, 112, 113, 115, 116, 118, 120,
  31:quantum/rgblight.c ****     121, 123, 124, 126, 128, 129, 131, 132, 134, 136,
  32:quantum/rgblight.c ****     138, 139, 141, 143, 145, 146, 148, 150, 152, 154,
  33:quantum/rgblight.c ****     155, 157, 159, 161, 163, 165, 167, 169, 171, 173,
  34:quantum/rgblight.c ****     175, 177, 179, 181, 183, 185, 187, 189, 191, 193,
  35:quantum/rgblight.c ****     196, 198, 200, 202, 204, 207, 209, 211, 214, 216,
  36:quantum/rgblight.c ****     218, 220, 223, 225, 228, 230, 232, 235, 237, 240,
  37:quantum/rgblight.c ****     242, 245, 247, 250, 252, 255,
  38:quantum/rgblight.c ****     };
  39:quantum/rgblight.c **** 
  40:quantum/rgblight.c **** const uint8_t RGBLED_BREATHING_TABLE[] PROGMEM = {
  41:quantum/rgblight.c ****   0, 0, 0, 0, 1, 1, 1, 2, 2, 3, 4, 5, 5, 6, 7, 9,
  42:quantum/rgblight.c ****   10, 11, 12, 14, 15, 17, 18, 20, 21, 23, 25, 27, 29, 31, 33, 35,
  43:quantum/rgblight.c ****   37, 40, 42, 44, 47, 49, 52, 54, 57, 59, 62, 65, 67, 70, 73, 76,
  44:quantum/rgblight.c ****   79, 82, 85, 88, 90, 93, 97, 100, 103, 106, 109, 112, 115, 118, 121, 124,
  45:quantum/rgblight.c ****   127, 131, 134, 137, 140, 143, 146, 149, 152, 155, 158, 162, 165, 167, 170, 173,
  46:quantum/rgblight.c ****   176, 179, 182, 185, 188, 190, 193, 196, 198, 201, 203, 206, 208, 211, 213, 215,
  47:quantum/rgblight.c ****   218, 220, 222, 224, 226, 228, 230, 232, 234, 235, 237, 238, 240, 241, 243, 244,
  48:quantum/rgblight.c ****   245, 246, 248, 249, 250, 250, 251, 252, 253, 253, 254, 254, 254, 255, 255, 255,
  49:quantum/rgblight.c ****   255, 255, 255, 255, 254, 254, 254, 253, 253, 252, 251, 250, 250, 249, 248, 246,
  50:quantum/rgblight.c ****   245, 244, 243, 241, 240, 238, 237, 235, 234, 232, 230, 228, 226, 224, 222, 220,
  51:quantum/rgblight.c ****   218, 215, 213, 211, 208, 206, 203, 201, 198, 196, 193, 190, 188, 185, 182, 179,
  52:quantum/rgblight.c ****   176, 173, 170, 167, 165, 162, 158, 155, 152, 149, 146, 143, 140, 137, 134, 131,
  53:quantum/rgblight.c ****   128, 124, 121, 118, 115, 112, 109, 106, 103, 100, 97, 93, 90, 88, 85, 82,
  54:quantum/rgblight.c ****   79, 76, 73, 70, 67, 65, 62, 59, 57, 54, 52, 49, 47, 44, 42, 40,
  55:quantum/rgblight.c ****   37, 35, 33, 31, 29, 27, 25, 23, 21, 20, 18, 17, 15, 14, 12, 11,
  56:quantum/rgblight.c ****   10, 9, 7, 6, 5, 5, 4, 3, 2, 2, 1, 1, 1, 0, 0, 0
  57:quantum/rgblight.c **** };
  58:quantum/rgblight.c **** 
  59:quantum/rgblight.c **** __attribute__ ((weak))
  60:quantum/rgblight.c **** const uint8_t RGBLED_BREATHING_INTERVALS[] PROGMEM = {30, 20, 10, 5};
  61:quantum/rgblight.c **** __attribute__ ((weak))
  62:quantum/rgblight.c **** const uint8_t RGBLED_RAINBOW_MOOD_INTERVALS[] PROGMEM = {120, 60, 30};
  63:quantum/rgblight.c **** __attribute__ ((weak))
  64:quantum/rgblight.c **** const uint8_t RGBLED_RAINBOW_SWIRL_INTERVALS[] PROGMEM = {100, 50, 20};
  65:quantum/rgblight.c **** __attribute__ ((weak))
  66:quantum/rgblight.c **** const uint8_t RGBLED_SNAKE_INTERVALS[] PROGMEM = {100, 50, 20};
  67:quantum/rgblight.c **** __attribute__ ((weak))
  68:quantum/rgblight.c **** const uint8_t RGBLED_KNIGHT_INTERVALS[] PROGMEM = {100, 50, 20};
  69:quantum/rgblight.c **** 
  70:quantum/rgblight.c **** rgblight_config_t rgblight_config;
  71:quantum/rgblight.c **** rgblight_config_t inmem_config;
  72:quantum/rgblight.c **** 
  73:quantum/rgblight.c **** LED_TYPE led[RGBLED_NUM];
  74:quantum/rgblight.c **** uint8_t rgblight_inited = 0;
  75:quantum/rgblight.c **** bool rgblight_timer_enabled = false;
  76:quantum/rgblight.c **** 
  77:quantum/rgblight.c **** void sethsv(uint16_t hue, uint8_t sat, uint8_t val, LED_TYPE *led1) {
  17               		.loc 1 77 69 view -0
  18               		.cfi_startproc
  19               		.loc 1 77 69 is_stmt 0 view .LVU1
  20 0000 CF92      		push r12
  21               	.LCFI0:
  22               		.cfi_def_cfa_offset 3
  23               		.cfi_offset 12, -2
  24 0002 DF92      		push r13
  25               	.LCFI1:
  26               		.cfi_def_cfa_offset 4
  27               		.cfi_offset 13, -3
  28 0004 EF92      		push r14
  29               	.LCFI2:
  30               		.cfi_def_cfa_offset 5
  31               		.cfi_offset 14, -4
  32 0006 FF92      		push r15
  33               	.LCFI3:
  34               		.cfi_def_cfa_offset 6
  35               		.cfi_offset 15, -5
  36 0008 0F93      		push r16
  37               	.LCFI4:
  38               		.cfi_def_cfa_offset 7
  39               		.cfi_offset 16, -6
  40 000a 1F93      		push r17
  41               	.LCFI5:
  42               		.cfi_def_cfa_offset 8
  43               		.cfi_offset 17, -7
  44 000c CF93      		push r28
  45               	.LCFI6:
  46               		.cfi_def_cfa_offset 9
  47               		.cfi_offset 28, -8
  48 000e DF93      		push r29
  49               	.LCFI7:
  50               		.cfi_def_cfa_offset 10
  51               		.cfi_offset 29, -9
  52               	/* prologue: function */
  53               	/* frame size = 0 */
  54               	/* stack size = 8 */
  55               	.L__stack_usage = 8
  56 0010 E901      		movw r28,r18
  78:quantum/rgblight.c ****   uint8_t r = 0, g = 0, b = 0, base, color;
  57               		.loc 1 78 3 is_stmt 1 view .LVU2
  58               	.LVL1:
  79:quantum/rgblight.c **** 
  80:quantum/rgblight.c ****   if (sat == 0) { // Acromatic color (gray). Hue doesn't mind.
  59               		.loc 1 80 3 view .LVU3
  60               		.loc 1 80 6 is_stmt 0 view .LVU4
  61 0012 6623      		tst r22
  62 0014 01F4      		brne .+2
  63 0016 00C0      		rjmp .L10
  64 0018 E42E      		mov r14,r20
  65 001a F12C      		mov r15,__zero_reg__
  81:quantum/rgblight.c ****     r = val;
  82:quantum/rgblight.c ****     g = val;
  83:quantum/rgblight.c ****     b = val;
  84:quantum/rgblight.c ****   } else {
  85:quantum/rgblight.c ****     base = ((255 - sat) * val) >> 8;
  66               		.loc 1 85 5 is_stmt 1 view .LVU5
  67               		.loc 1 85 18 is_stmt 0 view .LVU6
  68 001c EFEF      		ldi r30,lo8(-1)
  69 001e F0E0      		ldi r31,0
  70 0020 E61B      		sub r30,r22
  71 0022 F109      		sbc r31,__zero_reg__
  72               		.loc 1 85 25 view .LVU7
  73 0024 EE9D      		mul r30,r14
  74 0026 8001      		movw r16,r0
  75 0028 EF9D      		mul r30,r15
  76 002a 100D      		add r17,r0
  77 002c FE9D      		mul r31,r14
  78 002e 100D      		add r17,r0
  79 0030 1124      		clr r1
  80               		.loc 1 85 10 view .LVU8
  81 0032 212F      		mov r18,r17
  82               	.LVL2:
  86:quantum/rgblight.c ****     color = (val - base) * (hue % 60) / 60;
  83               		.loc 1 86 5 is_stmt 1 view .LVU9
  84               		.loc 1 86 18 is_stmt 0 view .LVU10
  85 0034 E12F      		mov r30,r17
  86 0036 FF27      		clr r31
  87 0038 EE1A      		sub r14,r30
  88 003a FF0A      		sbc r15,r31
  89               		.loc 1 86 33 view .LVU11
  90 003c 5CE3      		ldi r21,lo8(60)
  91 003e C52E      		mov r12,r21
  92 0040 D12C      		mov r13,__zero_reg__
  93 0042 B601      		movw r22,r12
  94               	.LVL3:
  95               		.loc 1 86 33 view .LVU12
  96 0044 0E94 0000 		call __udivmodhi4
  97               	.LVL4:
  98               		.loc 1 86 33 view .LVU13
  99 0048 FB01      		movw r30,r22
 100 004a BC01      		movw r22,r24
 101               		.loc 1 86 26 view .LVU14
 102 004c E69E      		mul r14,r22
 103 004e C001      		movw r24,r0
 104 0050 E79E      		mul r14,r23
 105 0052 900D      		add r25,r0
 106 0054 F69E      		mul r15,r22
 107 0056 900D      		add r25,r0
 108 0058 1124      		clr r1
 109               		.loc 1 86 39 view .LVU15
 110 005a B601      		movw r22,r12
 111 005c 0E94 0000 		call __udivmodhi4
 112               	.LVL5:
  87:quantum/rgblight.c **** 
  88:quantum/rgblight.c ****     switch (hue / 60) {
 113               		.loc 1 88 5 is_stmt 1 view .LVU16
 114 0060 E230      		cpi r30,2
 115 0062 F105      		cpc r31,__zero_reg__
 116 0064 01F0      		breq .L3
 117 0066 00F4      		brsh .L4
 118               	.LVL6:
  89:quantum/rgblight.c ****       case 0:
  90:quantum/rgblight.c ****         r = val;
  91:quantum/rgblight.c ****         g = base + color;
  92:quantum/rgblight.c ****         b = base;
 119               		.loc 1 92 9 view .LVU17
  93:quantum/rgblight.c ****         break;
 120               		.loc 1 93 9 view .LVU18
  92:quantum/rgblight.c ****         break;
 121               		.loc 1 92 11 is_stmt 0 view .LVU19
 122 0068 812F      		mov r24,r17
  91:quantum/rgblight.c ****         b = base;
 123               		.loc 1 91 11 view .LVU20
 124 006a 262F      		mov r18,r22
 125 006c 210F      		add r18,r17
 126 006e 3097      		sbiw r30,0
 127 0070 01F0      		breq .L2
 128               	.LVL7:
  94:quantum/rgblight.c ****       case 1:
  95:quantum/rgblight.c ****         r = val - color;
  96:quantum/rgblight.c ****         g = val;
 129               		.loc 1 96 9 is_stmt 1 view .LVU21
  97:quantum/rgblight.c ****         b = base;
 130               		.loc 1 97 9 view .LVU22
  98:quantum/rgblight.c ****         break;
 131               		.loc 1 98 9 view .LVU23
  96:quantum/rgblight.c ****         b = base;
 132               		.loc 1 96 11 is_stmt 0 view .LVU24
 133 0072 242F      		mov r18,r20
  95:quantum/rgblight.c ****         g = val;
 134               		.loc 1 95 11 view .LVU25
 135 0074 461B      		sub r20,r22
 136               	.LVL8:
  95:quantum/rgblight.c ****         g = val;
 137               		.loc 1 95 11 view .LVU26
 138 0076 3197      		sbiw r30,1
 139 0078 01F0      		breq .L2
 140               	.LVL9:
 141               	.L11:
  78:quantum/rgblight.c **** 
 142               		.loc 1 78 25 view .LVU27
 143 007a 80E0      		ldi r24,0
  78:quantum/rgblight.c **** 
 144               		.loc 1 78 18 view .LVU28
 145 007c 20E0      		ldi r18,0
  78:quantum/rgblight.c **** 
 146               		.loc 1 78 11 view .LVU29
 147 007e 40E0      		ldi r20,0
 148 0080 00C0      		rjmp .L2
 149               	.LVL10:
 150               	.L4:
  78:quantum/rgblight.c **** 
 151               		.loc 1 78 11 view .LVU30
 152 0082 E430      		cpi r30,4
 153 0084 F105      		cpc r31,__zero_reg__
 154 0086 01F0      		breq .L7
 155 0088 00F0      		brlo .L8
  99:quantum/rgblight.c ****       case 2:
 100:quantum/rgblight.c ****         r = base;
 101:quantum/rgblight.c ****         g = val;
 102:quantum/rgblight.c ****         b = base + color;
 103:quantum/rgblight.c ****         break;
 104:quantum/rgblight.c ****       case 3:
 105:quantum/rgblight.c ****         r = base;
 106:quantum/rgblight.c ****         g = val - color;
 107:quantum/rgblight.c ****         b = val;
 108:quantum/rgblight.c ****         break;
 109:quantum/rgblight.c ****       case 4:
 110:quantum/rgblight.c ****         r = base + color;
 111:quantum/rgblight.c ****         g = base;
 112:quantum/rgblight.c ****         b = val;
 113:quantum/rgblight.c ****         break;
 114:quantum/rgblight.c ****       case 5:
 115:quantum/rgblight.c ****         r = val;
 116:quantum/rgblight.c ****         g = base;
 117:quantum/rgblight.c ****         b = val - color;
 156               		.loc 1 117 11 view .LVU31
 157 008a 842F      		mov r24,r20
 158 008c 861B      		sub r24,r22
 159 008e 3597      		sbiw r30,5
 160 0090 01F4      		brne .L11
 161               	.LVL11:
 162               	.L2:
 118:quantum/rgblight.c ****         break;
 119:quantum/rgblight.c ****     }
 120:quantum/rgblight.c ****   }
 121:quantum/rgblight.c ****   r = pgm_read_byte(&DIM_CURVE[r]);
 163               		.loc 1 121 3 is_stmt 1 view .LVU32
 164               	.LBB9:
 165               		.loc 1 121 7 view .LVU33
 166               		.loc 1 121 7 view .LVU34
 167               		.loc 1 121 7 view .LVU35
 168 0092 E42F      		mov r30,r20
 169 0094 F0E0      		ldi r31,0
 170 0096 E050      		subi r30,lo8(-(DIM_CURVE))
 171 0098 F040      		sbci r31,hi8(-(DIM_CURVE))
 172               	/* #APP */
 173               	 ;  121 "quantum/rgblight.c" 1
 174 009a 4491      		lpm r20, Z
 175               		
 176               	 ;  0 "" 2
 177               	.LVL12:
 178               		.loc 1 121 7 view .LVU36
 179               		.loc 1 121 7 is_stmt 0 view .LVU37
 180               	/* #NOAPP */
 181               	.LBE9:
 122:quantum/rgblight.c ****   g = pgm_read_byte(&DIM_CURVE[g]);
 182               		.loc 1 122 3 is_stmt 1 view .LVU38
 183               	.LBB10:
 184               		.loc 1 122 7 view .LVU39
 185               		.loc 1 122 7 view .LVU40
 186               		.loc 1 122 7 view .LVU41
 187 009c E22F      		mov r30,r18
 188 009e F0E0      		ldi r31,0
 189 00a0 E050      		subi r30,lo8(-(DIM_CURVE))
 190 00a2 F040      		sbci r31,hi8(-(DIM_CURVE))
 191               	/* #APP */
 192               	 ;  122 "quantum/rgblight.c" 1
 193 00a4 9491      		lpm r25, Z
 194               		
 195               	 ;  0 "" 2
 196               	.LVL13:
 197               		.loc 1 122 7 view .LVU42
 198               		.loc 1 122 7 is_stmt 0 view .LVU43
 199               	/* #NOAPP */
 200               	.LBE10:
 123:quantum/rgblight.c ****   b = pgm_read_byte(&DIM_CURVE[b]);
 201               		.loc 1 123 3 is_stmt 1 view .LVU44
 202               	.LBB11:
 203               		.loc 1 123 7 view .LVU45
 204               		.loc 1 123 7 view .LVU46
 205               		.loc 1 123 7 view .LVU47
 206 00a6 E82F      		mov r30,r24
 207 00a8 F0E0      		ldi r31,0
 208 00aa E050      		subi r30,lo8(-(DIM_CURVE))
 209 00ac F040      		sbci r31,hi8(-(DIM_CURVE))
 210               	/* #APP */
 211               	 ;  123 "quantum/rgblight.c" 1
 212 00ae E491      		lpm r30, Z
 213               		
 214               	 ;  0 "" 2
 215               	.LVL14:
 216               		.loc 1 123 7 view .LVU48
 217               		.loc 1 123 7 is_stmt 0 view .LVU49
 218               	/* #NOAPP */
 219               	.LBE11:
 124:quantum/rgblight.c **** 
 125:quantum/rgblight.c ****   setrgb(r, g, b, led1);
 220               		.loc 1 125 3 is_stmt 1 view .LVU50
 221               	.LBB12:
 222               	.LBI12:
 126:quantum/rgblight.c **** }
 127:quantum/rgblight.c **** 
 128:quantum/rgblight.c **** void setrgb(uint8_t r, uint8_t g, uint8_t b, LED_TYPE *led1) {
 223               		.loc 1 128 6 view .LVU51
 224               	.LBB13:
 129:quantum/rgblight.c ****   (*led1).r = r;
 225               		.loc 1 129 3 view .LVU52
 226               		.loc 1 129 13 is_stmt 0 view .LVU53
 227 00b0 4983      		std Y+1,r20
 130:quantum/rgblight.c ****   (*led1).g = g;
 228               		.loc 1 130 3 is_stmt 1 view .LVU54
 229               		.loc 1 130 13 is_stmt 0 view .LVU55
 230 00b2 9883      		st Y,r25
 131:quantum/rgblight.c ****   (*led1).b = b;
 231               		.loc 1 131 3 is_stmt 1 view .LVU56
 232               		.loc 1 131 13 is_stmt 0 view .LVU57
 233 00b4 EA83      		std Y+2,r30
 234               	.LVL15:
 235               	/* epilogue start */
 236               		.loc 1 131 13 view .LVU58
 237               	.LBE13:
 238               	.LBE12:
 126:quantum/rgblight.c **** 
 239               		.loc 1 126 1 view .LVU59
 240 00b6 DF91      		pop r29
 241 00b8 CF91      		pop r28
 242               	.LVL16:
 126:quantum/rgblight.c **** 
 243               		.loc 1 126 1 view .LVU60
 244 00ba 1F91      		pop r17
 245 00bc 0F91      		pop r16
 246 00be FF90      		pop r15
 247 00c0 EF90      		pop r14
 248 00c2 DF90      		pop r13
 249 00c4 CF90      		pop r12
 250 00c6 0895      		ret
 251               	.LVL17:
 252               	.L3:
 100:quantum/rgblight.c ****         g = val;
 253               		.loc 1 100 9 is_stmt 1 view .LVU61
 101:quantum/rgblight.c ****         b = base + color;
 254               		.loc 1 101 9 view .LVU62
 102:quantum/rgblight.c ****         break;
 255               		.loc 1 102 9 view .LVU63
 102:quantum/rgblight.c ****         break;
 256               		.loc 1 102 11 is_stmt 0 view .LVU64
 257 00c8 862F      		mov r24,r22
 258 00ca 810F      		add r24,r17
 259               	.LVL18:
 103:quantum/rgblight.c ****       case 3:
 260               		.loc 1 103 9 is_stmt 1 view .LVU65
 261 00cc E42F      		mov r30,r20
 262               	.LVL19:
 263               	.L12:
 105:quantum/rgblight.c ****         g = val - color;
 264               		.loc 1 105 11 is_stmt 0 view .LVU66
 265 00ce 412F      		mov r20,r17
 266               	.LVL20:
 106:quantum/rgblight.c ****         b = val;
 267               		.loc 1 106 11 view .LVU67
 268 00d0 2E2F      		mov r18,r30
 108:quantum/rgblight.c ****       case 4:
 269               		.loc 1 108 9 view .LVU68
 270 00d2 00C0      		rjmp .L2
 271               	.LVL21:
 272               	.L8:
 105:quantum/rgblight.c ****         g = val - color;
 273               		.loc 1 105 9 is_stmt 1 view .LVU69
 106:quantum/rgblight.c ****         b = val;
 274               		.loc 1 106 9 view .LVU70
 106:quantum/rgblight.c ****         b = val;
 275               		.loc 1 106 11 is_stmt 0 view .LVU71
 276 00d4 E42F      		mov r30,r20
 277 00d6 E61B      		sub r30,r22
 278               	.LVL22:
 107:quantum/rgblight.c ****         break;
 279               		.loc 1 107 9 is_stmt 1 view .LVU72
 108:quantum/rgblight.c ****       case 4:
 280               		.loc 1 108 9 view .LVU73
 107:quantum/rgblight.c ****         break;
 281               		.loc 1 107 11 is_stmt 0 view .LVU74
 282 00d8 842F      		mov r24,r20
 283 00da 00C0      		rjmp .L12
 284               	.LVL23:
 285               	.L7:
 110:quantum/rgblight.c ****         g = base;
 286               		.loc 1 110 9 is_stmt 1 view .LVU75
 111:quantum/rgblight.c ****         b = val;
 287               		.loc 1 111 9 view .LVU76
 112:quantum/rgblight.c ****         break;
 288               		.loc 1 112 9 view .LVU77
 113:quantum/rgblight.c ****       case 5:
 289               		.loc 1 113 9 view .LVU78
 112:quantum/rgblight.c ****         break;
 290               		.loc 1 112 11 is_stmt 0 view .LVU79
 291 00dc 842F      		mov r24,r20
 110:quantum/rgblight.c ****         g = base;
 292               		.loc 1 110 11 view .LVU80
 293 00de 462F      		mov r20,r22
 294               	.LVL24:
 110:quantum/rgblight.c ****         g = base;
 295               		.loc 1 110 11 view .LVU81
 296 00e0 410F      		add r20,r17
 113:quantum/rgblight.c ****       case 5:
 297               		.loc 1 113 9 view .LVU82
 298 00e2 00C0      		rjmp .L2
 299               	.LVL25:
 300               	.L10:
  83:quantum/rgblight.c ****   } else {
 301               		.loc 1 83 7 view .LVU83
 302 00e4 842F      		mov r24,r20
 303               	.LVL26:
  82:quantum/rgblight.c ****     b = val;
 304               		.loc 1 82 7 view .LVU84
 305 00e6 242F      		mov r18,r20
 306               	.LVL27:
  82:quantum/rgblight.c ****     b = val;
 307               		.loc 1 82 7 view .LVU85
 308 00e8 00C0      		rjmp .L2
 309               		.cfi_endproc
 310               	.LFE7:
 312               		.section	.text.setrgb,"ax",@progbits
 313               	.global	setrgb
 315               	setrgb:
 316               	.LVL28:
 317               	.LFB8:
 128:quantum/rgblight.c ****   (*led1).r = r;
 318               		.loc 1 128 62 is_stmt 1 view -0
 319               		.cfi_startproc
 320               	/* prologue: function */
 321               	/* frame size = 0 */
 322               	/* stack size = 0 */
 323               	.L__stack_usage = 0
 128:quantum/rgblight.c ****   (*led1).r = r;
 324               		.loc 1 128 62 is_stmt 0 view .LVU87
 325 0000 F901      		movw r30,r18
 129:quantum/rgblight.c ****   (*led1).g = g;
 326               		.loc 1 129 3 is_stmt 1 view .LVU88
 129:quantum/rgblight.c ****   (*led1).g = g;
 327               		.loc 1 129 13 is_stmt 0 view .LVU89
 328 0002 8183      		std Z+1,r24
 130:quantum/rgblight.c ****   (*led1).b = b;
 329               		.loc 1 130 3 is_stmt 1 view .LVU90
 130:quantum/rgblight.c ****   (*led1).b = b;
 330               		.loc 1 130 13 is_stmt 0 view .LVU91
 331 0004 6083      		st Z,r22
 332               		.loc 1 131 3 is_stmt 1 view .LVU92
 333               		.loc 1 131 13 is_stmt 0 view .LVU93
 334 0006 4283      		std Z+2,r20
 335               	/* epilogue start */
 132:quantum/rgblight.c **** }
 336               		.loc 1 132 1 view .LVU94
 337 0008 0895      		ret
 338               		.cfi_endproc
 339               	.LFE8:
 341               		.section	.text.eeconfig_read_rgblight,"ax",@progbits
 342               	.global	eeconfig_read_rgblight
 344               	eeconfig_read_rgblight:
 345               	.LFB9:
 133:quantum/rgblight.c **** 
 134:quantum/rgblight.c **** 
 135:quantum/rgblight.c **** uint32_t eeconfig_read_rgblight(void) {
 346               		.loc 1 135 39 is_stmt 1 view -0
 347               		.cfi_startproc
 348               	/* prologue: function */
 349               	/* frame size = 0 */
 350               	/* stack size = 0 */
 351               	.L__stack_usage = 0
 136:quantum/rgblight.c ****   return eeprom_read_dword(EECONFIG_RGBLIGHT);
 352               		.loc 1 136 3 view .LVU96
 353               		.loc 1 136 10 is_stmt 0 view .LVU97
 354 0000 88E0      		ldi r24,lo8(8)
 355 0002 90E0      		ldi r25,0
 356 0004 0C94 0000 		jmp eeprom_read_dword
 357               	.LVL29:
 358               		.cfi_endproc
 359               	.LFE9:
 361               		.section	.text.eeconfig_update_rgblight,"ax",@progbits
 362               	.global	eeconfig_update_rgblight
 364               	eeconfig_update_rgblight:
 365               	.LVL30:
 366               	.LFB10:
 137:quantum/rgblight.c **** }
 138:quantum/rgblight.c **** void eeconfig_update_rgblight(uint32_t val) {
 367               		.loc 1 138 45 is_stmt 1 view -0
 368               		.cfi_startproc
 369               	/* prologue: function */
 370               	/* frame size = 0 */
 371               	/* stack size = 0 */
 372               	.L__stack_usage = 0
 373               		.loc 1 138 45 is_stmt 0 view .LVU99
 374 0000 AB01      		movw r20,r22
 375 0002 BC01      		movw r22,r24
 376               	.LVL31:
 139:quantum/rgblight.c ****   eeprom_update_dword(EECONFIG_RGBLIGHT, val);
 377               		.loc 1 139 3 is_stmt 1 view .LVU100
 378 0004 88E0      		ldi r24,lo8(8)
 379 0006 90E0      		ldi r25,0
 380 0008 0C94 0000 		jmp eeprom_update_dword
 381               	.LVL32:
 382               		.cfi_endproc
 383               	.LFE10:
 385               		.section	.text.eeconfig_update_rgblight_default,"ax",@progbits
 386               	.global	eeconfig_update_rgblight_default
 388               	eeconfig_update_rgblight_default:
 389               	.LFB11:
 140:quantum/rgblight.c **** }
 141:quantum/rgblight.c **** void eeconfig_update_rgblight_default(void) {
 390               		.loc 1 141 45 view -0
 391               		.cfi_startproc
 392               	/* prologue: function */
 393               	/* frame size = 0 */
 394               	/* stack size = 0 */
 395               	.L__stack_usage = 0
 142:quantum/rgblight.c ****   dprintf("eeconfig_update_rgblight_default\n");
 396               		.loc 1 142 48 view .LVU102
 143:quantum/rgblight.c ****   rgblight_config.enable = 1;
 397               		.loc 1 143 3 view .LVU103
 144:quantum/rgblight.c ****   rgblight_config.mode = 1;
 398               		.loc 1 144 3 view .LVU104
 145:quantum/rgblight.c ****   rgblight_config.hue = 0;
 399               		.loc 1 145 3 view .LVU105
 146:quantum/rgblight.c ****   rgblight_config.sat = 255;
 400               		.loc 1 146 3 view .LVU106
 147:quantum/rgblight.c ****   rgblight_config.val = 255;
 401               		.loc 1 147 3 view .LVU107
 143:quantum/rgblight.c ****   rgblight_config.mode = 1;
 402               		.loc 1 143 26 is_stmt 0 view .LVU108
 403 0000 E0E0      		ldi r30,lo8(rgblight_config)
 404 0002 F0E0      		ldi r31,hi8(rgblight_config)
 405 0004 83E0      		ldi r24,lo8(3)
 406 0006 8083      		st Z,r24
 145:quantum/rgblight.c ****   rgblight_config.sat = 255;
 407               		.loc 1 145 23 view .LVU109
 408 0008 1182      		std Z+1,__zero_reg__
 146:quantum/rgblight.c ****   rgblight_config.val = 255;
 409               		.loc 1 146 23 view .LVU110
 410 000a 8FEF      		ldi r24,lo8(-1)
 411 000c 8283      		std Z+2,r24
 412               		.loc 1 147 23 view .LVU111
 413 000e 8383      		std Z+3,r24
 148:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 414               		.loc 1 148 3 is_stmt 1 view .LVU112
 415 0010 6091 0000 		lds r22,rgblight_config
 416 0014 7091 0000 		lds r23,rgblight_config+1
 417 0018 8091 0000 		lds r24,rgblight_config+2
 418 001c 9091 0000 		lds r25,rgblight_config+3
 419 0020 0C94 0000 		jmp eeconfig_update_rgblight
 420               	.LVL33:
 421               		.cfi_endproc
 422               	.LFE11:
 424               		.section	.text.eeconfig_debug_rgblight,"ax",@progbits
 425               	.global	eeconfig_debug_rgblight
 427               	eeconfig_debug_rgblight:
 428               	.LFB12:
 149:quantum/rgblight.c **** }
 150:quantum/rgblight.c **** void eeconfig_debug_rgblight(void) {
 429               		.loc 1 150 36 view -0
 430               		.cfi_startproc
 431               	/* prologue: function */
 432               	/* frame size = 0 */
 433               	/* stack size = 0 */
 434               	.L__stack_usage = 0
 151:quantum/rgblight.c ****   dprintf("rgblight_config eprom\n");
 435               		.loc 1 151 37 view .LVU114
 152:quantum/rgblight.c ****   dprintf("rgblight_config.enable = %d\n", rgblight_config.enable);
 436               		.loc 1 152 67 view .LVU115
 153:quantum/rgblight.c ****   dprintf("rghlight_config.mode = %d\n", rgblight_config.mode);
 437               		.loc 1 153 63 view .LVU116
 154:quantum/rgblight.c ****   dprintf("rgblight_config.hue = %d\n", rgblight_config.hue);
 438               		.loc 1 154 61 view .LVU117
 155:quantum/rgblight.c ****   dprintf("rgblight_config.sat = %d\n", rgblight_config.sat);
 439               		.loc 1 155 61 view .LVU118
 156:quantum/rgblight.c ****   dprintf("rgblight_config.val = %d\n", rgblight_config.val);
 440               		.loc 1 156 61 view .LVU119
 441               	/* epilogue start */
 157:quantum/rgblight.c **** }
 442               		.loc 1 157 1 is_stmt 0 view .LVU120
 443 0000 0895      		ret
 444               		.cfi_endproc
 445               	.LFE12:
 447               		.section	.text.rgblight_set,"ax",@progbits
 448               		.weak	rgblight_set
 450               	rgblight_set:
 451               	.LFB30:
 158:quantum/rgblight.c **** 
 159:quantum/rgblight.c **** void rgblight_init(void) {
 160:quantum/rgblight.c ****   debug_enable = 1; // Debug ON!
 161:quantum/rgblight.c ****   dprintf("rgblight_init called.\n");
 162:quantum/rgblight.c ****   rgblight_inited = 1;
 163:quantum/rgblight.c ****   dprintf("rgblight_init start!\n");
 164:quantum/rgblight.c ****   if (!eeconfig_is_enabled()) {
 165:quantum/rgblight.c ****     dprintf("rgblight_init eeconfig is not enabled.\n");
 166:quantum/rgblight.c ****     eeconfig_init();
 167:quantum/rgblight.c ****     eeconfig_update_rgblight_default();
 168:quantum/rgblight.c ****   }
 169:quantum/rgblight.c ****   rgblight_config.raw = eeconfig_read_rgblight();
 170:quantum/rgblight.c ****   if (!rgblight_config.mode) {
 171:quantum/rgblight.c ****     dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 172:quantum/rgblight.c ****     eeconfig_update_rgblight_default();
 173:quantum/rgblight.c ****     rgblight_config.raw = eeconfig_read_rgblight();
 174:quantum/rgblight.c ****   }
 175:quantum/rgblight.c ****   eeconfig_debug_rgblight(); // display current eeprom values
 176:quantum/rgblight.c **** 
 177:quantum/rgblight.c ****   #ifdef RGBLIGHT_ANIMATIONS
 178:quantum/rgblight.c ****     rgblight_timer_init(); // setup the timer
 179:quantum/rgblight.c ****   #endif
 180:quantum/rgblight.c **** 
 181:quantum/rgblight.c ****   if (rgblight_config.enable) {
 182:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 183:quantum/rgblight.c ****   }
 184:quantum/rgblight.c **** }
 185:quantum/rgblight.c **** 
 186:quantum/rgblight.c **** void rgblight_update_dword(uint32_t dword) {
 187:quantum/rgblight.c ****   rgblight_config.raw = dword;
 188:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 189:quantum/rgblight.c ****   if (rgblight_config.enable)
 190:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 191:quantum/rgblight.c ****   else {
 192:quantum/rgblight.c ****     #ifdef RGBLIGHT_ANIMATIONS
 193:quantum/rgblight.c ****       rgblight_timer_disable();
 194:quantum/rgblight.c ****     #endif
 195:quantum/rgblight.c ****       rgblight_set();
 196:quantum/rgblight.c ****   }
 197:quantum/rgblight.c **** }
 198:quantum/rgblight.c **** 
 199:quantum/rgblight.c **** void rgblight_increase(void) {
 200:quantum/rgblight.c ****   uint8_t mode = 0;
 201:quantum/rgblight.c ****   if (rgblight_config.mode < RGBLIGHT_MODES) {
 202:quantum/rgblight.c ****     mode = rgblight_config.mode + 1;
 203:quantum/rgblight.c ****   }
 204:quantum/rgblight.c ****   rgblight_mode(mode);
 205:quantum/rgblight.c **** }
 206:quantum/rgblight.c **** void rgblight_decrease(void) {
 207:quantum/rgblight.c ****   uint8_t mode = 0;
 208:quantum/rgblight.c ****   // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 209:quantum/rgblight.c ****   if (rgblight_config.mode > 1) {
 210:quantum/rgblight.c ****     mode = rgblight_config.mode - 1;
 211:quantum/rgblight.c ****   }
 212:quantum/rgblight.c ****   rgblight_mode(mode);
 213:quantum/rgblight.c **** }
 214:quantum/rgblight.c **** void rgblight_step(void) {
 215:quantum/rgblight.c ****   uint8_t mode = 0;
 216:quantum/rgblight.c ****   mode = rgblight_config.mode + 1;
 217:quantum/rgblight.c ****   if (mode > RGBLIGHT_MODES) {
 218:quantum/rgblight.c ****     mode = 1;
 219:quantum/rgblight.c ****   }
 220:quantum/rgblight.c ****   rgblight_mode(mode);
 221:quantum/rgblight.c **** }
 222:quantum/rgblight.c **** 
 223:quantum/rgblight.c **** void rgblight_mode(uint8_t mode) {
 224:quantum/rgblight.c ****   if (!rgblight_config.enable) {
 225:quantum/rgblight.c ****     return;
 226:quantum/rgblight.c ****   }
 227:quantum/rgblight.c ****   if (mode < 1) {
 228:quantum/rgblight.c ****     rgblight_config.mode = 1;
 229:quantum/rgblight.c ****   } else if (mode > RGBLIGHT_MODES) {
 230:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODES;
 231:quantum/rgblight.c ****   } else {
 232:quantum/rgblight.c ****     rgblight_config.mode = mode;
 233:quantum/rgblight.c ****   }
 234:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 235:quantum/rgblight.c ****   xprintf("rgblight mode: %u\n", rgblight_config.mode);
 236:quantum/rgblight.c ****   if (rgblight_config.mode == 1) {
 237:quantum/rgblight.c ****     #ifdef RGBLIGHT_ANIMATIONS
 238:quantum/rgblight.c ****       rgblight_timer_disable();
 239:quantum/rgblight.c ****     #endif
 240:quantum/rgblight.c ****   } else if (rgblight_config.mode >= 2 && rgblight_config.mode <= 23) {
 241:quantum/rgblight.c ****     // MODE 2-5, breathing
 242:quantum/rgblight.c ****     // MODE 6-8, rainbow mood
 243:quantum/rgblight.c ****     // MODE 9-14, rainbow swirl
 244:quantum/rgblight.c ****     // MODE 15-20, snake
 245:quantum/rgblight.c ****     // MODE 21-23, knight
 246:quantum/rgblight.c **** 
 247:quantum/rgblight.c ****     #ifdef RGBLIGHT_ANIMATIONS
 248:quantum/rgblight.c ****       rgblight_timer_enable();
 249:quantum/rgblight.c ****     #endif
 250:quantum/rgblight.c ****   }
 251:quantum/rgblight.c ****   rgblight_sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val);
 252:quantum/rgblight.c **** }
 253:quantum/rgblight.c **** 
 254:quantum/rgblight.c **** void rgblight_toggle(void) {
 255:quantum/rgblight.c ****   rgblight_config.enable ^= 1;
 256:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 257:quantum/rgblight.c ****   xprintf("rgblight toggle: rgblight_config.enable = %u\n", rgblight_config.enable);
 258:quantum/rgblight.c ****   if (rgblight_config.enable) {
 259:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 260:quantum/rgblight.c ****   } else {
 261:quantum/rgblight.c ****     #ifdef RGBLIGHT_ANIMATIONS
 262:quantum/rgblight.c ****       rgblight_timer_disable();
 263:quantum/rgblight.c ****     #endif
 264:quantum/rgblight.c ****     _delay_ms(50);
 265:quantum/rgblight.c ****     rgblight_set();
 266:quantum/rgblight.c ****   }
 267:quantum/rgblight.c **** }
 268:quantum/rgblight.c **** 
 269:quantum/rgblight.c **** void rgblight_enable(void) {
 270:quantum/rgblight.c ****   rgblight_config.enable = 1;
 271:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 272:quantum/rgblight.c ****   xprintf("rgblight enable: rgblight_config.enable = %u\n", rgblight_config.enable);
 273:quantum/rgblight.c ****   rgblight_mode(rgblight_config.mode);
 274:quantum/rgblight.c **** }
 275:quantum/rgblight.c **** 
 276:quantum/rgblight.c **** 
 277:quantum/rgblight.c **** void rgblight_increase_hue(void) {
 278:quantum/rgblight.c ****   uint16_t hue;
 279:quantum/rgblight.c ****   hue = (rgblight_config.hue+RGBLIGHT_HUE_STEP) % 360;
 280:quantum/rgblight.c ****   rgblight_sethsv(hue, rgblight_config.sat, rgblight_config.val);
 281:quantum/rgblight.c **** }
 282:quantum/rgblight.c **** void rgblight_decrease_hue(void) {
 283:quantum/rgblight.c ****   uint16_t hue;
 284:quantum/rgblight.c ****   if (rgblight_config.hue-RGBLIGHT_HUE_STEP < 0) {
 285:quantum/rgblight.c ****     hue = (rgblight_config.hue + 360 - RGBLIGHT_HUE_STEP) % 360;
 286:quantum/rgblight.c ****   } else {
 287:quantum/rgblight.c ****     hue = (rgblight_config.hue - RGBLIGHT_HUE_STEP) % 360;
 288:quantum/rgblight.c ****   }
 289:quantum/rgblight.c ****   rgblight_sethsv(hue, rgblight_config.sat, rgblight_config.val);
 290:quantum/rgblight.c **** }
 291:quantum/rgblight.c **** void rgblight_increase_sat(void) {
 292:quantum/rgblight.c ****   uint8_t sat;
 293:quantum/rgblight.c ****   if (rgblight_config.sat + RGBLIGHT_SAT_STEP > 255) {
 294:quantum/rgblight.c ****     sat = 255;
 295:quantum/rgblight.c ****   } else {
 296:quantum/rgblight.c ****     sat = rgblight_config.sat + RGBLIGHT_SAT_STEP;
 297:quantum/rgblight.c ****   }
 298:quantum/rgblight.c ****   rgblight_sethsv(rgblight_config.hue, sat, rgblight_config.val);
 299:quantum/rgblight.c **** }
 300:quantum/rgblight.c **** void rgblight_decrease_sat(void) {
 301:quantum/rgblight.c ****   uint8_t sat;
 302:quantum/rgblight.c ****   if (rgblight_config.sat - RGBLIGHT_SAT_STEP < 0) {
 303:quantum/rgblight.c ****     sat = 0;
 304:quantum/rgblight.c ****   } else {
 305:quantum/rgblight.c ****     sat = rgblight_config.sat - RGBLIGHT_SAT_STEP;
 306:quantum/rgblight.c ****   }
 307:quantum/rgblight.c ****   rgblight_sethsv(rgblight_config.hue, sat, rgblight_config.val);
 308:quantum/rgblight.c **** }
 309:quantum/rgblight.c **** void rgblight_increase_val(void) {
 310:quantum/rgblight.c ****   uint8_t val;
 311:quantum/rgblight.c ****   if (rgblight_config.val + RGBLIGHT_VAL_STEP > 255) {
 312:quantum/rgblight.c ****     val = 255;
 313:quantum/rgblight.c ****   } else {
 314:quantum/rgblight.c ****     val = rgblight_config.val + RGBLIGHT_VAL_STEP;
 315:quantum/rgblight.c ****   }
 316:quantum/rgblight.c ****   rgblight_sethsv(rgblight_config.hue, rgblight_config.sat, val);
 317:quantum/rgblight.c **** }
 318:quantum/rgblight.c **** void rgblight_decrease_val(void) {
 319:quantum/rgblight.c ****   uint8_t val;
 320:quantum/rgblight.c ****   if (rgblight_config.val - RGBLIGHT_VAL_STEP < 0) {
 321:quantum/rgblight.c ****     val = 0;
 322:quantum/rgblight.c ****   } else {
 323:quantum/rgblight.c ****     val = rgblight_config.val - RGBLIGHT_VAL_STEP;
 324:quantum/rgblight.c ****   }
 325:quantum/rgblight.c ****   rgblight_sethsv(rgblight_config.hue, rgblight_config.sat, val);
 326:quantum/rgblight.c **** }
 327:quantum/rgblight.c **** 
 328:quantum/rgblight.c **** void rgblight_sethsv_noeeprom(uint16_t hue, uint8_t sat, uint8_t val) {
 329:quantum/rgblight.c ****   inmem_config.raw = rgblight_config.raw;
 330:quantum/rgblight.c ****   if (rgblight_config.enable) {
 331:quantum/rgblight.c ****     LED_TYPE tmp_led;
 332:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 333:quantum/rgblight.c ****     inmem_config.hue = hue;
 334:quantum/rgblight.c ****     inmem_config.sat = sat;
 335:quantum/rgblight.c ****     inmem_config.val = val;
 336:quantum/rgblight.c ****     // dprintf("rgblight set hue [MEMORY]: %u,%u,%u\n", inmem_config.hue, inmem_config.sat, inmem_c
 337:quantum/rgblight.c ****     rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 338:quantum/rgblight.c ****   }
 339:quantum/rgblight.c **** }
 340:quantum/rgblight.c **** void rgblight_sethsv(uint16_t hue, uint8_t sat, uint8_t val) {
 341:quantum/rgblight.c ****   if (rgblight_config.enable) {
 342:quantum/rgblight.c ****     if (rgblight_config.mode == 1) {
 343:quantum/rgblight.c ****       // same static color
 344:quantum/rgblight.c ****       rgblight_sethsv_noeeprom(hue, sat, val);
 345:quantum/rgblight.c ****     } else {
 346:quantum/rgblight.c ****       // all LEDs in same color
 347:quantum/rgblight.c ****       if (rgblight_config.mode >= 2 && rgblight_config.mode <= 5) {
 348:quantum/rgblight.c ****         // breathing mode, ignore the change of val, use in memory value instead
 349:quantum/rgblight.c ****         val = rgblight_config.val;
 350:quantum/rgblight.c ****       } else if (rgblight_config.mode >= 6 && rgblight_config.mode <= 14) {
 351:quantum/rgblight.c ****         // rainbow mood and rainbow swirl, ignore the change of hue
 352:quantum/rgblight.c ****         hue = rgblight_config.hue;
 353:quantum/rgblight.c ****       }
 354:quantum/rgblight.c ****     }
 355:quantum/rgblight.c ****     rgblight_config.hue = hue;
 356:quantum/rgblight.c ****     rgblight_config.sat = sat;
 357:quantum/rgblight.c ****     rgblight_config.val = val;
 358:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 359:quantum/rgblight.c ****     xprintf("rgblight set hsv [EEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config.sat, rgbl
 360:quantum/rgblight.c ****   }
 361:quantum/rgblight.c **** }
 362:quantum/rgblight.c **** 
 363:quantum/rgblight.c **** void rgblight_setrgb(uint8_t r, uint8_t g, uint8_t b) {
 364:quantum/rgblight.c ****   // dprintf("rgblight set rgb: %u,%u,%u\n", r,g,b);
 365:quantum/rgblight.c ****   for (uint8_t i = 0; i < RGBLED_NUM; i++) {
 366:quantum/rgblight.c ****     led[i].r = r;
 367:quantum/rgblight.c ****     led[i].g = g;
 368:quantum/rgblight.c ****     led[i].b = b;
 369:quantum/rgblight.c ****   }
 370:quantum/rgblight.c ****   rgblight_set();
 371:quantum/rgblight.c **** }
 372:quantum/rgblight.c **** 
 373:quantum/rgblight.c **** __attribute__ ((weak))
 374:quantum/rgblight.c **** void rgblight_set(void) {
 452               		.loc 1 374 25 is_stmt 1 view -0
 453               		.cfi_startproc
 454               	/* prologue: function */
 455               	/* frame size = 0 */
 456               	/* stack size = 0 */
 457               	.L__stack_usage = 0
 375:quantum/rgblight.c ****   if (rgblight_config.enable) {
 458               		.loc 1 375 3 view .LVU122
 459               		.loc 1 375 7 is_stmt 0 view .LVU123
 460 0000 8091 0000 		lds r24,rgblight_config
 461 0004 E0E0      		ldi r30,lo8(led)
 462 0006 F0E0      		ldi r31,hi8(led)
 463               		.loc 1 375 6 view .LVU124
 464 0008 80FF      		sbrs r24,0
 465 000a 00C0      		rjmp .L20
 466               	.L21:
 376:quantum/rgblight.c ****     #ifdef RGBW
 377:quantum/rgblight.c ****       ws2812_setleds_rgbw(led, RGBLED_NUM);
 378:quantum/rgblight.c ****     #else
 379:quantum/rgblight.c ****       ws2812_setleds(led, RGBLED_NUM);
 467               		.loc 1 379 7 is_stmt 1 view .LVU125
 468 000c 66E0      		ldi r22,lo8(6)
 469 000e 70E0      		ldi r23,0
 470 0010 80E0      		ldi r24,lo8(led)
 471 0012 90E0      		ldi r25,hi8(led)
 472 0014 0C94 0000 		jmp ws2812_setleds
 473               	.LVL34:
 474               	.L20:
 475               	.LBB14:
 380:quantum/rgblight.c ****     #endif
 381:quantum/rgblight.c ****   } else {
 382:quantum/rgblight.c ****     for (uint8_t i = 0; i < RGBLED_NUM; i++) {
 383:quantum/rgblight.c ****       led[i].r = 0;
 476               		.loc 1 383 7 discriminator 3 view .LVU126
 477               		.loc 1 383 16 is_stmt 0 discriminator 3 view .LVU127
 478 0018 1182      		std Z+1,__zero_reg__
 384:quantum/rgblight.c ****       led[i].g = 0;
 479               		.loc 1 384 7 is_stmt 1 discriminator 3 view .LVU128
 480               		.loc 1 384 16 is_stmt 0 discriminator 3 view .LVU129
 481 001a 1082      		st Z,__zero_reg__
 385:quantum/rgblight.c ****       led[i].b = 0;
 482               		.loc 1 385 7 is_stmt 1 discriminator 3 view .LVU130
 483               		.loc 1 385 16 is_stmt 0 discriminator 3 view .LVU131
 484 001c 1282      		std Z+2,__zero_reg__
 485               	.LVL35:
 486               		.loc 1 385 16 discriminator 3 view .LVU132
 487 001e 3396      		adiw r30,3
 382:quantum/rgblight.c ****       led[i].r = 0;
 488               		.loc 1 382 5 discriminator 3 view .LVU133
 489 0020 80E0      		ldi r24,hi8(led+18)
 490 0022 E030      		cpi r30,lo8(led+18)
 491 0024 F807      		cpc r31,r24
 492 0026 01F4      		brne .L20
 493 0028 00C0      		rjmp .L21
 494               	.LBE14:
 495               		.cfi_endproc
 496               	.LFE30:
 498               		.section	.text.rgblight_setrgb,"ax",@progbits
 499               	.global	rgblight_setrgb
 501               	rgblight_setrgb:
 502               	.LVL36:
 503               	.LFB29:
 363:quantum/rgblight.c ****   // dprintf("rgblight set rgb: %u,%u,%u\n", r,g,b);
 504               		.loc 1 363 55 is_stmt 1 view -0
 505               		.cfi_startproc
 506               	/* prologue: function */
 507               	/* frame size = 0 */
 508               	/* stack size = 0 */
 509               	.L__stack_usage = 0
 365:quantum/rgblight.c ****     led[i].r = r;
 510               		.loc 1 365 3 view .LVU135
 511               	.LBB15:
 365:quantum/rgblight.c ****     led[i].r = r;
 512               		.loc 1 365 8 view .LVU136
 365:quantum/rgblight.c ****     led[i].r = r;
 513               		.loc 1 365 8 is_stmt 0 view .LVU137
 514 0000 E0E0      		ldi r30,lo8(led)
 515 0002 F0E0      		ldi r31,hi8(led)
 516               	.LVL37:
 517               	.L24:
 366:quantum/rgblight.c ****     led[i].g = g;
 518               		.loc 1 366 5 is_stmt 1 discriminator 3 view .LVU138
 366:quantum/rgblight.c ****     led[i].g = g;
 519               		.loc 1 366 14 is_stmt 0 discriminator 3 view .LVU139
 520 0004 8183      		std Z+1,r24
 367:quantum/rgblight.c ****     led[i].b = b;
 521               		.loc 1 367 5 is_stmt 1 discriminator 3 view .LVU140
 367:quantum/rgblight.c ****     led[i].b = b;
 522               		.loc 1 367 14 is_stmt 0 discriminator 3 view .LVU141
 523 0006 6083      		st Z,r22
 368:quantum/rgblight.c ****   }
 524               		.loc 1 368 5 is_stmt 1 discriminator 3 view .LVU142
 368:quantum/rgblight.c ****   }
 525               		.loc 1 368 14 is_stmt 0 discriminator 3 view .LVU143
 526 0008 4283      		std Z+2,r20
 368:quantum/rgblight.c ****   }
 527               		.loc 1 368 14 discriminator 3 view .LVU144
 528 000a 3396      		adiw r30,3
 365:quantum/rgblight.c ****     led[i].r = r;
 529               		.loc 1 365 3 discriminator 3 view .LVU145
 530 000c 90E0      		ldi r25,hi8(led+18)
 531 000e E030      		cpi r30,lo8(led+18)
 532 0010 F907      		cpc r31,r25
 533 0012 01F4      		brne .L24
 365:quantum/rgblight.c ****     led[i].r = r;
 534               		.loc 1 365 3 discriminator 3 view .LVU146
 535               	.LBE15:
 370:quantum/rgblight.c **** }
 536               		.loc 1 370 3 is_stmt 1 view .LVU147
 537 0014 0C94 0000 		jmp rgblight_set
 538               	.LVL38:
 370:quantum/rgblight.c **** }
 539               		.loc 1 370 3 is_stmt 0 view .LVU148
 540               		.cfi_endproc
 541               	.LFE29:
 543               		.section	.text.rgblight_sethsv_noeeprom,"ax",@progbits
 544               	.global	rgblight_sethsv_noeeprom
 546               	rgblight_sethsv_noeeprom:
 547               	.LVL39:
 548               	.LFB27:
 328:quantum/rgblight.c ****   inmem_config.raw = rgblight_config.raw;
 549               		.loc 1 328 71 is_stmt 1 view -0
 550               		.cfi_startproc
 328:quantum/rgblight.c ****   inmem_config.raw = rgblight_config.raw;
 551               		.loc 1 328 71 is_stmt 0 view .LVU150
 552 0000 EF92      		push r14
 553               	.LCFI8:
 554               		.cfi_def_cfa_offset 3
 555               		.cfi_offset 14, -2
 556 0002 FF92      		push r15
 557               	.LCFI9:
 558               		.cfi_def_cfa_offset 4
 559               		.cfi_offset 15, -3
 560 0004 0F93      		push r16
 561               	.LCFI10:
 562               		.cfi_def_cfa_offset 5
 563               		.cfi_offset 16, -4
 564 0006 1F93      		push r17
 565               	.LCFI11:
 566               		.cfi_def_cfa_offset 6
 567               		.cfi_offset 17, -5
 568 0008 CF93      		push r28
 569               	.LCFI12:
 570               		.cfi_def_cfa_offset 7
 571               		.cfi_offset 28, -6
 572 000a DF93      		push r29
 573               	.LCFI13:
 574               		.cfi_def_cfa_offset 8
 575               		.cfi_offset 29, -7
 576 000c 00D0      		rcall .
 577 000e 0F92      		push __tmp_reg__
 578               	.LCFI14:
 579               		.cfi_def_cfa_offset 11
 580 0010 CDB7      		in r28,__SP_L__
 581 0012 DEB7      		in r29,__SP_H__
 582               	.LCFI15:
 583               		.cfi_def_cfa_register 28
 584               	/* prologue: function */
 585               	/* frame size = 3 */
 586               	/* stack size = 9 */
 587               	.L__stack_usage = 9
 588 0014 182F      		mov r17,r24
 589 0016 E92E      		mov r14,r25
 590 0018 F62E      		mov r15,r22
 591 001a 042F      		mov r16,r20
 329:quantum/rgblight.c ****   if (rgblight_config.enable) {
 592               		.loc 1 329 3 is_stmt 1 view .LVU151
 329:quantum/rgblight.c ****   if (rgblight_config.enable) {
 593               		.loc 1 329 20 is_stmt 0 view .LVU152
 594 001c 8091 0000 		lds r24,rgblight_config
 595 0020 9091 0000 		lds r25,rgblight_config+1
 596 0024 A091 0000 		lds r26,rgblight_config+2
 597 0028 B091 0000 		lds r27,rgblight_config+3
 598               	.LVL40:
 329:quantum/rgblight.c ****   if (rgblight_config.enable) {
 599               		.loc 1 329 20 view .LVU153
 600 002c 8093 0000 		sts inmem_config,r24
 601 0030 9093 0000 		sts inmem_config+1,r25
 602 0034 A093 0000 		sts inmem_config+2,r26
 603 0038 B093 0000 		sts inmem_config+3,r27
 330:quantum/rgblight.c ****     LED_TYPE tmp_led;
 604               		.loc 1 330 3 is_stmt 1 view .LVU154
 330:quantum/rgblight.c ****     LED_TYPE tmp_led;
 605               		.loc 1 330 7 is_stmt 0 view .LVU155
 606 003c 8091 0000 		lds r24,rgblight_config
 330:quantum/rgblight.c ****     LED_TYPE tmp_led;
 607               		.loc 1 330 6 view .LVU156
 608 0040 80FF      		sbrs r24,0
 609 0042 00C0      		rjmp .L26
 610               	.LBB16:
 331:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 611               		.loc 1 331 5 is_stmt 1 view .LVU157
 332:quantum/rgblight.c ****     inmem_config.hue = hue;
 612               		.loc 1 332 5 view .LVU158
 613 0044 9E01      		movw r18,r28
 614 0046 2F5F      		subi r18,-1
 615 0048 3F4F      		sbci r19,-1
 616 004a 812F      		mov r24,r17
 617 004c 9E2D      		mov r25,r14
 618 004e 0E94 0000 		call sethsv
 619               	.LVL41:
 333:quantum/rgblight.c ****     inmem_config.sat = sat;
 620               		.loc 1 333 5 view .LVU159
 333:quantum/rgblight.c ****     inmem_config.sat = sat;
 621               		.loc 1 333 22 is_stmt 0 view .LVU160
 622 0052 8091 0000 		lds r24,inmem_config
 623 0056 10FB      		bst r17,0
 624 0058 87F9      		bld r24,7
 625 005a 8093 0000 		sts inmem_config,r24
 626 005e 1695      		lsr r17
 627 0060 8091 0000 		lds r24,inmem_config+1
 628 0064 8078      		andi r24,lo8(-128)
 629 0066 812B      		or r24,r17
 630 0068 E0FA      		bst r14,0
 631 006a 87F9      		bld r24,7
 632 006c 8093 0000 		sts inmem_config+1,r24
 334:quantum/rgblight.c ****     inmem_config.val = val;
 633               		.loc 1 334 5 is_stmt 1 view .LVU161
 334:quantum/rgblight.c ****     inmem_config.val = val;
 634               		.loc 1 334 22 is_stmt 0 view .LVU162
 635 0070 F092 0000 		sts inmem_config+2,r15
 335:quantum/rgblight.c ****     // dprintf("rgblight set hue [MEMORY]: %u,%u,%u\n", inmem_config.hue, inmem_config.sat, inmem_c
 636               		.loc 1 335 5 is_stmt 1 view .LVU163
 335:quantum/rgblight.c ****     // dprintf("rgblight set hue [MEMORY]: %u,%u,%u\n", inmem_config.hue, inmem_config.sat, inmem_c
 637               		.loc 1 335 22 is_stmt 0 view .LVU164
 638 0074 0093 0000 		sts inmem_config+3,r16
 337:quantum/rgblight.c ****   }
 639               		.loc 1 337 5 is_stmt 1 view .LVU165
 640 0078 4B81      		ldd r20,Y+3
 641 007a 6981      		ldd r22,Y+1
 642 007c 8A81      		ldd r24,Y+2
 643 007e 0E94 0000 		call rgblight_setrgb
 644               	.LVL42:
 645               	.L26:
 646               	/* epilogue start */
 647               	.LBE16:
 339:quantum/rgblight.c **** void rgblight_sethsv(uint16_t hue, uint8_t sat, uint8_t val) {
 648               		.loc 1 339 1 is_stmt 0 view .LVU166
 649 0082 0F90      		pop __tmp_reg__
 650 0084 0F90      		pop __tmp_reg__
 651 0086 0F90      		pop __tmp_reg__
 652 0088 DF91      		pop r29
 653 008a CF91      		pop r28
 654 008c 1F91      		pop r17
 655 008e 0F91      		pop r16
 656               	.LVL43:
 339:quantum/rgblight.c **** void rgblight_sethsv(uint16_t hue, uint8_t sat, uint8_t val) {
 657               		.loc 1 339 1 view .LVU167
 658 0090 FF90      		pop r15
 659               	.LVL44:
 339:quantum/rgblight.c **** void rgblight_sethsv(uint16_t hue, uint8_t sat, uint8_t val) {
 660               		.loc 1 339 1 view .LVU168
 661 0092 EF90      		pop r14
 662 0094 0895      		ret
 663               		.cfi_endproc
 664               	.LFE27:
 666               		.section	.text.rgblight_sethsv,"ax",@progbits
 667               	.global	rgblight_sethsv
 669               	rgblight_sethsv:
 670               	.LVL45:
 671               	.LFB28:
 340:quantum/rgblight.c ****   if (rgblight_config.enable) {
 672               		.loc 1 340 62 is_stmt 1 view -0
 673               		.cfi_startproc
 340:quantum/rgblight.c ****   if (rgblight_config.enable) {
 674               		.loc 1 340 62 is_stmt 0 view .LVU170
 675 0000 0F93      		push r16
 676               	.LCFI16:
 677               		.cfi_def_cfa_offset 3
 678               		.cfi_offset 16, -2
 679 0002 1F93      		push r17
 680               	.LCFI17:
 681               		.cfi_def_cfa_offset 4
 682               		.cfi_offset 17, -3
 683 0004 CF93      		push r28
 684               	.LCFI18:
 685               		.cfi_def_cfa_offset 5
 686               		.cfi_offset 28, -4
 687 0006 DF93      		push r29
 688               	.LCFI19:
 689               		.cfi_def_cfa_offset 6
 690               		.cfi_offset 29, -5
 691               	/* prologue: function */
 692               	/* frame size = 0 */
 693               	/* stack size = 4 */
 694               	.L__stack_usage = 4
 695 0008 EC01      		movw r28,r24
 696 000a 062F      		mov r16,r22
 697 000c 142F      		mov r17,r20
 341:quantum/rgblight.c ****     if (rgblight_config.mode == 1) {
 698               		.loc 1 341 3 is_stmt 1 view .LVU171
 341:quantum/rgblight.c ****     if (rgblight_config.mode == 1) {
 699               		.loc 1 341 7 is_stmt 0 view .LVU172
 700 000e 9091 0000 		lds r25,rgblight_config
 341:quantum/rgblight.c ****     if (rgblight_config.mode == 1) {
 701               		.loc 1 341 6 view .LVU173
 702 0012 90FF      		sbrs r25,0
 703 0014 00C0      		rjmp .L31
 342:quantum/rgblight.c ****       // same static color
 704               		.loc 1 342 5 is_stmt 1 view .LVU174
 342:quantum/rgblight.c ****       // same static color
 705               		.loc 1 342 30 is_stmt 0 view .LVU175
 706 0016 892F      		mov r24,r25
 707               	.LVL46:
 342:quantum/rgblight.c ****       // same static color
 708               		.loc 1 342 30 view .LVU176
 709 0018 8E77      		andi r24,lo8(126)
 342:quantum/rgblight.c ****       // same static color
 710               		.loc 1 342 8 view .LVU177
 711 001a 8230      		cpi r24,lo8(2)
 712 001c 01F4      		brne .L33
 344:quantum/rgblight.c ****     } else {
 713               		.loc 1 344 7 is_stmt 1 view .LVU178
 714 001e CE01      		movw r24,r28
 715 0020 0E94 0000 		call rgblight_sethsv_noeeprom
 716               	.LVL47:
 717               	.L34:
 355:quantum/rgblight.c ****     rgblight_config.sat = sat;
 718               		.loc 1 355 5 view .LVU179
 355:quantum/rgblight.c ****     rgblight_config.sat = sat;
 719               		.loc 1 355 25 is_stmt 0 view .LVU180
 720 0024 8091 0000 		lds r24,rgblight_config
 721 0028 C0FB      		bst r28,0
 722 002a 87F9      		bld r24,7
 723 002c 8093 0000 		sts rgblight_config,r24
 724 0030 C695      		lsr r28
 725               	.LVL48:
 355:quantum/rgblight.c ****     rgblight_config.sat = sat;
 726               		.loc 1 355 25 view .LVU181
 727 0032 8091 0000 		lds r24,rgblight_config+1
 728 0036 8078      		andi r24,lo8(-128)
 729 0038 C82B      		or r28,r24
 730 003a D0FB      		bst r29,0
 731 003c C7F9      		bld r28,7
 732 003e C093 0000 		sts rgblight_config+1,r28
 356:quantum/rgblight.c ****     rgblight_config.val = val;
 733               		.loc 1 356 5 is_stmt 1 view .LVU182
 356:quantum/rgblight.c ****     rgblight_config.val = val;
 734               		.loc 1 356 25 is_stmt 0 view .LVU183
 735 0042 0093 0000 		sts rgblight_config+2,r16
 357:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 736               		.loc 1 357 5 is_stmt 1 view .LVU184
 357:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 737               		.loc 1 357 25 is_stmt 0 view .LVU185
 738 0046 1093 0000 		sts rgblight_config+3,r17
 358:quantum/rgblight.c ****     xprintf("rgblight set hsv [EEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config.sat, rgbl
 739               		.loc 1 358 5 is_stmt 1 view .LVU186
 740 004a 6091 0000 		lds r22,rgblight_config
 741 004e 7091 0000 		lds r23,rgblight_config+1
 742 0052 8091 0000 		lds r24,rgblight_config+2
 743 0056 9091 0000 		lds r25,rgblight_config+3
 744               	/* epilogue start */
 361:quantum/rgblight.c **** 
 745               		.loc 1 361 1 is_stmt 0 view .LVU187
 746 005a DF91      		pop r29
 747 005c CF91      		pop r28
 748 005e 1F91      		pop r17
 749               	.LVL49:
 361:quantum/rgblight.c **** 
 750               		.loc 1 361 1 view .LVU188
 751 0060 0F91      		pop r16
 752               	.LVL50:
 358:quantum/rgblight.c ****     xprintf("rgblight set hsv [EEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config.sat, rgbl
 753               		.loc 1 358 5 view .LVU189
 754 0062 0C94 0000 		jmp eeconfig_update_rgblight
 755               	.LVL51:
 756               	.L33:
 347:quantum/rgblight.c ****         // breathing mode, ignore the change of val, use in memory value instead
 757               		.loc 1 347 7 is_stmt 1 view .LVU190
 347:quantum/rgblight.c ****         // breathing mode, ignore the change of val, use in memory value instead
 758               		.loc 1 347 26 is_stmt 0 view .LVU191
 759 0066 892F      		mov r24,r25
 760 0068 8695      		lsr r24
 761 006a 8F73      		andi r24,lo8(63)
 347:quantum/rgblight.c ****         // breathing mode, ignore the change of val, use in memory value instead
 762               		.loc 1 347 37 view .LVU192
 763 006c 2EE3      		ldi r18,lo8(62)
 764 006e 280F      		add r18,r24
 765 0070 2F73      		andi r18,lo8(63)
 347:quantum/rgblight.c ****         // breathing mode, ignore the change of val, use in memory value instead
 766               		.loc 1 347 10 view .LVU193
 767 0072 2430      		cpi r18,lo8(4)
 768 0074 00F4      		brsh .L35
 349:quantum/rgblight.c ****       } else if (rgblight_config.mode >= 6 && rgblight_config.mode <= 14) {
 769               		.loc 1 349 9 is_stmt 1 view .LVU194
 349:quantum/rgblight.c ****       } else if (rgblight_config.mode >= 6 && rgblight_config.mode <= 14) {
 770               		.loc 1 349 13 is_stmt 0 view .LVU195
 771 0076 1091 0000 		lds r17,rgblight_config+3
 772               	.LVL52:
 349:quantum/rgblight.c ****       } else if (rgblight_config.mode >= 6 && rgblight_config.mode <= 14) {
 773               		.loc 1 349 13 view .LVU196
 774 007a 00C0      		rjmp .L34
 775               	.L35:
 350:quantum/rgblight.c ****         // rainbow mood and rainbow swirl, ignore the change of hue
 776               		.loc 1 350 14 is_stmt 1 view .LVU197
 350:quantum/rgblight.c ****         // rainbow mood and rainbow swirl, ignore the change of hue
 777               		.loc 1 350 44 is_stmt 0 view .LVU198
 778 007c 865C      		subi r24,lo8(-(58))
 779 007e 8F73      		andi r24,lo8(63)
 350:quantum/rgblight.c ****         // rainbow mood and rainbow swirl, ignore the change of hue
 780               		.loc 1 350 17 view .LVU199
 781 0080 8930      		cpi r24,lo8(9)
 782 0082 00F4      		brsh .L34
 352:quantum/rgblight.c ****       }
 783               		.loc 1 352 9 is_stmt 1 view .LVU200
 352:quantum/rgblight.c ****       }
 784               		.loc 1 352 30 is_stmt 0 view .LVU201
 785 0084 991F      		rol r25
 786 0086 9927      		clr r25
 787 0088 991F      		rol r25
 788 008a D091 0000 		lds r29,rgblight_config+1
 789 008e CD2F      		mov r28,r29
 790               	.LVL53:
 352:quantum/rgblight.c ****       }
 791               		.loc 1 352 30 view .LVU202
 792 0090 CC0F      		lsl r28
 793 0092 C92B      		or r28,r25
 794 0094 D7FB      		bst r29,7
 795 0096 DD27      		clr r29
 796 0098 D0F9      		bld r29,0
 797               	.LVL54:
 352:quantum/rgblight.c ****       }
 798               		.loc 1 352 30 view .LVU203
 799 009a 00C0      		rjmp .L34
 800               	.LVL55:
 801               	.L31:
 802               	/* epilogue start */
 361:quantum/rgblight.c **** 
 803               		.loc 1 361 1 view .LVU204
 804 009c DF91      		pop r29
 805 009e CF91      		pop r28
 806 00a0 1F91      		pop r17
 807               	.LVL56:
 361:quantum/rgblight.c **** 
 808               		.loc 1 361 1 view .LVU205
 809 00a2 0F91      		pop r16
 810               	.LVL57:
 361:quantum/rgblight.c **** 
 811               		.loc 1 361 1 view .LVU206
 812 00a4 0895      		ret
 813               		.cfi_endproc
 814               	.LFE28:
 816               		.section	.text.rgblight_increase_hue,"ax",@progbits
 817               	.global	rgblight_increase_hue
 819               	rgblight_increase_hue:
 820               	.LFB21:
 277:quantum/rgblight.c ****   uint16_t hue;
 821               		.loc 1 277 34 is_stmt 1 view -0
 822               		.cfi_startproc
 823               	/* prologue: function */
 824               	/* frame size = 0 */
 825               	/* stack size = 0 */
 826               	.L__stack_usage = 0
 278:quantum/rgblight.c ****   hue = (rgblight_config.hue+RGBLIGHT_HUE_STEP) % 360;
 827               		.loc 1 278 3 view .LVU208
 279:quantum/rgblight.c ****   rgblight_sethsv(hue, rgblight_config.sat, rgblight_config.val);
 828               		.loc 1 279 3 view .LVU209
 829               	.LVL58:
 280:quantum/rgblight.c **** }
 830               		.loc 1 280 3 view .LVU210
 831 0000 E0E0      		ldi r30,lo8(rgblight_config)
 832 0002 F0E0      		ldi r31,hi8(rgblight_config)
 833               	.LVL59:
 279:quantum/rgblight.c ****   rgblight_sethsv(hue, rgblight_config.sat, rgblight_config.val);
 834               		.loc 1 279 25 is_stmt 0 view .LVU211
 835 0004 2081      		ld r18,Z
 836 0006 221F      		rol r18
 837 0008 2227      		clr r18
 838 000a 221F      		rol r18
 839 000c 3091 0000 		lds r19,rgblight_config+1
 840 0010 432F      		mov r20,r19
 841 0012 440F      		lsl r20
 842 0014 842F      		mov r24,r20
 843 0016 822B      		or r24,r18
 844 0018 37FB      		bst r19,7
 845 001a 9927      		clr r25
 846 001c 90F9      		bld r25,0
 279:quantum/rgblight.c ****   rgblight_sethsv(hue, rgblight_config.sat, rgblight_config.val);
 847               		.loc 1 279 29 view .LVU212
 848 001e 0896      		adiw r24,8
 279:quantum/rgblight.c ****   rgblight_sethsv(hue, rgblight_config.sat, rgblight_config.val);
 849               		.loc 1 279 49 view .LVU213
 850 0020 68E6      		ldi r22,lo8(104)
 851 0022 71E0      		ldi r23,lo8(1)
 852 0024 0E94 0000 		call __divmodhi4
 280:quantum/rgblight.c **** }
 853               		.loc 1 280 3 view .LVU214
 854 0028 4381      		ldd r20,Z+3
 855 002a 6281      		ldd r22,Z+2
 856 002c 0C94 0000 		jmp rgblight_sethsv
 857               	.LVL60:
 280:quantum/rgblight.c **** }
 858               		.loc 1 280 3 view .LVU215
 859               		.cfi_endproc
 860               	.LFE21:
 862               		.section	.text.rgblight_decrease_hue,"ax",@progbits
 863               	.global	rgblight_decrease_hue
 865               	rgblight_decrease_hue:
 866               	.LFB22:
 282:quantum/rgblight.c ****   uint16_t hue;
 867               		.loc 1 282 34 is_stmt 1 view -0
 868               		.cfi_startproc
 869               	/* prologue: function */
 870               	/* frame size = 0 */
 871               	/* stack size = 0 */
 872               	.L__stack_usage = 0
 283:quantum/rgblight.c ****   if (rgblight_config.hue-RGBLIGHT_HUE_STEP < 0) {
 873               		.loc 1 283 3 view .LVU217
 284:quantum/rgblight.c ****     hue = (rgblight_config.hue + 360 - RGBLIGHT_HUE_STEP) % 360;
 874               		.loc 1 284 3 view .LVU218
 284:quantum/rgblight.c ****     hue = (rgblight_config.hue + 360 - RGBLIGHT_HUE_STEP) % 360;
 875               		.loc 1 284 22 is_stmt 0 view .LVU219
 876 0000 2091 0000 		lds r18,rgblight_config
 877 0004 221F      		rol r18
 878 0006 2227      		clr r18
 879 0008 221F      		rol r18
 880 000a 3091 0000 		lds r19,rgblight_config+1
 881 000e 432F      		mov r20,r19
 882 0010 440F      		lsl r20
 883 0012 842F      		mov r24,r20
 884 0014 822B      		or r24,r18
 885 0016 37FB      		bst r19,7
 886 0018 9927      		clr r25
 887 001a 90F9      		bld r25,0
 284:quantum/rgblight.c ****     hue = (rgblight_config.hue + 360 - RGBLIGHT_HUE_STEP) % 360;
 888               		.loc 1 284 6 view .LVU220
 889 001c 8830      		cpi r24,8
 890 001e 9105      		cpc r25,__zero_reg__
 891 0020 00F4      		brsh .L38
 285:quantum/rgblight.c ****   } else {
 892               		.loc 1 285 5 is_stmt 1 view .LVU221
 285:quantum/rgblight.c ****   } else {
 893               		.loc 1 285 38 is_stmt 0 view .LVU222
 894 0022 805A      		subi r24,-96
 895 0024 9E4F      		sbci r25,-2
 896               	.LVL61:
 897               	.L39:
 289:quantum/rgblight.c **** }
 898               		.loc 1 289 3 is_stmt 1 view .LVU223
 899 0026 4091 0000 		lds r20,rgblight_config+3
 900 002a 6091 0000 		lds r22,rgblight_config+2
 901 002e 0C94 0000 		jmp rgblight_sethsv
 902               	.LVL62:
 903               	.L38:
 287:quantum/rgblight.c ****   }
 904               		.loc 1 287 5 view .LVU224
 287:quantum/rgblight.c ****   }
 905               		.loc 1 287 32 is_stmt 0 view .LVU225
 906 0032 0897      		sbiw r24,8
 287:quantum/rgblight.c ****   }
 907               		.loc 1 287 9 view .LVU226
 908 0034 68E6      		ldi r22,lo8(104)
 909 0036 71E0      		ldi r23,lo8(1)
 910 0038 0E94 0000 		call __divmodhi4
 911               	.LVL63:
 287:quantum/rgblight.c ****   }
 912               		.loc 1 287 9 view .LVU227
 913 003c 00C0      		rjmp .L39
 914               		.cfi_endproc
 915               	.LFE22:
 917               		.section	.text.rgblight_increase_sat,"ax",@progbits
 918               	.global	rgblight_increase_sat
 920               	rgblight_increase_sat:
 921               	.LFB23:
 291:quantum/rgblight.c ****   uint8_t sat;
 922               		.loc 1 291 34 is_stmt 1 view -0
 923               		.cfi_startproc
 924               	/* prologue: function */
 925               	/* frame size = 0 */
 926               	/* stack size = 0 */
 927               	.L__stack_usage = 0
 292:quantum/rgblight.c ****   if (rgblight_config.sat + RGBLIGHT_SAT_STEP > 255) {
 928               		.loc 1 292 3 view .LVU229
 293:quantum/rgblight.c ****     sat = 255;
 929               		.loc 1 293 3 view .LVU230
 293:quantum/rgblight.c ****     sat = 255;
 930               		.loc 1 293 22 is_stmt 0 view .LVU231
 931 0000 6091 0000 		lds r22,rgblight_config+2
 293:quantum/rgblight.c ****     sat = 255;
 932               		.loc 1 293 6 view .LVU232
 933 0004 683F      		cpi r22,lo8(-8)
 934 0006 00F4      		brsh .L42
 296:quantum/rgblight.c ****   }
 935               		.loc 1 296 5 is_stmt 1 view .LVU233
 296:quantum/rgblight.c ****   }
 936               		.loc 1 296 9 is_stmt 0 view .LVU234
 937 0008 685F      		subi r22,lo8(-(8))
 938               	.LVL64:
 939               	.L41:
 298:quantum/rgblight.c **** }
 940               		.loc 1 298 3 is_stmt 1 view .LVU235
 298:quantum/rgblight.c **** }
 941               		.loc 1 298 34 is_stmt 0 view .LVU236
 942 000a 8091 0000 		lds r24,rgblight_config
 943 000e 881F      		rol r24
 944 0010 8827      		clr r24
 945 0012 881F      		rol r24
 946 0014 9091 0000 		lds r25,rgblight_config+1
 947 0018 292F      		mov r18,r25
 948 001a 220F      		lsl r18
 949 001c 97FB      		bst r25,7
 950 001e 9927      		clr r25
 951 0020 90F9      		bld r25,0
 298:quantum/rgblight.c **** }
 952               		.loc 1 298 3 view .LVU237
 953 0022 4091 0000 		lds r20,rgblight_config+3
 954 0026 822B      		or r24,r18
 955 0028 0C94 0000 		jmp rgblight_sethsv
 956               	.LVL65:
 957               	.L42:
 294:quantum/rgblight.c ****   } else {
 958               		.loc 1 294 9 view .LVU238
 959 002c 6FEF      		ldi r22,lo8(-1)
 960 002e 00C0      		rjmp .L41
 961               		.cfi_endproc
 962               	.LFE23:
 964               		.section	.text.rgblight_decrease_sat,"ax",@progbits
 965               	.global	rgblight_decrease_sat
 967               	rgblight_decrease_sat:
 968               	.LFB24:
 300:quantum/rgblight.c ****   uint8_t sat;
 969               		.loc 1 300 34 is_stmt 1 view -0
 970               		.cfi_startproc
 971               	/* prologue: function */
 972               	/* frame size = 0 */
 973               	/* stack size = 0 */
 974               	.L__stack_usage = 0
 301:quantum/rgblight.c ****   if (rgblight_config.sat - RGBLIGHT_SAT_STEP < 0) {
 975               		.loc 1 301 3 view .LVU240
 302:quantum/rgblight.c ****     sat = 0;
 976               		.loc 1 302 3 view .LVU241
 302:quantum/rgblight.c ****     sat = 0;
 977               		.loc 1 302 22 is_stmt 0 view .LVU242
 978 0000 6091 0000 		lds r22,rgblight_config+2
 302:quantum/rgblight.c ****     sat = 0;
 979               		.loc 1 302 6 view .LVU243
 980 0004 6830      		cpi r22,lo8(8)
 981 0006 00F0      		brlo .L45
 305:quantum/rgblight.c ****   }
 982               		.loc 1 305 5 is_stmt 1 view .LVU244
 305:quantum/rgblight.c ****   }
 983               		.loc 1 305 9 is_stmt 0 view .LVU245
 984 0008 6850      		subi r22,lo8(-(-8))
 985               	.LVL66:
 986               	.L44:
 307:quantum/rgblight.c **** }
 987               		.loc 1 307 3 is_stmt 1 view .LVU246
 307:quantum/rgblight.c **** }
 988               		.loc 1 307 34 is_stmt 0 view .LVU247
 989 000a 8091 0000 		lds r24,rgblight_config
 990 000e 881F      		rol r24
 991 0010 8827      		clr r24
 992 0012 881F      		rol r24
 993 0014 9091 0000 		lds r25,rgblight_config+1
 994 0018 292F      		mov r18,r25
 995 001a 220F      		lsl r18
 996 001c 97FB      		bst r25,7
 997 001e 9927      		clr r25
 998 0020 90F9      		bld r25,0
 307:quantum/rgblight.c **** }
 999               		.loc 1 307 3 view .LVU248
 1000 0022 4091 0000 		lds r20,rgblight_config+3
 1001 0026 822B      		or r24,r18
 1002 0028 0C94 0000 		jmp rgblight_sethsv
 1003               	.LVL67:
 1004               	.L45:
 303:quantum/rgblight.c ****   } else {
 1005               		.loc 1 303 9 view .LVU249
 1006 002c 60E0      		ldi r22,0
 1007 002e 00C0      		rjmp .L44
 1008               		.cfi_endproc
 1009               	.LFE24:
 1011               		.section	.text.rgblight_increase_val,"ax",@progbits
 1012               	.global	rgblight_increase_val
 1014               	rgblight_increase_val:
 1015               	.LFB25:
 309:quantum/rgblight.c ****   uint8_t val;
 1016               		.loc 1 309 34 is_stmt 1 view -0
 1017               		.cfi_startproc
 1018               	/* prologue: function */
 1019               	/* frame size = 0 */
 1020               	/* stack size = 0 */
 1021               	.L__stack_usage = 0
 310:quantum/rgblight.c ****   if (rgblight_config.val + RGBLIGHT_VAL_STEP > 255) {
 1022               		.loc 1 310 3 view .LVU251
 311:quantum/rgblight.c ****     val = 255;
 1023               		.loc 1 311 3 view .LVU252
 311:quantum/rgblight.c ****     val = 255;
 1024               		.loc 1 311 22 is_stmt 0 view .LVU253
 1025 0000 4091 0000 		lds r20,rgblight_config+3
 311:quantum/rgblight.c ****     val = 255;
 1026               		.loc 1 311 6 view .LVU254
 1027 0004 483F      		cpi r20,lo8(-8)
 1028 0006 00F4      		brsh .L48
 314:quantum/rgblight.c ****   }
 1029               		.loc 1 314 5 is_stmt 1 view .LVU255
 314:quantum/rgblight.c ****   }
 1030               		.loc 1 314 9 is_stmt 0 view .LVU256
 1031 0008 485F      		subi r20,lo8(-(8))
 1032               	.LVL68:
 1033               	.L47:
 316:quantum/rgblight.c **** }
 1034               		.loc 1 316 3 is_stmt 1 view .LVU257
 316:quantum/rgblight.c **** }
 1035               		.loc 1 316 34 is_stmt 0 view .LVU258
 1036 000a 8091 0000 		lds r24,rgblight_config
 1037 000e 881F      		rol r24
 1038 0010 8827      		clr r24
 1039 0012 881F      		rol r24
 1040 0014 9091 0000 		lds r25,rgblight_config+1
 1041 0018 292F      		mov r18,r25
 1042 001a 220F      		lsl r18
 1043 001c 97FB      		bst r25,7
 1044 001e 9927      		clr r25
 1045 0020 90F9      		bld r25,0
 316:quantum/rgblight.c **** }
 1046               		.loc 1 316 3 view .LVU259
 1047 0022 6091 0000 		lds r22,rgblight_config+2
 1048 0026 822B      		or r24,r18
 1049 0028 0C94 0000 		jmp rgblight_sethsv
 1050               	.LVL69:
 1051               	.L48:
 312:quantum/rgblight.c ****   } else {
 1052               		.loc 1 312 9 view .LVU260
 1053 002c 4FEF      		ldi r20,lo8(-1)
 1054 002e 00C0      		rjmp .L47
 1055               		.cfi_endproc
 1056               	.LFE25:
 1058               		.section	.text.rgblight_decrease_val,"ax",@progbits
 1059               	.global	rgblight_decrease_val
 1061               	rgblight_decrease_val:
 1062               	.LFB26:
 318:quantum/rgblight.c ****   uint8_t val;
 1063               		.loc 1 318 34 is_stmt 1 view -0
 1064               		.cfi_startproc
 1065               	/* prologue: function */
 1066               	/* frame size = 0 */
 1067               	/* stack size = 0 */
 1068               	.L__stack_usage = 0
 319:quantum/rgblight.c ****   if (rgblight_config.val - RGBLIGHT_VAL_STEP < 0) {
 1069               		.loc 1 319 3 view .LVU262
 320:quantum/rgblight.c ****     val = 0;
 1070               		.loc 1 320 3 view .LVU263
 320:quantum/rgblight.c ****     val = 0;
 1071               		.loc 1 320 22 is_stmt 0 view .LVU264
 1072 0000 4091 0000 		lds r20,rgblight_config+3
 320:quantum/rgblight.c ****     val = 0;
 1073               		.loc 1 320 6 view .LVU265
 1074 0004 4830      		cpi r20,lo8(8)
 1075 0006 00F0      		brlo .L51
 323:quantum/rgblight.c ****   }
 1076               		.loc 1 323 5 is_stmt 1 view .LVU266
 323:quantum/rgblight.c ****   }
 1077               		.loc 1 323 9 is_stmt 0 view .LVU267
 1078 0008 4850      		subi r20,lo8(-(-8))
 1079               	.LVL70:
 1080               	.L50:
 325:quantum/rgblight.c **** }
 1081               		.loc 1 325 3 is_stmt 1 view .LVU268
 325:quantum/rgblight.c **** }
 1082               		.loc 1 325 34 is_stmt 0 view .LVU269
 1083 000a 8091 0000 		lds r24,rgblight_config
 1084 000e 881F      		rol r24
 1085 0010 8827      		clr r24
 1086 0012 881F      		rol r24
 1087 0014 9091 0000 		lds r25,rgblight_config+1
 1088 0018 292F      		mov r18,r25
 1089 001a 220F      		lsl r18
 1090 001c 97FB      		bst r25,7
 1091 001e 9927      		clr r25
 1092 0020 90F9      		bld r25,0
 325:quantum/rgblight.c **** }
 1093               		.loc 1 325 3 view .LVU270
 1094 0022 6091 0000 		lds r22,rgblight_config+2
 1095 0026 822B      		or r24,r18
 1096 0028 0C94 0000 		jmp rgblight_sethsv
 1097               	.LVL71:
 1098               	.L51:
 321:quantum/rgblight.c ****   } else {
 1099               		.loc 1 321 9 view .LVU271
 1100 002c 40E0      		ldi r20,0
 1101 002e 00C0      		rjmp .L50
 1102               		.cfi_endproc
 1103               	.LFE26:
 1105               		.section	.text.rgblight_mode,"ax",@progbits
 1106               	.global	rgblight_mode
 1108               	rgblight_mode:
 1109               	.LVL72:
 1110               	.LFB18:
 223:quantum/rgblight.c ****   if (!rgblight_config.enable) {
 1111               		.loc 1 223 34 is_stmt 1 view -0
 1112               		.cfi_startproc
 1113               	/* prologue: function */
 1114               	/* frame size = 0 */
 1115               	/* stack size = 0 */
 1116               	.L__stack_usage = 0
 224:quantum/rgblight.c ****     return;
 1117               		.loc 1 224 3 view .LVU273
 224:quantum/rgblight.c ****     return;
 1118               		.loc 1 224 23 is_stmt 0 view .LVU274
 1119 0000 9091 0000 		lds r25,rgblight_config
 224:quantum/rgblight.c ****     return;
 1120               		.loc 1 224 6 view .LVU275
 1121 0004 90FF      		sbrs r25,0
 1122 0006 00C0      		rjmp .L52
 227:quantum/rgblight.c ****     rgblight_config.mode = 1;
 1123               		.loc 1 227 3 is_stmt 1 view .LVU276
 1124 0008 9178      		andi r25,lo8(-127)
 227:quantum/rgblight.c ****     rgblight_config.mode = 1;
 1125               		.loc 1 227 6 is_stmt 0 view .LVU277
 1126 000a 8111      		cpse r24,__zero_reg__
 1127 000c 00C0      		rjmp .L54
 228:quantum/rgblight.c ****   } else if (mode > RGBLIGHT_MODES) {
 1128               		.loc 1 228 5 is_stmt 1 view .LVU278
 228:quantum/rgblight.c ****   } else if (mode > RGBLIGHT_MODES) {
 1129               		.loc 1 228 26 is_stmt 0 view .LVU279
 1130 000e 9260      		ori r25,lo8(2)
 1131               	.LVL73:
 1132               	.L59:
 232:quantum/rgblight.c ****   }
 1133               		.loc 1 232 26 view .LVU280
 1134 0010 9093 0000 		sts rgblight_config,r25
 234:quantum/rgblight.c ****   xprintf("rgblight mode: %u\n", rgblight_config.mode);
 1135               		.loc 1 234 3 is_stmt 1 view .LVU281
 1136 0014 6091 0000 		lds r22,rgblight_config
 1137 0018 7091 0000 		lds r23,rgblight_config+1
 1138 001c 8091 0000 		lds r24,rgblight_config+2
 1139 0020 9091 0000 		lds r25,rgblight_config+3
 1140 0024 0E94 0000 		call eeconfig_update_rgblight
 1141               	.LVL74:
 235:quantum/rgblight.c ****   if (rgblight_config.mode == 1) {
 1142               		.loc 1 235 55 view .LVU282
 236:quantum/rgblight.c ****     #ifdef RGBLIGHT_ANIMATIONS
 1143               		.loc 1 236 3 view .LVU283
 236:quantum/rgblight.c ****     #ifdef RGBLIGHT_ANIMATIONS
 1144               		.loc 1 236 28 is_stmt 0 view .LVU284
 1145 0028 8091 0000 		lds r24,rgblight_config
 1146 002c 982F      		mov r25,r24
 1147 002e 9E77      		andi r25,lo8(126)
 236:quantum/rgblight.c ****     #ifdef RGBLIGHT_ANIMATIONS
 1148               		.loc 1 236 6 view .LVU285
 1149 0030 9230      		cpi r25,lo8(2)
 1150 0032 01F4      		brne .L57
 238:quantum/rgblight.c ****     #endif
 1151               		.loc 1 238 7 is_stmt 1 view .LVU286
 1152               	.LBB21:
 1153               	.LBI21:
 386:quantum/rgblight.c ****     }
 387:quantum/rgblight.c ****     #ifdef RGBW
 388:quantum/rgblight.c ****       ws2812_setleds_rgbw(led, RGBLED_NUM);
 389:quantum/rgblight.c ****     #else
 390:quantum/rgblight.c ****       ws2812_setleds(led, RGBLED_NUM);
 391:quantum/rgblight.c ****     #endif
 392:quantum/rgblight.c ****   }
 393:quantum/rgblight.c **** }
 394:quantum/rgblight.c **** 
 395:quantum/rgblight.c **** #ifdef RGBLIGHT_ANIMATIONS
 396:quantum/rgblight.c **** 
 397:quantum/rgblight.c **** // Animation timer -- AVR Timer3
 398:quantum/rgblight.c **** void rgblight_timer_init(void) {
 399:quantum/rgblight.c ****   // static uint8_t rgblight_timer_is_init = 0;
 400:quantum/rgblight.c ****   // if (rgblight_timer_is_init) {
 401:quantum/rgblight.c ****   //   return;
 402:quantum/rgblight.c ****   // }
 403:quantum/rgblight.c ****   // rgblight_timer_is_init = 1;
 404:quantum/rgblight.c ****   // /* Timer 3 setup */
 405:quantum/rgblight.c ****   // TCCR3B = _BV(WGM32) // CTC mode OCR3A as TOP
 406:quantum/rgblight.c ****   //       | _BV(CS30); // Clock selelct: clk/1
 407:quantum/rgblight.c ****   // /* Set TOP value */
 408:quantum/rgblight.c ****   // uint8_t sreg = SREG;
 409:quantum/rgblight.c ****   // cli();
 410:quantum/rgblight.c ****   // OCR3AH = (RGBLED_TIMER_TOP >> 8) & 0xff;
 411:quantum/rgblight.c ****   // OCR3AL = RGBLED_TIMER_TOP & 0xff;
 412:quantum/rgblight.c ****   // SREG = sreg;
 413:quantum/rgblight.c **** 
 414:quantum/rgblight.c ****   rgblight_timer_enabled = true;
 415:quantum/rgblight.c **** }
 416:quantum/rgblight.c **** void rgblight_timer_enable(void) {
 417:quantum/rgblight.c ****   rgblight_timer_enabled = true;
 418:quantum/rgblight.c ****   dprintf("TIMER3 enabled.\n");
 419:quantum/rgblight.c **** }
 420:quantum/rgblight.c **** void rgblight_timer_disable(void) {
 1154               		.loc 1 420 6 view .LVU287
 1155               	.LBB22:
 421:quantum/rgblight.c ****   rgblight_timer_enabled = false;
 1156               		.loc 1 421 3 view .LVU288
 1157               		.loc 1 421 26 is_stmt 0 view .LVU289
 1158 0034 1092 0000 		sts rgblight_timer_enabled,__zero_reg__
 422:quantum/rgblight.c ****   dprintf("TIMER3 disabled.\n");
 1159               		.loc 1 422 32 is_stmt 1 view .LVU290
 1160               	.L58:
 1161               	.LBE22:
 1162               	.LBE21:
 251:quantum/rgblight.c **** }
 1163               		.loc 1 251 3 view .LVU291
 251:quantum/rgblight.c **** }
 1164               		.loc 1 251 34 is_stmt 0 view .LVU292
 1165 0038 881F      		rol r24
 1166 003a 8827      		clr r24
 1167 003c 881F      		rol r24
 1168 003e 9091 0000 		lds r25,rgblight_config+1
 1169 0042 292F      		mov r18,r25
 1170 0044 220F      		lsl r18
 1171 0046 97FB      		bst r25,7
 1172 0048 9927      		clr r25
 1173 004a 90F9      		bld r25,0
 251:quantum/rgblight.c **** }
 1174               		.loc 1 251 3 view .LVU293
 1175 004c 4091 0000 		lds r20,rgblight_config+3
 1176 0050 6091 0000 		lds r22,rgblight_config+2
 1177 0054 822B      		or r24,r18
 1178 0056 0C94 0000 		jmp rgblight_sethsv
 1179               	.LVL75:
 1180               	.L54:
 229:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODES;
 1181               		.loc 1 229 10 is_stmt 1 view .LVU294
 229:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODES;
 1182               		.loc 1 229 13 is_stmt 0 view .LVU295
 1183 005a 8931      		cpi r24,lo8(25)
 1184 005c 00F0      		brlo .L56
 230:quantum/rgblight.c ****   } else {
 1185               		.loc 1 230 5 is_stmt 1 view .LVU296
 230:quantum/rgblight.c ****   } else {
 1186               		.loc 1 230 26 is_stmt 0 view .LVU297
 1187 005e 9063      		ori r25,lo8(48)
 1188 0060 00C0      		rjmp .L59
 1189               	.L56:
 232:quantum/rgblight.c ****   }
 1190               		.loc 1 232 5 is_stmt 1 view .LVU298
 232:quantum/rgblight.c ****   }
 1191               		.loc 1 232 26 is_stmt 0 view .LVU299
 1192 0062 8F73      		andi r24,lo8(63)
 1193               	.LVL76:
 232:quantum/rgblight.c ****   }
 1194               		.loc 1 232 26 view .LVU300
 1195 0064 880F      		lsl r24
 1196 0066 982B      		or r25,r24
 1197 0068 00C0      		rjmp .L59
 1198               	.L57:
 240:quantum/rgblight.c ****     // MODE 2-5, breathing
 1199               		.loc 1 240 10 is_stmt 1 view .LVU301
 240:quantum/rgblight.c ****     // MODE 2-5, breathing
 1200               		.loc 1 240 29 is_stmt 0 view .LVU302
 1201 006a 982F      		mov r25,r24
 1202 006c 9695      		lsr r25
 240:quantum/rgblight.c ****     // MODE 2-5, breathing
 1203               		.loc 1 240 40 view .LVU303
 1204 006e 925C      		subi r25,lo8(-(62))
 1205 0070 9F73      		andi r25,lo8(63)
 240:quantum/rgblight.c ****     // MODE 2-5, breathing
 1206               		.loc 1 240 13 view .LVU304
 1207 0072 9631      		cpi r25,lo8(22)
 1208 0074 00F4      		brsh .L58
 248:quantum/rgblight.c ****     #endif
 1209               		.loc 1 248 7 is_stmt 1 view .LVU305
 1210               	.LBB23:
 1211               	.LBI23:
 398:quantum/rgblight.c ****   // static uint8_t rgblight_timer_is_init = 0;
 1212               		.loc 1 398 6 view .LVU306
 1213               	.LBB24:
 414:quantum/rgblight.c **** }
 1214               		.loc 1 414 3 view .LVU307
 414:quantum/rgblight.c **** }
 1215               		.loc 1 414 26 is_stmt 0 view .LVU308
 1216 0076 91E0      		ldi r25,lo8(1)
 1217 0078 9093 0000 		sts rgblight_timer_enabled,r25
 1218 007c 00C0      		rjmp .L58
 1219               	.LVL77:
 1220               	.L52:
 1221               	/* epilogue start */
 414:quantum/rgblight.c **** }
 1222               		.loc 1 414 26 view .LVU309
 1223               	.LBE24:
 1224               	.LBE23:
 252:quantum/rgblight.c **** 
 1225               		.loc 1 252 1 view .LVU310
 1226 007e 0895      		ret
 1227               		.cfi_endproc
 1228               	.LFE18:
 1230               		.section	.text.rgblight_init,"ax",@progbits
 1231               	.global	rgblight_init
 1233               	rgblight_init:
 1234               	.LFB13:
 159:quantum/rgblight.c ****   debug_enable = 1; // Debug ON!
 1235               		.loc 1 159 26 is_stmt 1 view -0
 1236               		.cfi_startproc
 1237               	/* prologue: function */
 1238               	/* frame size = 0 */
 1239               	/* stack size = 0 */
 1240               	.L__stack_usage = 0
 160:quantum/rgblight.c ****   dprintf("rgblight_init called.\n");
 1241               		.loc 1 160 3 view .LVU312
 160:quantum/rgblight.c ****   dprintf("rgblight_init called.\n");
 1242               		.loc 1 160 16 is_stmt 0 view .LVU313
 1243 0000 8091 0000 		lds r24,debug_config
 1244 0004 8160      		ori r24,lo8(1<<0)
 1245 0006 8093 0000 		sts debug_config,r24
 161:quantum/rgblight.c ****   rgblight_inited = 1;
 1246               		.loc 1 161 37 is_stmt 1 view .LVU314
 162:quantum/rgblight.c ****   dprintf("rgblight_init start!\n");
 1247               		.loc 1 162 3 view .LVU315
 162:quantum/rgblight.c ****   dprintf("rgblight_init start!\n");
 1248               		.loc 1 162 19 is_stmt 0 view .LVU316
 1249 000a 81E0      		ldi r24,lo8(1)
 1250 000c 8093 0000 		sts rgblight_inited,r24
 163:quantum/rgblight.c ****   if (!eeconfig_is_enabled()) {
 1251               		.loc 1 163 36 is_stmt 1 view .LVU317
 164:quantum/rgblight.c ****     dprintf("rgblight_init eeconfig is not enabled.\n");
 1252               		.loc 1 164 3 view .LVU318
 164:quantum/rgblight.c ****     dprintf("rgblight_init eeconfig is not enabled.\n");
 1253               		.loc 1 164 8 is_stmt 0 view .LVU319
 1254 0010 0E94 0000 		call eeconfig_is_enabled
 1255               	.LVL78:
 164:quantum/rgblight.c ****     dprintf("rgblight_init eeconfig is not enabled.\n");
 1256               		.loc 1 164 6 view .LVU320
 1257 0014 8111      		cpse r24,__zero_reg__
 1258 0016 00C0      		rjmp .L61
 165:quantum/rgblight.c ****     eeconfig_init();
 1259               		.loc 1 165 56 is_stmt 1 view .LVU321
 166:quantum/rgblight.c ****     eeconfig_update_rgblight_default();
 1260               		.loc 1 166 5 view .LVU322
 1261 0018 0E94 0000 		call eeconfig_init
 1262               	.LVL79:
 167:quantum/rgblight.c ****   }
 1263               		.loc 1 167 5 view .LVU323
 1264 001c 0E94 0000 		call eeconfig_update_rgblight_default
 1265               	.LVL80:
 1266               	.L61:
 169:quantum/rgblight.c ****   if (!rgblight_config.mode) {
 1267               		.loc 1 169 3 view .LVU324
 169:quantum/rgblight.c ****   if (!rgblight_config.mode) {
 1268               		.loc 1 169 25 is_stmt 0 view .LVU325
 1269 0020 0E94 0000 		call eeconfig_read_rgblight
 1270               	.LVL81:
 169:quantum/rgblight.c ****   if (!rgblight_config.mode) {
 1271               		.loc 1 169 23 view .LVU326
 1272 0024 6093 0000 		sts rgblight_config,r22
 1273 0028 7093 0000 		sts rgblight_config+1,r23
 1274 002c 8093 0000 		sts rgblight_config+2,r24
 1275 0030 9093 0000 		sts rgblight_config+3,r25
 170:quantum/rgblight.c ****     dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 1276               		.loc 1 170 3 is_stmt 1 view .LVU327
 170:quantum/rgblight.c ****     dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 1277               		.loc 1 170 7 is_stmt 0 view .LVU328
 1278 0034 6E77      		andi r22,lo8(126)
 170:quantum/rgblight.c ****     dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 1279               		.loc 1 170 6 view .LVU329
 1280 0036 01F4      		brne .L62
 171:quantum/rgblight.c ****     eeconfig_update_rgblight_default();
 1281               		.loc 1 171 89 is_stmt 1 view .LVU330
 172:quantum/rgblight.c ****     rgblight_config.raw = eeconfig_read_rgblight();
 1282               		.loc 1 172 5 view .LVU331
 1283 0038 0E94 0000 		call eeconfig_update_rgblight_default
 1284               	.LVL82:
 173:quantum/rgblight.c ****   }
 1285               		.loc 1 173 5 view .LVU332
 173:quantum/rgblight.c ****   }
 1286               		.loc 1 173 27 is_stmt 0 view .LVU333
 1287 003c 0E94 0000 		call eeconfig_read_rgblight
 1288               	.LVL83:
 173:quantum/rgblight.c ****   }
 1289               		.loc 1 173 25 view .LVU334
 1290 0040 6093 0000 		sts rgblight_config,r22
 1291 0044 7093 0000 		sts rgblight_config+1,r23
 1292 0048 8093 0000 		sts rgblight_config+2,r24
 1293 004c 9093 0000 		sts rgblight_config+3,r25
 1294               	.L62:
 175:quantum/rgblight.c **** 
 1295               		.loc 1 175 3 is_stmt 1 view .LVU335
 178:quantum/rgblight.c ****   #endif
 1296               		.loc 1 178 5 view .LVU336
 1297               	.LBB27:
 1298               	.LBI27:
 398:quantum/rgblight.c ****   // static uint8_t rgblight_timer_is_init = 0;
 1299               		.loc 1 398 6 view .LVU337
 1300               	.LBB28:
 414:quantum/rgblight.c **** }
 1301               		.loc 1 414 3 view .LVU338
 414:quantum/rgblight.c **** }
 1302               		.loc 1 414 26 is_stmt 0 view .LVU339
 1303 0050 81E0      		ldi r24,lo8(1)
 1304 0052 8093 0000 		sts rgblight_timer_enabled,r24
 1305               	.LBE28:
 1306               	.LBE27:
 181:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 1307               		.loc 1 181 3 is_stmt 1 view .LVU340
 181:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 1308               		.loc 1 181 7 is_stmt 0 view .LVU341
 1309 0056 8091 0000 		lds r24,rgblight_config
 181:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 1310               		.loc 1 181 6 view .LVU342
 1311 005a 80FF      		sbrs r24,0
 1312 005c 00C0      		rjmp .L60
 182:quantum/rgblight.c ****   }
 1313               		.loc 1 182 5 is_stmt 1 view .LVU343
 182:quantum/rgblight.c ****   }
 1314               		.loc 1 182 34 is_stmt 0 view .LVU344
 1315 005e 8695      		lsr r24
 182:quantum/rgblight.c ****   }
 1316               		.loc 1 182 5 view .LVU345
 1317 0060 8F73      		andi r24,lo8(63)
 1318 0062 0C94 0000 		jmp rgblight_mode
 1319               	.LVL84:
 1320               	.L60:
 1321               	/* epilogue start */
 184:quantum/rgblight.c **** 
 1322               		.loc 1 184 1 view .LVU346
 1323 0066 0895      		ret
 1324               		.cfi_endproc
 1325               	.LFE13:
 1327               		.section	.text.rgblight_increase,"ax",@progbits
 1328               	.global	rgblight_increase
 1330               	rgblight_increase:
 1331               	.LFB15:
 199:quantum/rgblight.c ****   uint8_t mode = 0;
 1332               		.loc 1 199 30 is_stmt 1 view -0
 1333               		.cfi_startproc
 1334               	/* prologue: function */
 1335               	/* frame size = 0 */
 1336               	/* stack size = 0 */
 1337               	.L__stack_usage = 0
 200:quantum/rgblight.c ****   if (rgblight_config.mode < RGBLIGHT_MODES) {
 1338               		.loc 1 200 3 view .LVU348
 1339               	.LVL85:
 201:quantum/rgblight.c ****     mode = rgblight_config.mode + 1;
 1340               		.loc 1 201 3 view .LVU349
 201:quantum/rgblight.c ****     mode = rgblight_config.mode + 1;
 1341               		.loc 1 201 22 is_stmt 0 view .LVU350
 1342 0000 8091 0000 		lds r24,rgblight_config
 1343 0004 8695      		lsr r24
 1344 0006 8F73      		andi r24,lo8(63)
 201:quantum/rgblight.c ****     mode = rgblight_config.mode + 1;
 1345               		.loc 1 201 6 view .LVU351
 1346 0008 8831      		cpi r24,lo8(24)
 1347 000a 00F4      		brsh .L66
 202:quantum/rgblight.c ****   }
 1348               		.loc 1 202 5 is_stmt 1 view .LVU352
 202:quantum/rgblight.c ****   }
 1349               		.loc 1 202 10 is_stmt 0 view .LVU353
 1350 000c 8F5F      		subi r24,lo8(-(1))
 1351               	.LVL86:
 1352               	.L65:
 204:quantum/rgblight.c **** }
 1353               		.loc 1 204 3 is_stmt 1 view .LVU354
 1354 000e 0C94 0000 		jmp rgblight_mode
 1355               	.LVL87:
 1356               	.L66:
 200:quantum/rgblight.c ****   if (rgblight_config.mode < RGBLIGHT_MODES) {
 1357               		.loc 1 200 11 is_stmt 0 view .LVU355
 1358 0012 80E0      		ldi r24,0
 1359 0014 00C0      		rjmp .L65
 1360               		.cfi_endproc
 1361               	.LFE15:
 1363               		.section	.text.rgblight_decrease,"ax",@progbits
 1364               	.global	rgblight_decrease
 1366               	rgblight_decrease:
 1367               	.LFB16:
 206:quantum/rgblight.c ****   uint8_t mode = 0;
 1368               		.loc 1 206 30 is_stmt 1 view -0
 1369               		.cfi_startproc
 1370               	/* prologue: function */
 1371               	/* frame size = 0 */
 1372               	/* stack size = 0 */
 1373               	.L__stack_usage = 0
 207:quantum/rgblight.c ****   // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 1374               		.loc 1 207 3 view .LVU357
 1375               	.LVL88:
 209:quantum/rgblight.c ****     mode = rgblight_config.mode - 1;
 1376               		.loc 1 209 3 view .LVU358
 209:quantum/rgblight.c ****     mode = rgblight_config.mode - 1;
 1377               		.loc 1 209 22 is_stmt 0 view .LVU359
 1378 0000 8091 0000 		lds r24,rgblight_config
 1379 0004 8695      		lsr r24
 1380 0006 8F73      		andi r24,lo8(63)
 209:quantum/rgblight.c ****     mode = rgblight_config.mode - 1;
 1381               		.loc 1 209 6 view .LVU360
 1382 0008 8230      		cpi r24,lo8(2)
 1383 000a 00F0      		brlo .L69
 210:quantum/rgblight.c ****   }
 1384               		.loc 1 210 5 is_stmt 1 view .LVU361
 210:quantum/rgblight.c ****   }
 1385               		.loc 1 210 10 is_stmt 0 view .LVU362
 1386 000c 8150      		subi r24,lo8(-(-1))
 1387               	.LVL89:
 1388               	.L68:
 212:quantum/rgblight.c **** }
 1389               		.loc 1 212 3 is_stmt 1 view .LVU363
 1390 000e 0C94 0000 		jmp rgblight_mode
 1391               	.LVL90:
 1392               	.L69:
 207:quantum/rgblight.c ****   // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 1393               		.loc 1 207 11 is_stmt 0 view .LVU364
 1394 0012 80E0      		ldi r24,0
 1395 0014 00C0      		rjmp .L68
 1396               		.cfi_endproc
 1397               	.LFE16:
 1399               		.section	.text.rgblight_step,"ax",@progbits
 1400               	.global	rgblight_step
 1402               	rgblight_step:
 1403               	.LFB17:
 214:quantum/rgblight.c ****   uint8_t mode = 0;
 1404               		.loc 1 214 26 is_stmt 1 view -0
 1405               		.cfi_startproc
 1406               	/* prologue: function */
 1407               	/* frame size = 0 */
 1408               	/* stack size = 0 */
 1409               	.L__stack_usage = 0
 215:quantum/rgblight.c ****   mode = rgblight_config.mode + 1;
 1410               		.loc 1 215 3 view .LVU366
 1411               	.LVL91:
 216:quantum/rgblight.c ****   if (mode > RGBLIGHT_MODES) {
 1412               		.loc 1 216 3 view .LVU367
 216:quantum/rgblight.c ****   if (mode > RGBLIGHT_MODES) {
 1413               		.loc 1 216 25 is_stmt 0 view .LVU368
 1414 0000 8091 0000 		lds r24,rgblight_config
 1415 0004 8695      		lsr r24
 1416 0006 8F73      		andi r24,lo8(63)
 216:quantum/rgblight.c ****   if (mode > RGBLIGHT_MODES) {
 1417               		.loc 1 216 8 view .LVU369
 1418 0008 8F5F      		subi r24,lo8(-(1))
 1419               	.LVL92:
 217:quantum/rgblight.c ****     mode = 1;
 1420               		.loc 1 217 3 is_stmt 1 view .LVU370
 217:quantum/rgblight.c ****     mode = 1;
 1421               		.loc 1 217 6 is_stmt 0 view .LVU371
 1422 000a 8931      		cpi r24,lo8(25)
 1423 000c 00F0      		brlo .L71
 218:quantum/rgblight.c ****   }
 1424               		.loc 1 218 10 view .LVU372
 1425 000e 81E0      		ldi r24,lo8(1)
 1426               	.LVL93:
 1427               	.L71:
 220:quantum/rgblight.c **** }
 1428               		.loc 1 220 3 is_stmt 1 view .LVU373
 1429 0010 0C94 0000 		jmp rgblight_mode
 1430               	.LVL94:
 220:quantum/rgblight.c **** }
 1431               		.loc 1 220 3 is_stmt 0 view .LVU374
 1432               		.cfi_endproc
 1433               	.LFE17:
 1435               		.section	.text.rgblight_enable,"ax",@progbits
 1436               	.global	rgblight_enable
 1438               	rgblight_enable:
 1439               	.LFB20:
 269:quantum/rgblight.c ****   rgblight_config.enable = 1;
 1440               		.loc 1 269 28 is_stmt 1 view -0
 1441               		.cfi_startproc
 1442 0000 CF93      		push r28
 1443               	.LCFI20:
 1444               		.cfi_def_cfa_offset 3
 1445               		.cfi_offset 28, -2
 1446 0002 DF93      		push r29
 1447               	.LCFI21:
 1448               		.cfi_def_cfa_offset 4
 1449               		.cfi_offset 29, -3
 1450               	/* prologue: function */
 1451               	/* frame size = 0 */
 1452               	/* stack size = 2 */
 1453               	.L__stack_usage = 2
 270:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 1454               		.loc 1 270 3 view .LVU376
 270:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 1455               		.loc 1 270 26 is_stmt 0 view .LVU377
 1456 0004 C0E0      		ldi r28,lo8(rgblight_config)
 1457 0006 D0E0      		ldi r29,hi8(rgblight_config)
 1458 0008 8881      		ld r24,Y
 1459 000a 8160      		ori r24,lo8(1<<0)
 1460 000c 8883      		st Y,r24
 271:quantum/rgblight.c ****   xprintf("rgblight enable: rgblight_config.enable = %u\n", rgblight_config.enable);
 1461               		.loc 1 271 3 is_stmt 1 view .LVU378
 1462 000e 6091 0000 		lds r22,rgblight_config
 1463 0012 7091 0000 		lds r23,rgblight_config+1
 1464 0016 8091 0000 		lds r24,rgblight_config+2
 1465 001a 9091 0000 		lds r25,rgblight_config+3
 1466 001e 0E94 0000 		call eeconfig_update_rgblight
 1467               	.LVL95:
 272:quantum/rgblight.c ****   rgblight_mode(rgblight_config.mode);
 1468               		.loc 1 272 84 view .LVU379
 273:quantum/rgblight.c **** }
 1469               		.loc 1 273 3 view .LVU380
 273:quantum/rgblight.c **** }
 1470               		.loc 1 273 32 is_stmt 0 view .LVU381
 1471 0022 8881      		ld r24,Y
 1472 0024 8695      		lsr r24
 273:quantum/rgblight.c **** }
 1473               		.loc 1 273 3 view .LVU382
 1474 0026 8F73      		andi r24,lo8(63)
 1475               	/* epilogue start */
 274:quantum/rgblight.c **** 
 1476               		.loc 1 274 1 view .LVU383
 1477 0028 DF91      		pop r29
 1478 002a CF91      		pop r28
 273:quantum/rgblight.c **** }
 1479               		.loc 1 273 3 view .LVU384
 1480 002c 0C94 0000 		jmp rgblight_mode
 1481               	.LVL96:
 1482               		.cfi_endproc
 1483               	.LFE20:
 1485               		.section	.text.rgblight_update_dword,"ax",@progbits
 1486               	.global	rgblight_update_dword
 1488               	rgblight_update_dword:
 1489               	.LVL97:
 1490               	.LFB14:
 186:quantum/rgblight.c ****   rgblight_config.raw = dword;
 1491               		.loc 1 186 44 is_stmt 1 view -0
 1492               		.cfi_startproc
 1493               	/* prologue: function */
 1494               	/* frame size = 0 */
 1495               	/* stack size = 0 */
 1496               	.L__stack_usage = 0
 187:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 1497               		.loc 1 187 3 view .LVU386
 187:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 1498               		.loc 1 187 23 is_stmt 0 view .LVU387
 1499 0000 6093 0000 		sts rgblight_config,r22
 1500 0004 7093 0000 		sts rgblight_config+1,r23
 1501 0008 8093 0000 		sts rgblight_config+2,r24
 1502 000c 9093 0000 		sts rgblight_config+3,r25
 188:quantum/rgblight.c ****   if (rgblight_config.enable)
 1503               		.loc 1 188 3 is_stmt 1 view .LVU388
 1504 0010 0E94 0000 		call eeconfig_update_rgblight
 1505               	.LVL98:
 189:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 1506               		.loc 1 189 3 view .LVU389
 189:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 1507               		.loc 1 189 7 is_stmt 0 view .LVU390
 1508 0014 8091 0000 		lds r24,rgblight_config
 189:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 1509               		.loc 1 189 6 view .LVU391
 1510 0018 80FF      		sbrs r24,0
 1511 001a 00C0      		rjmp .L74
 190:quantum/rgblight.c ****   else {
 1512               		.loc 1 190 5 is_stmt 1 view .LVU392
 190:quantum/rgblight.c ****   else {
 1513               		.loc 1 190 34 is_stmt 0 view .LVU393
 1514 001c 8695      		lsr r24
 190:quantum/rgblight.c ****   else {
 1515               		.loc 1 190 5 view .LVU394
 1516 001e 8F73      		andi r24,lo8(63)
 1517 0020 0C94 0000 		jmp rgblight_mode
 1518               	.LVL99:
 1519               	.L74:
 193:quantum/rgblight.c ****     #endif
 1520               		.loc 1 193 7 is_stmt 1 view .LVU395
 1521               	.LBB31:
 1522               	.LBI31:
 420:quantum/rgblight.c ****   rgblight_timer_enabled = false;
 1523               		.loc 1 420 6 view .LVU396
 1524               	.LBB32:
 421:quantum/rgblight.c ****   dprintf("TIMER3 disabled.\n");
 1525               		.loc 1 421 3 view .LVU397
 421:quantum/rgblight.c ****   dprintf("TIMER3 disabled.\n");
 1526               		.loc 1 421 26 is_stmt 0 view .LVU398
 1527 0024 1092 0000 		sts rgblight_timer_enabled,__zero_reg__
 1528               		.loc 1 422 32 is_stmt 1 view .LVU399
 1529               	.LBE32:
 1530               	.LBE31:
 195:quantum/rgblight.c ****   }
 1531               		.loc 1 195 7 view .LVU400
 1532 0028 0C94 0000 		jmp rgblight_set
 1533               	.LVL100:
 1534               		.cfi_endproc
 1535               	.LFE14:
 1537               		.section	.text.rgblight_toggle,"ax",@progbits
 1538               	.global	rgblight_toggle
 1540               	rgblight_toggle:
 1541               	.LFB19:
 254:quantum/rgblight.c ****   rgblight_config.enable ^= 1;
 1542               		.loc 1 254 28 view -0
 1543               		.cfi_startproc
 1544               	/* prologue: function */
 1545               	/* frame size = 0 */
 1546               	/* stack size = 0 */
 1547               	.L__stack_usage = 0
 255:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 1548               		.loc 1 255 3 view .LVU402
 255:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 1549               		.loc 1 255 26 is_stmt 0 view .LVU403
 1550 0000 9091 0000 		lds r25,rgblight_config
 1551 0004 892F      		mov r24,r25
 1552 0006 8E7F      		andi r24,~(1<<0)
 1553 0008 90FF      		sbrs r25,0
 1554 000a 8160      		ori r24,1<<0
 1555 000c 8093 0000 		sts rgblight_config,r24
 256:quantum/rgblight.c ****   xprintf("rgblight toggle: rgblight_config.enable = %u\n", rgblight_config.enable);
 1556               		.loc 1 256 3 is_stmt 1 view .LVU404
 1557 0010 6091 0000 		lds r22,rgblight_config
 1558 0014 7091 0000 		lds r23,rgblight_config+1
 1559 0018 8091 0000 		lds r24,rgblight_config+2
 1560 001c 9091 0000 		lds r25,rgblight_config+3
 1561 0020 0E94 0000 		call eeconfig_update_rgblight
 1562               	.LVL101:
 257:quantum/rgblight.c ****   if (rgblight_config.enable) {
 1563               		.loc 1 257 84 view .LVU405
 258:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 1564               		.loc 1 258 3 view .LVU406
 258:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 1565               		.loc 1 258 7 is_stmt 0 view .LVU407
 1566 0024 8091 0000 		lds r24,rgblight_config
 258:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 1567               		.loc 1 258 6 view .LVU408
 1568 0028 80FF      		sbrs r24,0
 1569 002a 00C0      		rjmp .L76
 259:quantum/rgblight.c ****   } else {
 1570               		.loc 1 259 5 is_stmt 1 view .LVU409
 259:quantum/rgblight.c ****   } else {
 1571               		.loc 1 259 34 is_stmt 0 view .LVU410
 1572 002c 8695      		lsr r24
 259:quantum/rgblight.c ****   } else {
 1573               		.loc 1 259 5 view .LVU411
 1574 002e 8F73      		andi r24,lo8(63)
 1575 0030 0C94 0000 		jmp rgblight_mode
 1576               	.LVL102:
 1577               	.L76:
 262:quantum/rgblight.c ****     #endif
 1578               		.loc 1 262 7 is_stmt 1 view .LVU412
 1579               	.LBB37:
 1580               	.LBI37:
 420:quantum/rgblight.c ****   rgblight_timer_enabled = false;
 1581               		.loc 1 420 6 view .LVU413
 1582               	.LBB38:
 421:quantum/rgblight.c ****   dprintf("TIMER3 disabled.\n");
 1583               		.loc 1 421 3 view .LVU414
 421:quantum/rgblight.c ****   dprintf("TIMER3 disabled.\n");
 1584               		.loc 1 421 26 is_stmt 0 view .LVU415
 1585 0034 1092 0000 		sts rgblight_timer_enabled,__zero_reg__
 1586               		.loc 1 422 32 is_stmt 1 view .LVU416
 1587               	.LBE38:
 1588               	.LBE37:
 264:quantum/rgblight.c ****     rgblight_set();
 1589               		.loc 1 264 5 view .LVU417
 1590               	.LVL103:
 1591               	.LBB39:
 1592               	.LBI39:
 1593               		.file 2 "/usr/avr/include/util/delay.h"
   1:/usr/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/avr/include/util/delay.h **** 
   6:/usr/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/avr/include/util/delay.h **** 
   9:/usr/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/avr/include/util/delay.h **** 
  12:/usr/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/avr/include/util/delay.h ****      distribution.
  16:/usr/avr/include/util/delay.h **** 
  17:/usr/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/avr/include/util/delay.h **** 
  21:/usr/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/avr/include/util/delay.h **** 
  33:/usr/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/avr/include/util/delay.h **** 
  35:/usr/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/avr/include/util/delay.h **** 
  38:/usr/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/avr/include/util/delay.h **** #  endif
  42:/usr/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/avr/include/util/delay.h **** 
  44:/usr/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/avr/include/util/delay.h **** #include <math.h>
  47:/usr/avr/include/util/delay.h **** 
  48:/usr/avr/include/util/delay.h **** /** \file */
  49:/usr/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/avr/include/util/delay.h ****     \code
  51:/usr/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/avr/include/util/delay.h ****     \endcode
  55:/usr/avr/include/util/delay.h **** 
  56:/usr/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/avr/include/util/delay.h ****     used.
  60:/usr/avr/include/util/delay.h **** 
  61:/usr/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/avr/include/util/delay.h **** 
  70:/usr/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/avr/include/util/delay.h **** 
  79:/usr/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/avr/include/util/delay.h **** 
  83:/usr/avr/include/util/delay.h **** */
  84:/usr/avr/include/util/delay.h **** 
  85:/usr/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/avr/include/util/delay.h **** #endif
  89:/usr/avr/include/util/delay.h **** 
  90:/usr/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/avr/include/util/delay.h **** 
  97:/usr/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/avr/include/util/delay.h **** 
 103:/usr/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/avr/include/util/delay.h ****     integer value.
 107:/usr/avr/include/util/delay.h ****  */
 108:/usr/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/avr/include/util/delay.h **** #endif
 110:/usr/avr/include/util/delay.h **** 
 111:/usr/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/avr/include/util/delay.h **** #endif
 114:/usr/avr/include/util/delay.h **** 
 115:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/avr/include/util/delay.h **** #endif
 120:/usr/avr/include/util/delay.h **** 
 121:/usr/avr/include/util/delay.h **** /**
 122:/usr/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/avr/include/util/delay.h **** 
 124:/usr/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/avr/include/util/delay.h **** 
 126:/usr/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/avr/include/util/delay.h **** 
 129:/usr/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/avr/include/util/delay.h **** 
 131:/usr/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/avr/include/util/delay.h **** 
 137:/usr/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/avr/include/util/delay.h **** 
 142:/usr/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/avr/include/util/delay.h **** 
 147:/usr/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/avr/include/util/delay.h ****    respectively.
 151:/usr/avr/include/util/delay.h **** 
 152:/usr/avr/include/util/delay.h ****    \note
 153:/usr/avr/include/util/delay.h **** 
 154:/usr/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/avr/include/util/delay.h **** 
 164:/usr/avr/include/util/delay.h ****  */
 165:/usr/avr/include/util/delay.h **** void
 166:/usr/avr/include/util/delay.h **** _delay_ms(double __ms)
 1594               		.loc 2 166 1 view .LVU418
 1595               	.LBB40:
 167:/usr/avr/include/util/delay.h **** {
 168:/usr/avr/include/util/delay.h **** 	double __tmp ;
 1596               		.loc 2 168 2 view .LVU419
 169:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 1597               		.loc 2 172 2 view .LVU420
 173:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 1598               		.loc 2 173 2 view .LVU421
 174:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 1599               		.loc 2 174 2 view .LVU422
 175:/usr/avr/include/util/delay.h **** 
 176:/usr/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/avr/include/util/delay.h **** 
 179:/usr/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/avr/include/util/delay.h **** 
 182:/usr/avr/include/util/delay.h **** 	#else
 183:/usr/avr/include/util/delay.h **** 		//round up by default
 184:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 1600               		.loc 2 184 3 view .LVU423
 185:/usr/avr/include/util/delay.h **** 	#endif
 186:/usr/avr/include/util/delay.h **** 
 187:/usr/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 1601               		.loc 2 187 2 view .LVU424
 1602 0038 2FEF      		ldi r18,lo8(159999)
 1603 003a 80E7      		ldi r24,hi8(159999)
 1604 003c 92E0      		ldi r25,hlo8(159999)
 1605 003e 2150      	1:	subi r18,1
 1606 0040 8040      		sbci r24,0
 1607 0042 9040      		sbci r25,0
 1608 0044 01F4      		brne 1b
 1609 0046 00C0      		rjmp .
 1610 0048 0000      		nop
 1611               	.LVL104:
 1612               		.loc 2 187 2 is_stmt 0 view .LVU425
 1613               	.LBE40:
 1614               	.LBE39:
 265:quantum/rgblight.c ****   }
 1615               		.loc 1 265 5 is_stmt 1 view .LVU426
 1616 004a 0C94 0000 		jmp rgblight_set
 1617               	.LVL105:
 1618               		.cfi_endproc
 1619               	.LFE19:
 1621               		.section	.text.rgblight_timer_init,"ax",@progbits
 1622               	.global	rgblight_timer_init
 1624               	rgblight_timer_init:
 1625               	.LFB31:
 398:quantum/rgblight.c ****   // static uint8_t rgblight_timer_is_init = 0;
 1626               		.loc 1 398 32 view -0
 1627               		.cfi_startproc
 1628               	/* prologue: function */
 1629               	/* frame size = 0 */
 1630               	/* stack size = 0 */
 1631               	.L__stack_usage = 0
 414:quantum/rgblight.c **** }
 1632               		.loc 1 414 3 view .LVU428
 414:quantum/rgblight.c **** }
 1633               		.loc 1 414 26 is_stmt 0 view .LVU429
 1634 0000 81E0      		ldi r24,lo8(1)
 1635 0002 8093 0000 		sts rgblight_timer_enabled,r24
 1636               	/* epilogue start */
 415:quantum/rgblight.c **** void rgblight_timer_enable(void) {
 1637               		.loc 1 415 1 view .LVU430
 1638 0006 0895      		ret
 1639               		.cfi_endproc
 1640               	.LFE31:
 1642               		.section	.text.rgblight_timer_enable,"ax",@progbits
 1643               	.global	rgblight_timer_enable
 1645               	rgblight_timer_enable:
 1646               	.LFB44:
 1647               		.cfi_startproc
 1648               	/* prologue: function */
 1649               	/* frame size = 0 */
 1650               	/* stack size = 0 */
 1651               	.L__stack_usage = 0
 1652 0000 81E0      		ldi r24,lo8(1)
 1653 0002 8093 0000 		sts rgblight_timer_enabled,r24
 1654               	/* epilogue start */
 1655 0006 0895      		ret
 1656               		.cfi_endproc
 1657               	.LFE44:
 1659               		.section	.text.rgblight_timer_disable,"ax",@progbits
 1660               	.global	rgblight_timer_disable
 1662               	rgblight_timer_disable:
 1663               	.LFB33:
 420:quantum/rgblight.c ****   rgblight_timer_enabled = false;
 1664               		.loc 1 420 35 is_stmt 1 view -0
 1665               		.cfi_startproc
 1666               	/* prologue: function */
 1667               	/* frame size = 0 */
 1668               	/* stack size = 0 */
 1669               	.L__stack_usage = 0
 421:quantum/rgblight.c ****   dprintf("TIMER3 disabled.\n");
 1670               		.loc 1 421 3 view .LVU432
 421:quantum/rgblight.c ****   dprintf("TIMER3 disabled.\n");
 1671               		.loc 1 421 26 is_stmt 0 view .LVU433
 1672 0000 1092 0000 		sts rgblight_timer_enabled,__zero_reg__
 1673               		.loc 1 422 32 is_stmt 1 view .LVU434
 1674               	/* epilogue start */
 423:quantum/rgblight.c **** }
 1675               		.loc 1 423 1 is_stmt 0 view .LVU435
 1676 0004 0895      		ret
 1677               		.cfi_endproc
 1678               	.LFE33:
 1680               		.section	.text.rgblight_timer_toggle,"ax",@progbits
 1681               	.global	rgblight_timer_toggle
 1683               	rgblight_timer_toggle:
 1684               	.LFB46:
 1685               		.cfi_startproc
 1686               	/* prologue: function */
 1687               	/* frame size = 0 */
 1688               	/* stack size = 0 */
 1689               	.L__stack_usage = 0
 1690 0000 1092 0000 		sts rgblight_timer_enabled,__zero_reg__
 1691               	/* epilogue start */
 1692 0004 0895      		ret
 1693               		.cfi_endproc
 1694               	.LFE46:
 1696               		.section	.text.rgblight_show_solid_color,"ax",@progbits
 1697               	.global	rgblight_show_solid_color
 1699               	rgblight_show_solid_color:
 1700               	.LVL106:
 1701               	.LFB35:
 424:quantum/rgblight.c **** void rgblight_timer_toggle(void) {
 425:quantum/rgblight.c ****   rgblight_timer_enabled ^= rgblight_timer_enabled;
 426:quantum/rgblight.c ****   dprintf("TIMER3 toggled.\n");
 427:quantum/rgblight.c **** }
 428:quantum/rgblight.c **** 
 429:quantum/rgblight.c **** void rgblight_show_solid_color(uint8_t r, uint8_t g, uint8_t b) {
 1702               		.loc 1 429 65 is_stmt 1 view -0
 1703               		.cfi_startproc
 1704               		.loc 1 429 65 is_stmt 0 view .LVU437
 1705 0000 1F93      		push r17
 1706               	.LCFI22:
 1707               		.cfi_def_cfa_offset 3
 1708               		.cfi_offset 17, -2
 1709 0002 CF93      		push r28
 1710               	.LCFI23:
 1711               		.cfi_def_cfa_offset 4
 1712               		.cfi_offset 28, -3
 1713 0004 DF93      		push r29
 1714               	.LCFI24:
 1715               		.cfi_def_cfa_offset 5
 1716               		.cfi_offset 29, -4
 1717               	/* prologue: function */
 1718               	/* frame size = 0 */
 1719               	/* stack size = 3 */
 1720               	.L__stack_usage = 3
 1721 0006 C82F      		mov r28,r24
 1722 0008 D62F      		mov r29,r22
 1723 000a 142F      		mov r17,r20
 430:quantum/rgblight.c ****   rgblight_enable();
 1724               		.loc 1 430 3 is_stmt 1 view .LVU438
 1725 000c 0E94 0000 		call rgblight_enable
 1726               	.LVL107:
 431:quantum/rgblight.c ****   rgblight_mode(1);
 1727               		.loc 1 431 3 view .LVU439
 1728 0010 81E0      		ldi r24,lo8(1)
 1729 0012 0E94 0000 		call rgblight_mode
 1730               	.LVL108:
 432:quantum/rgblight.c ****   rgblight_setrgb(r, g, b);
 1731               		.loc 1 432 3 view .LVU440
 1732 0016 412F      		mov r20,r17
 1733 0018 6D2F      		mov r22,r29
 1734 001a 8C2F      		mov r24,r28
 1735               	/* epilogue start */
 433:quantum/rgblight.c **** }
 1736               		.loc 1 433 1 is_stmt 0 view .LVU441
 1737 001c DF91      		pop r29
 1738               	.LVL109:
 1739               		.loc 1 433 1 view .LVU442
 1740 001e CF91      		pop r28
 1741               	.LVL110:
 1742               		.loc 1 433 1 view .LVU443
 1743 0020 1F91      		pop r17
 1744               	.LVL111:
 432:quantum/rgblight.c ****   rgblight_setrgb(r, g, b);
 1745               		.loc 1 432 3 view .LVU444
 1746 0022 0C94 0000 		jmp rgblight_setrgb
 1747               	.LVL112:
 432:quantum/rgblight.c ****   rgblight_setrgb(r, g, b);
 1748               		.loc 1 432 3 view .LVU445
 1749               		.cfi_endproc
 1750               	.LFE35:
 1752               		.section	.text.rgblight_effect_breathing,"ax",@progbits
 1753               	.global	rgblight_effect_breathing
 1755               	rgblight_effect_breathing:
 1756               	.LVL113:
 1757               	.LFB37:
 434:quantum/rgblight.c **** 
 435:quantum/rgblight.c **** void rgblight_task(void) {
 436:quantum/rgblight.c ****   if (rgblight_timer_enabled) {
 437:quantum/rgblight.c ****     // mode = 1, static light, do nothing here
 438:quantum/rgblight.c ****     if (rgblight_config.mode >= 2 && rgblight_config.mode <= 5) {
 439:quantum/rgblight.c ****       // mode = 2 to 5, breathing mode
 440:quantum/rgblight.c ****       rgblight_effect_breathing(rgblight_config.mode - 2);
 441:quantum/rgblight.c ****     } else if (rgblight_config.mode >= 6 && rgblight_config.mode <= 8) {
 442:quantum/rgblight.c ****       // mode = 6 to 8, rainbow mood mod
 443:quantum/rgblight.c ****       rgblight_effect_rainbow_mood(rgblight_config.mode - 6);
 444:quantum/rgblight.c ****     } else if (rgblight_config.mode >= 9 && rgblight_config.mode <= 14) {
 445:quantum/rgblight.c ****       // mode = 9 to 14, rainbow swirl mode
 446:quantum/rgblight.c ****       rgblight_effect_rainbow_swirl(rgblight_config.mode - 9);
 447:quantum/rgblight.c ****     } else if (rgblight_config.mode >= 15 && rgblight_config.mode <= 20) {
 448:quantum/rgblight.c ****       // mode = 15 to 20, snake mode
 449:quantum/rgblight.c ****       rgblight_effect_snake(rgblight_config.mode - 15);
 450:quantum/rgblight.c ****     } else if (rgblight_config.mode >= 21 && rgblight_config.mode <= 23) {
 451:quantum/rgblight.c ****       // mode = 21 to 23, knight mode
 452:quantum/rgblight.c ****       rgblight_effect_knight(rgblight_config.mode - 21);
 453:quantum/rgblight.c ****     } else {
 454:quantum/rgblight.c ****       // mode = 24, christmas mode
 455:quantum/rgblight.c ****       rgblight_effect_christmas();
 456:quantum/rgblight.c ****     }
 457:quantum/rgblight.c ****   }
 458:quantum/rgblight.c **** }
 459:quantum/rgblight.c **** 
 460:quantum/rgblight.c **** // Effects
 461:quantum/rgblight.c **** void rgblight_effect_breathing(uint8_t interval) {
 1758               		.loc 1 461 50 is_stmt 1 view -0
 1759               		.cfi_startproc
 1760               		.loc 1 461 50 is_stmt 0 view .LVU447
 1761 0000 CF93      		push r28
 1762               	.LCFI25:
 1763               		.cfi_def_cfa_offset 3
 1764               		.cfi_offset 28, -2
 1765               	/* prologue: function */
 1766               	/* frame size = 0 */
 1767               	/* stack size = 1 */
 1768               	.L__stack_usage = 1
 1769 0002 C82F      		mov r28,r24
 462:quantum/rgblight.c ****   static uint8_t pos = 0;
 1770               		.loc 1 462 3 is_stmt 1 view .LVU448
 463:quantum/rgblight.c ****   static uint16_t last_timer = 0;
 1771               		.loc 1 463 3 view .LVU449
 464:quantum/rgblight.c **** 
 465:quantum/rgblight.c ****   if (timer_elapsed(last_timer) < pgm_read_byte(&RGBLED_BREATHING_INTERVALS[interval])) {
 1772               		.loc 1 465 3 view .LVU450
 1773               		.loc 1 465 7 is_stmt 0 view .LVU451
 1774 0004 8091 0000 		lds r24,last_timer.2227
 1775 0008 9091 0000 		lds r25,last_timer.2227+1
 1776               	.LVL114:
 1777               		.loc 1 465 7 view .LVU452
 1778 000c 0E94 0000 		call timer_elapsed
 1779               	.LVL115:
 1780               	.LBB41:
 1781               		.loc 1 465 35 is_stmt 1 view .LVU453
 1782               		.loc 1 465 35 view .LVU454
 1783               		.loc 1 465 35 view .LVU455
 1784 0010 EC2F      		mov r30,r28
 1785 0012 F0E0      		ldi r31,0
 1786 0014 E050      		subi r30,lo8(-(RGBLED_BREATHING_INTERVALS))
 1787 0016 F040      		sbci r31,hi8(-(RGBLED_BREATHING_INTERVALS))
 1788               	/* #APP */
 1789               	 ;  465 "quantum/rgblight.c" 1
 1790 0018 E491      		lpm r30, Z
 1791               		
 1792               	 ;  0 "" 2
 1793               	.LVL116:
 1794               		.loc 1 465 35 view .LVU456
 1795               	/* #NOAPP */
 1796               	.LBE41:
 1797               		.loc 1 465 6 is_stmt 0 view .LVU457
 1798 001a E817      		cp r30,r24
 1799 001c 1906      		cpc __zero_reg__,r25
 1800 001e 01F0      		breq .+2
 1801 0020 00F4      		brsh .L82
 466:quantum/rgblight.c ****     return;
 467:quantum/rgblight.c ****   }
 468:quantum/rgblight.c ****   last_timer = timer_read();
 1802               		.loc 1 468 3 is_stmt 1 view .LVU458
 1803               		.loc 1 468 16 is_stmt 0 view .LVU459
 1804 0022 0E94 0000 		call timer_read
 1805               	.LVL117:
 1806               		.loc 1 468 14 view .LVU460
 1807 0026 9093 0000 		sts last_timer.2227+1,r25
 1808 002a 8093 0000 		sts last_timer.2227,r24
 469:quantum/rgblight.c **** 
 470:quantum/rgblight.c ****   rgblight_sethsv_noeeprom(rgblight_config.hue, rgblight_config.sat, pgm_read_byte(&RGBLED_BREATHIN
 1809               		.loc 1 470 3 is_stmt 1 view .LVU461
 1810               	.LBB42:
 1811               		.loc 1 470 70 view .LVU462
 1812               	.LVL118:
 1813               		.loc 1 470 70 view .LVU463
 1814               		.loc 1 470 70 view .LVU464
 1815 002e E091 0000 		lds r30,pos.2226
 1816 0032 F0E0      		ldi r31,0
 1817 0034 E050      		subi r30,lo8(-(RGBLED_BREATHING_TABLE))
 1818 0036 F040      		sbci r31,hi8(-(RGBLED_BREATHING_TABLE))
 1819               	/* #APP */
 1820               	 ;  470 "quantum/rgblight.c" 1
 1821 0038 4491      		lpm r20, Z
 1822               		
 1823               	 ;  0 "" 2
 1824               	.LVL119:
 1825               		.loc 1 470 70 view .LVU465
 1826               	/* #NOAPP */
 1827               	.LBE42:
 1828               		.loc 1 470 43 is_stmt 0 view .LVU466
 1829 003a 8091 0000 		lds r24,rgblight_config
 1830 003e 881F      		rol r24
 1831 0040 8827      		clr r24
 1832 0042 881F      		rol r24
 1833 0044 9091 0000 		lds r25,rgblight_config+1
 1834 0048 292F      		mov r18,r25
 1835 004a 220F      		lsl r18
 1836 004c 97FB      		bst r25,7
 1837 004e 9927      		clr r25
 1838 0050 90F9      		bld r25,0
 1839               		.loc 1 470 3 view .LVU467
 1840 0052 6091 0000 		lds r22,rgblight_config+2
 1841 0056 822B      		or r24,r18
 1842 0058 0E94 0000 		call rgblight_sethsv_noeeprom
 1843               	.LVL120:
 471:quantum/rgblight.c ****   pos = (pos + 1) % 256;
 1844               		.loc 1 471 3 is_stmt 1 view .LVU468
 1845               		.loc 1 471 7 is_stmt 0 view .LVU469
 1846 005c 8091 0000 		lds r24,pos.2226
 1847 0060 8F5F      		subi r24,lo8(-(1))
 1848 0062 8093 0000 		sts pos.2226,r24
 1849               	.L82:
 1850               	/* epilogue start */
 472:quantum/rgblight.c **** }
 1851               		.loc 1 472 1 view .LVU470
 1852 0066 CF91      		pop r28
 1853               	.LVL121:
 1854               		.loc 1 472 1 view .LVU471
 1855 0068 0895      		ret
 1856               		.cfi_endproc
 1857               	.LFE37:
 1859               		.section	.text.rgblight_effect_rainbow_mood,"ax",@progbits
 1860               	.global	rgblight_effect_rainbow_mood
 1862               	rgblight_effect_rainbow_mood:
 1863               	.LVL122:
 1864               	.LFB38:
 473:quantum/rgblight.c **** void rgblight_effect_rainbow_mood(uint8_t interval) {
 1865               		.loc 1 473 53 is_stmt 1 view -0
 1866               		.cfi_startproc
 1867               		.loc 1 473 53 is_stmt 0 view .LVU473
 1868 0000 CF93      		push r28
 1869               	.LCFI26:
 1870               		.cfi_def_cfa_offset 3
 1871               		.cfi_offset 28, -2
 1872               	/* prologue: function */
 1873               	/* frame size = 0 */
 1874               	/* stack size = 1 */
 1875               	.L__stack_usage = 1
 1876 0002 C82F      		mov r28,r24
 474:quantum/rgblight.c ****   static uint16_t current_hue = 0;
 1877               		.loc 1 474 3 is_stmt 1 view .LVU474
 475:quantum/rgblight.c ****   static uint16_t last_timer = 0;
 1878               		.loc 1 475 3 view .LVU475
 476:quantum/rgblight.c **** 
 477:quantum/rgblight.c ****   if (timer_elapsed(last_timer) < pgm_read_byte(&RGBLED_RAINBOW_MOOD_INTERVALS[interval])) {
 1879               		.loc 1 477 3 view .LVU476
 1880               		.loc 1 477 7 is_stmt 0 view .LVU477
 1881 0004 8091 0000 		lds r24,last_timer.2238
 1882 0008 9091 0000 		lds r25,last_timer.2238+1
 1883               	.LVL123:
 1884               		.loc 1 477 7 view .LVU478
 1885 000c 0E94 0000 		call timer_elapsed
 1886               	.LVL124:
 1887               	.LBB43:
 1888               		.loc 1 477 35 is_stmt 1 view .LVU479
 1889               		.loc 1 477 35 view .LVU480
 1890               		.loc 1 477 35 view .LVU481
 1891 0010 EC2F      		mov r30,r28
 1892 0012 F0E0      		ldi r31,0
 1893 0014 E050      		subi r30,lo8(-(RGBLED_RAINBOW_MOOD_INTERVALS))
 1894 0016 F040      		sbci r31,hi8(-(RGBLED_RAINBOW_MOOD_INTERVALS))
 1895               	/* #APP */
 1896               	 ;  477 "quantum/rgblight.c" 1
 1897 0018 E491      		lpm r30, Z
 1898               		
 1899               	 ;  0 "" 2
 1900               	.LVL125:
 1901               		.loc 1 477 35 view .LVU482
 1902               	/* #NOAPP */
 1903               	.LBE43:
 1904               		.loc 1 477 6 is_stmt 0 view .LVU483
 1905 001a E817      		cp r30,r24
 1906 001c 1906      		cpc __zero_reg__,r25
 1907 001e 01F0      		breq .+2
 1908 0020 00F4      		brsh .L84
 478:quantum/rgblight.c ****     return;
 479:quantum/rgblight.c ****   }
 480:quantum/rgblight.c ****   last_timer = timer_read();
 1909               		.loc 1 480 3 is_stmt 1 view .LVU484
 1910               		.loc 1 480 16 is_stmt 0 view .LVU485
 1911 0022 0E94 0000 		call timer_read
 1912               	.LVL126:
 1913               		.loc 1 480 14 view .LVU486
 1914 0026 9093 0000 		sts last_timer.2238+1,r25
 1915 002a 8093 0000 		sts last_timer.2238,r24
 481:quantum/rgblight.c ****   rgblight_sethsv_noeeprom(current_hue, rgblight_config.sat, rgblight_config.val);
 1916               		.loc 1 481 3 is_stmt 1 view .LVU487
 1917 002e 4091 0000 		lds r20,rgblight_config+3
 1918 0032 6091 0000 		lds r22,rgblight_config+2
 1919 0036 8091 0000 		lds r24,current_hue.2237
 1920 003a 9091 0000 		lds r25,current_hue.2237+1
 1921 003e 0E94 0000 		call rgblight_sethsv_noeeprom
 1922               	.LVL127:
 482:quantum/rgblight.c ****   current_hue = (current_hue + 1) % 360;
 1923               		.loc 1 482 3 view .LVU488
 1924               		.loc 1 482 30 is_stmt 0 view .LVU489
 1925 0042 8091 0000 		lds r24,current_hue.2237
 1926 0046 9091 0000 		lds r25,current_hue.2237+1
 1927 004a 0196      		adiw r24,1
 1928               		.loc 1 482 35 view .LVU490
 1929 004c 68E6      		ldi r22,lo8(104)
 1930 004e 71E0      		ldi r23,lo8(1)
 1931 0050 0E94 0000 		call __udivmodhi4
 1932               		.loc 1 482 15 view .LVU491
 1933 0054 9093 0000 		sts current_hue.2237+1,r25
 1934 0058 8093 0000 		sts current_hue.2237,r24
 1935               	.L84:
 1936               	/* epilogue start */
 483:quantum/rgblight.c **** }
 1937               		.loc 1 483 1 view .LVU492
 1938 005c CF91      		pop r28
 1939               	.LVL128:
 1940               		.loc 1 483 1 view .LVU493
 1941 005e 0895      		ret
 1942               		.cfi_endproc
 1943               	.LFE38:
 1945               		.section	.text.rgblight_effect_rainbow_swirl,"ax",@progbits
 1946               	.global	rgblight_effect_rainbow_swirl
 1948               	rgblight_effect_rainbow_swirl:
 1949               	.LVL129:
 1950               	.LFB39:
 484:quantum/rgblight.c **** void rgblight_effect_rainbow_swirl(uint8_t interval) {
 1951               		.loc 1 484 54 is_stmt 1 view -0
 1952               		.cfi_startproc
 1953               		.loc 1 484 54 is_stmt 0 view .LVU495
 1954 0000 CF92      		push r12
 1955               	.LCFI27:
 1956               		.cfi_def_cfa_offset 3
 1957               		.cfi_offset 12, -2
 1958 0002 DF92      		push r13
 1959               	.LCFI28:
 1960               		.cfi_def_cfa_offset 4
 1961               		.cfi_offset 13, -3
 1962 0004 FF92      		push r15
 1963               	.LCFI29:
 1964               		.cfi_def_cfa_offset 5
 1965               		.cfi_offset 15, -4
 1966 0006 0F93      		push r16
 1967               	.LCFI30:
 1968               		.cfi_def_cfa_offset 6
 1969               		.cfi_offset 16, -5
 1970 0008 1F93      		push r17
 1971               	.LCFI31:
 1972               		.cfi_def_cfa_offset 7
 1973               		.cfi_offset 17, -6
 1974 000a CF93      		push r28
 1975               	.LCFI32:
 1976               		.cfi_def_cfa_offset 8
 1977               		.cfi_offset 28, -7
 1978 000c DF93      		push r29
 1979               	.LCFI33:
 1980               		.cfi_def_cfa_offset 9
 1981               		.cfi_offset 29, -8
 1982               	/* prologue: function */
 1983               	/* frame size = 0 */
 1984               	/* stack size = 7 */
 1985               	.L__stack_usage = 7
 1986 000e F82E      		mov r15,r24
 485:quantum/rgblight.c ****   static uint16_t current_hue = 0;
 1987               		.loc 1 485 3 is_stmt 1 view .LVU496
 486:quantum/rgblight.c ****   static uint16_t last_timer = 0;
 1988               		.loc 1 486 3 view .LVU497
 487:quantum/rgblight.c ****   uint16_t hue;
 1989               		.loc 1 487 3 view .LVU498
 488:quantum/rgblight.c ****   uint8_t i;
 1990               		.loc 1 488 3 view .LVU499
 489:quantum/rgblight.c ****   if (timer_elapsed(last_timer) < pgm_read_byte(&RGBLED_RAINBOW_MOOD_INTERVALS[interval / 2])) {
 1991               		.loc 1 489 3 view .LVU500
 1992               		.loc 1 489 7 is_stmt 0 view .LVU501
 1993 0010 8091 0000 		lds r24,last_timer.2246
 1994 0014 9091 0000 		lds r25,last_timer.2246+1
 1995               	.LVL130:
 1996               		.loc 1 489 7 view .LVU502
 1997 0018 0E94 0000 		call timer_elapsed
 1998               	.LVL131:
 1999               	.LBB44:
 2000               		.loc 1 489 35 is_stmt 1 view .LVU503
 2001               		.loc 1 489 35 view .LVU504
 2002               		.loc 1 489 35 view .LVU505
 2003 001c EF2D      		mov r30,r15
 2004 001e E695      		lsr r30
 2005 0020 F0E0      		ldi r31,0
 2006 0022 E050      		subi r30,lo8(-(RGBLED_RAINBOW_MOOD_INTERVALS))
 2007 0024 F040      		sbci r31,hi8(-(RGBLED_RAINBOW_MOOD_INTERVALS))
 2008               	/* #APP */
 2009               	 ;  489 "quantum/rgblight.c" 1
 2010 0026 E491      		lpm r30, Z
 2011               		
 2012               	 ;  0 "" 2
 2013               	.LVL132:
 2014               		.loc 1 489 35 view .LVU506
 2015               	/* #NOAPP */
 2016               	.LBE44:
 2017               		.loc 1 489 6 is_stmt 0 view .LVU507
 2018 0028 E817      		cp r30,r24
 2019 002a 1906      		cpc __zero_reg__,r25
 2020 002c 01F0      		breq .+2
 2021 002e 00F4      		brsh .L86
 490:quantum/rgblight.c ****     return;
 491:quantum/rgblight.c ****   }
 492:quantum/rgblight.c ****   last_timer = timer_read();
 2022               		.loc 1 492 3 is_stmt 1 view .LVU508
 2023               		.loc 1 492 16 is_stmt 0 view .LVU509
 2024 0030 0E94 0000 		call timer_read
 2025               	.LVL133:
 2026               		.loc 1 492 14 view .LVU510
 2027 0034 9093 0000 		sts last_timer.2246+1,r25
 2028 0038 8093 0000 		sts last_timer.2246,r24
 493:quantum/rgblight.c ****   for (i = 0; i < RGBLED_NUM; i++) {
 2029               		.loc 1 493 3 is_stmt 1 view .LVU511
 2030               	.LVL134:
 2031               		.loc 1 493 3 is_stmt 0 view .LVU512
 2032 003c 00E0      		ldi r16,lo8(led)
 2033 003e 10E0      		ldi r17,hi8(led)
 492:quantum/rgblight.c ****   for (i = 0; i < RGBLED_NUM; i++) {
 2034               		.loc 1 492 14 view .LVU513
 2035 0040 D0E0      		ldi r29,0
 2036 0042 C0E0      		ldi r28,0
 494:quantum/rgblight.c ****     hue = (360 / RGBLED_NUM * i + current_hue) % 360;
 2037               		.loc 1 494 9 view .LVU514
 2038 0044 88E6      		ldi r24,lo8(104)
 2039 0046 C82E      		mov r12,r24
 2040 0048 DD24      		clr r13
 2041 004a D394      		inc r13
 2042               	.LVL135:
 2043               	.L88:
 2044               		.loc 1 494 5 is_stmt 1 discriminator 3 view .LVU515
 495:quantum/rgblight.c ****     sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i]);
 2045               		.loc 1 495 5 discriminator 3 view .LVU516
 494:quantum/rgblight.c ****     hue = (360 / RGBLED_NUM * i + current_hue) % 360;
 2046               		.loc 1 494 33 is_stmt 0 discriminator 3 view .LVU517
 2047 004c 8091 0000 		lds r24,current_hue.2245
 2048 0050 9091 0000 		lds r25,current_hue.2245+1
 2049 0054 8C0F      		add r24,r28
 2050 0056 9D1F      		adc r25,r29
 494:quantum/rgblight.c ****     hue = (360 / RGBLED_NUM * i + current_hue) % 360;
 2051               		.loc 1 494 9 discriminator 3 view .LVU518
 2052 0058 B601      		movw r22,r12
 2053 005a 0E94 0000 		call __udivmodhi4
 2054               		.loc 1 495 5 discriminator 3 view .LVU519
 2055 005e 9801      		movw r18,r16
 2056 0060 4091 0000 		lds r20,rgblight_config+3
 2057 0064 6091 0000 		lds r22,rgblight_config+2
 2058 0068 0E94 0000 		call sethsv
 2059               	.LVL136:
 2060               		.loc 1 495 5 discriminator 3 view .LVU520
 2061 006c EC96      		adiw r28,60
 2062 006e 0D5F      		subi r16,-3
 2063 0070 1F4F      		sbci r17,-1
 493:quantum/rgblight.c ****     hue = (360 / RGBLED_NUM * i + current_hue) % 360;
 2064               		.loc 1 493 3 discriminator 3 view .LVU521
 2065 0072 C836      		cpi r28,104
 2066 0074 81E0      		ldi r24,1
 2067 0076 D807      		cpc r29,r24
 2068 0078 01F4      		brne .L88
 496:quantum/rgblight.c ****   }
 497:quantum/rgblight.c ****   rgblight_set();
 2069               		.loc 1 497 3 is_stmt 1 view .LVU522
 2070 007a 0E94 0000 		call rgblight_set
 2071               	.LVL137:
 498:quantum/rgblight.c **** 
 499:quantum/rgblight.c ****   if (interval % 2) {
 2072               		.loc 1 499 3 view .LVU523
 2073 007e 8091 0000 		lds r24,current_hue.2245
 2074 0082 9091 0000 		lds r25,current_hue.2245+1
 2075               		.loc 1 499 6 is_stmt 0 view .LVU524
 2076 0086 F0FE      		sbrs r15,0
 2077 0088 00C0      		rjmp .L89
 500:quantum/rgblight.c ****     current_hue = (current_hue + 1) % 360;
 2078               		.loc 1 500 5 is_stmt 1 view .LVU525
 2079               		.loc 1 500 32 is_stmt 0 view .LVU526
 2080 008a 0196      		adiw r24,1
 2081               		.loc 1 500 37 view .LVU527
 2082 008c BE01      		movw r22,r28
 2083 008e 0E94 0000 		call __udivmodhi4
 2084               	.L91:
 501:quantum/rgblight.c ****   } else {
 502:quantum/rgblight.c ****     if (current_hue - 1 < 0) {
 503:quantum/rgblight.c ****       current_hue = 359;
 504:quantum/rgblight.c ****     } else {
 505:quantum/rgblight.c ****       current_hue = current_hue - 1;
 2085               		.loc 1 505 19 view .LVU528
 2086 0092 9093 0000 		sts current_hue.2245+1,r25
 2087 0096 8093 0000 		sts current_hue.2245,r24
 2088               	.L86:
 2089               	/* epilogue start */
 506:quantum/rgblight.c ****     }
 507:quantum/rgblight.c ****   }
 508:quantum/rgblight.c **** }
 2090               		.loc 1 508 1 view .LVU529
 2091 009a DF91      		pop r29
 2092 009c CF91      		pop r28
 2093 009e 1F91      		pop r17
 2094 00a0 0F91      		pop r16
 2095 00a2 FF90      		pop r15
 2096               	.LVL138:
 2097               		.loc 1 508 1 view .LVU530
 2098 00a4 DF90      		pop r13
 2099 00a6 CF90      		pop r12
 2100 00a8 0895      		ret
 2101               	.LVL139:
 2102               	.L89:
 502:quantum/rgblight.c ****       current_hue = 359;
 2103               		.loc 1 502 5 is_stmt 1 view .LVU531
 505:quantum/rgblight.c ****     }
 2104               		.loc 1 505 7 view .LVU532
 505:quantum/rgblight.c ****     }
 2105               		.loc 1 505 33 is_stmt 0 view .LVU533
 2106 00aa 0197      		sbiw r24,1
 2107 00ac 00C0      		rjmp .L91
 2108               		.cfi_endproc
 2109               	.LFE39:
 2111               		.section	.text.rgblight_effect_snake,"ax",@progbits
 2112               	.global	rgblight_effect_snake
 2114               	rgblight_effect_snake:
 2115               	.LVL140:
 2116               	.LFB40:
 509:quantum/rgblight.c **** void rgblight_effect_snake(uint8_t interval) {
 2117               		.loc 1 509 46 is_stmt 1 view -0
 2118               		.cfi_startproc
 2119               		.loc 1 509 46 is_stmt 0 view .LVU535
 2120 0000 AF92      		push r10
 2121               	.LCFI34:
 2122               		.cfi_def_cfa_offset 3
 2123               		.cfi_offset 10, -2
 2124 0002 BF92      		push r11
 2125               	.LCFI35:
 2126               		.cfi_def_cfa_offset 4
 2127               		.cfi_offset 11, -3
 2128 0004 CF92      		push r12
 2129               	.LCFI36:
 2130               		.cfi_def_cfa_offset 5
 2131               		.cfi_offset 12, -4
 2132 0006 DF92      		push r13
 2133               	.LCFI37:
 2134               		.cfi_def_cfa_offset 6
 2135               		.cfi_offset 13, -5
 2136 0008 EF92      		push r14
 2137               	.LCFI38:
 2138               		.cfi_def_cfa_offset 7
 2139               		.cfi_offset 14, -6
 2140 000a FF92      		push r15
 2141               	.LCFI39:
 2142               		.cfi_def_cfa_offset 8
 2143               		.cfi_offset 15, -7
 2144 000c 0F93      		push r16
 2145               	.LCFI40:
 2146               		.cfi_def_cfa_offset 9
 2147               		.cfi_offset 16, -8
 2148 000e 1F93      		push r17
 2149               	.LCFI41:
 2150               		.cfi_def_cfa_offset 10
 2151               		.cfi_offset 17, -9
 2152 0010 CF93      		push r28
 2153               	.LCFI42:
 2154               		.cfi_def_cfa_offset 11
 2155               		.cfi_offset 28, -10
 2156 0012 DF93      		push r29
 2157               	.LCFI43:
 2158               		.cfi_def_cfa_offset 12
 2159               		.cfi_offset 29, -11
 2160               	/* prologue: function */
 2161               	/* frame size = 0 */
 2162               	/* stack size = 10 */
 2163               	.L__stack_usage = 10
 2164 0014 C82F      		mov r28,r24
 510:quantum/rgblight.c ****   static uint8_t pos = 0;
 2165               		.loc 1 510 3 is_stmt 1 view .LVU536
 511:quantum/rgblight.c ****   static uint16_t last_timer = 0;
 2166               		.loc 1 511 3 view .LVU537
 512:quantum/rgblight.c ****   uint8_t i, j;
 2167               		.loc 1 512 3 view .LVU538
 513:quantum/rgblight.c ****   int8_t k;
 2168               		.loc 1 513 3 view .LVU539
 514:quantum/rgblight.c ****   int8_t increment = 1;
 2169               		.loc 1 514 3 view .LVU540
 2170               	.LVL141:
 515:quantum/rgblight.c ****   if (interval % 2) {
 2171               		.loc 1 515 3 view .LVU541
 516:quantum/rgblight.c ****     increment = -1;
 2172               		.loc 1 516 15 is_stmt 0 view .LVU542
 2173 0016 FF24      		clr r15
 2174 0018 FA94      		dec r15
 515:quantum/rgblight.c ****   if (interval % 2) {
 2175               		.loc 1 515 6 view .LVU543
 2176 001a 80FD      		sbrc r24,0
 2177 001c 00C0      		rjmp .L93
 514:quantum/rgblight.c ****   int8_t increment = 1;
 2178               		.loc 1 514 10 view .LVU544
 2179 001e FF24      		clr r15
 2180 0020 F394      		inc r15
 2181               	.L93:
 2182               	.LVL142:
 517:quantum/rgblight.c ****   }
 518:quantum/rgblight.c ****   if (timer_elapsed(last_timer) < pgm_read_byte(&RGBLED_SNAKE_INTERVALS[interval / 2])) {
 2183               		.loc 1 518 3 is_stmt 1 view .LVU545
 2184               		.loc 1 518 7 is_stmt 0 view .LVU546
 2185 0022 8091 0000 		lds r24,last_timer.2259
 2186 0026 9091 0000 		lds r25,last_timer.2259+1
 2187               	.LVL143:
 2188               		.loc 1 518 7 view .LVU547
 2189 002a 0E94 0000 		call timer_elapsed
 2190               	.LVL144:
 2191               	.LBB45:
 2192               		.loc 1 518 35 is_stmt 1 view .LVU548
 2193               		.loc 1 518 35 view .LVU549
 2194               		.loc 1 518 35 view .LVU550
 2195 002e C695      		lsr r28
 2196               	.LVL145:
 2197               		.loc 1 518 35 is_stmt 0 view .LVU551
 2198 0030 EC2F      		mov r30,r28
 2199 0032 F0E0      		ldi r31,0
 2200 0034 E050      		subi r30,lo8(-(RGBLED_SNAKE_INTERVALS))
 2201 0036 F040      		sbci r31,hi8(-(RGBLED_SNAKE_INTERVALS))
 2202               	/* #APP */
 2203               	 ;  518 "quantum/rgblight.c" 1
 2204 0038 E491      		lpm r30, Z
 2205               		
 2206               	 ;  0 "" 2
 2207               	.LVL146:
 2208               		.loc 1 518 35 is_stmt 1 view .LVU552
 2209               	/* #NOAPP */
 2210               	.LBE45:
 2211               		.loc 1 518 6 is_stmt 0 view .LVU553
 2212 003a E817      		cp r30,r24
 2213 003c 1906      		cpc __zero_reg__,r25
 2214 003e 01F0      		breq .+4
 2215 0040 00F0      		brlo .+2
 2216 0042 00C0      		rjmp .L92
 519:quantum/rgblight.c ****     return;
 520:quantum/rgblight.c ****   }
 521:quantum/rgblight.c ****   last_timer = timer_read();
 2217               		.loc 1 521 3 is_stmt 1 view .LVU554
 2218               		.loc 1 521 16 is_stmt 0 view .LVU555
 2219 0044 0E94 0000 		call timer_read
 2220               	.LVL147:
 2221               		.loc 1 521 14 view .LVU556
 2222 0048 9093 0000 		sts last_timer.2259+1,r25
 2223 004c 8093 0000 		sts last_timer.2259,r24
 522:quantum/rgblight.c ****   for (i = 0; i < RGBLED_NUM; i++) {
 2224               		.loc 1 522 3 is_stmt 1 view .LVU557
 2225               	.LVL148:
 2226               		.loc 1 522 3 is_stmt 0 view .LVU558
 2227 0050 C0E0      		ldi r28,lo8(led)
 2228 0052 D0E0      		ldi r29,hi8(led)
 521:quantum/rgblight.c ****   for (i = 0; i < RGBLED_NUM; i++) {
 2229               		.loc 1 521 14 view .LVU559
 2230 0054 10E0      		ldi r17,0
 2231 0056 00E0      		ldi r16,0
 523:quantum/rgblight.c ****     led[i].r = 0;
 524:quantum/rgblight.c ****     led[i].g = 0;
 525:quantum/rgblight.c ****     led[i].b = 0;
 526:quantum/rgblight.c ****     for (j = 0; j < RGBLIGHT_EFFECT_SNAKE_LENGTH; j++) {
 527:quantum/rgblight.c ****       k = pos + j * increment;
 528:quantum/rgblight.c ****       if (k < 0) {
 529:quantum/rgblight.c ****         k = k + RGBLED_NUM;
 530:quantum/rgblight.c ****       }
 531:quantum/rgblight.c ****       if (i == k) {
 532:quantum/rgblight.c ****         sethsv(rgblight_config.hue, rgblight_config.sat, (uint8_t)(rgblight_config.val*(RGBLIGHT_EF
 2232               		.loc 1 532 120 view .LVU560
 2233 0058 97E0      		ldi r25,lo8(7)
 2234 005a C92E      		mov r12,r25
 2235 005c D12C      		mov r13,__zero_reg__
 2236               	.LVL149:
 2237               	.L98:
 523:quantum/rgblight.c ****     led[i].r = 0;
 2238               		.loc 1 523 5 is_stmt 1 view .LVU561
 523:quantum/rgblight.c ****     led[i].r = 0;
 2239               		.loc 1 523 14 is_stmt 0 view .LVU562
 2240 005e 1982      		std Y+1,__zero_reg__
 524:quantum/rgblight.c ****     led[i].b = 0;
 2241               		.loc 1 524 5 is_stmt 1 view .LVU563
 524:quantum/rgblight.c ****     led[i].b = 0;
 2242               		.loc 1 524 14 is_stmt 0 view .LVU564
 2243 0060 1882      		st Y,__zero_reg__
 525:quantum/rgblight.c ****     for (j = 0; j < RGBLIGHT_EFFECT_SNAKE_LENGTH; j++) {
 2244               		.loc 1 525 5 is_stmt 1 view .LVU565
 525:quantum/rgblight.c ****     for (j = 0; j < RGBLIGHT_EFFECT_SNAKE_LENGTH; j++) {
 2245               		.loc 1 525 14 is_stmt 0 view .LVU566
 2246 0062 1A82      		std Y+2,__zero_reg__
 526:quantum/rgblight.c ****       k = pos + j * increment;
 2247               		.loc 1 526 5 is_stmt 1 view .LVU567
 2248               	.LVL150:
 525:quantum/rgblight.c ****     for (j = 0; j < RGBLIGHT_EFFECT_SNAKE_LENGTH; j++) {
 2249               		.loc 1 525 14 is_stmt 0 view .LVU568
 2250 0064 87E0      		ldi r24,lo8(7)
 2251 0066 A82E      		mov r10,r24
 2252 0068 B12C      		mov r11,__zero_reg__
 2253 006a E12C      		mov r14,__zero_reg__
 2254               	.LVL151:
 2255               	.L97:
 527:quantum/rgblight.c ****       if (k < 0) {
 2256               		.loc 1 527 7 is_stmt 1 view .LVU569
 527:quantum/rgblight.c ****       if (k < 0) {
 2257               		.loc 1 527 15 is_stmt 0 view .LVU570
 2258 006c 8091 0000 		lds r24,pos.2258
 2259 0070 8E0D      		add r24,r14
 2260               	.LVL152:
 528:quantum/rgblight.c ****         k = k + RGBLED_NUM;
 2261               		.loc 1 528 7 is_stmt 1 view .LVU571
 528:quantum/rgblight.c ****         k = k + RGBLED_NUM;
 2262               		.loc 1 528 10 is_stmt 0 view .LVU572
 2263 0072 87FD      		sbrc r24,7
 529:quantum/rgblight.c ****       }
 2264               		.loc 1 529 9 is_stmt 1 view .LVU573
 529:quantum/rgblight.c ****       }
 2265               		.loc 1 529 15 is_stmt 0 view .LVU574
 2266 0074 8A5F      		subi r24,lo8(-(6))
 2267               	.LVL153:
 2268               	.L95:
 531:quantum/rgblight.c ****         sethsv(rgblight_config.hue, rgblight_config.sat, (uint8_t)(rgblight_config.val*(RGBLIGHT_EF
 2269               		.loc 1 531 7 is_stmt 1 view .LVU575
 531:quantum/rgblight.c ****         sethsv(rgblight_config.hue, rgblight_config.sat, (uint8_t)(rgblight_config.val*(RGBLIGHT_EF
 2270               		.loc 1 531 13 is_stmt 0 view .LVU576
 2271 0076 082E      		mov __tmp_reg__,r24
 2272 0078 000C      		lsl r0
 2273 007a 990B      		sbc r25,r25
 531:quantum/rgblight.c ****         sethsv(rgblight_config.hue, rgblight_config.sat, (uint8_t)(rgblight_config.val*(RGBLIGHT_EF
 2274               		.loc 1 531 10 view .LVU577
 2275 007c 8017      		cp r24,r16
 2276 007e 9107      		cpc r25,r17
 2277 0080 01F4      		brne .L96
 2278               		.loc 1 532 9 is_stmt 1 view .LVU578
 2279               		.loc 1 532 83 is_stmt 0 view .LVU579
 2280 0082 2091 0000 		lds r18,rgblight_config+3
 2281               		.loc 1 532 87 view .LVU580
 2282 0086 2A9D      		mul r18,r10
 2283 0088 C001      		movw r24,r0
 2284 008a 2B9D      		mul r18,r11
 2285 008c 900D      		add r25,r0
 2286 008e 1124      		clr __zero_reg__
 2287               	.LVL154:
 2288               		.loc 1 532 120 view .LVU581
 2289 0090 B601      		movw r22,r12
 2290 0092 0E94 0000 		call __divmodhi4
 2291 0096 462F      		mov r20,r22
 2292               		.loc 1 532 31 view .LVU582
 2293 0098 8091 0000 		lds r24,rgblight_config
 2294 009c 881F      		rol r24
 2295 009e 8827      		clr r24
 2296 00a0 881F      		rol r24
 2297 00a2 9091 0000 		lds r25,rgblight_config+1
 2298 00a6 592F      		mov r21,r25
 2299 00a8 550F      		lsl r21
 2300 00aa 97FB      		bst r25,7
 2301 00ac 9927      		clr r25
 2302 00ae 90F9      		bld r25,0
 2303               		.loc 1 532 9 view .LVU583
 2304 00b0 9E01      		movw r18,r28
 2305 00b2 6091 0000 		lds r22,rgblight_config+2
 2306 00b6 852B      		or r24,r21
 2307 00b8 0E94 0000 		call sethsv
 2308               	.LVL155:
 2309               	.L96:
 2310               		.loc 1 532 9 view .LVU584
 2311 00bc EF0C      		add r14,r15
 2312 00be 81E0      		ldi r24,1
 2313 00c0 A81A      		sub r10,r24
 2314 00c2 B108      		sbc r11,__zero_reg__
 526:quantum/rgblight.c ****       k = pos + j * increment;
 2315               		.loc 1 526 5 discriminator 2 view .LVU585
 2316 00c4 01F4      		brne .L97
 2317               	.LVL156:
 526:quantum/rgblight.c ****       k = pos + j * increment;
 2318               		.loc 1 526 5 discriminator 2 view .LVU586
 2319 00c6 0F5F      		subi r16,-1
 2320 00c8 1F4F      		sbci r17,-1
 2321               	.LVL157:
 526:quantum/rgblight.c ****       k = pos + j * increment;
 2322               		.loc 1 526 5 discriminator 2 view .LVU587
 2323 00ca 2396      		adiw r28,3
 522:quantum/rgblight.c ****     led[i].r = 0;
 2324               		.loc 1 522 3 discriminator 2 view .LVU588
 2325 00cc 0630      		cpi r16,6
 2326 00ce 1105      		cpc r17,__zero_reg__
 2327 00d0 01F4      		brne .L98
 533:quantum/rgblight.c ****       }
 534:quantum/rgblight.c ****     }
 535:quantum/rgblight.c ****   }
 536:quantum/rgblight.c ****   rgblight_set();
 2328               		.loc 1 536 3 is_stmt 1 view .LVU589
 2329 00d2 0E94 0000 		call rgblight_set
 2330               	.LVL158:
 537:quantum/rgblight.c ****   if (increment == 1) {
 2331               		.loc 1 537 3 view .LVU590
 2332 00d6 8091 0000 		lds r24,pos.2258
 2333               		.loc 1 537 6 is_stmt 0 view .LVU591
 2334 00da 91E0      		ldi r25,lo8(1)
 2335 00dc F912      		cpse r15,r25
 2336 00de 00C0      		rjmp .L99
 538:quantum/rgblight.c ****     if (pos - 1 < 0) {
 2337               		.loc 1 538 5 is_stmt 1 view .LVU592
 2338               		.loc 1 538 8 is_stmt 0 view .LVU593
 2339 00e0 8111      		cpse r24,__zero_reg__
 2340 00e2 00C0      		rjmp .L100
 539:quantum/rgblight.c ****       pos = RGBLED_NUM - 1;
 2341               		.loc 1 539 7 is_stmt 1 view .LVU594
 2342               		.loc 1 539 11 is_stmt 0 view .LVU595
 2343 00e4 85E0      		ldi r24,lo8(5)
 2344               	.L104:
 540:quantum/rgblight.c ****     } else {
 541:quantum/rgblight.c ****       pos -= 1;
 542:quantum/rgblight.c ****     }
 543:quantum/rgblight.c ****   } else {
 544:quantum/rgblight.c ****     pos = (pos + 1) % RGBLED_NUM;
 2345               		.loc 1 544 9 view .LVU596
 2346 00e6 8093 0000 		sts pos.2258,r24
 2347               	.LVL159:
 2348               	.L92:
 2349               	/* epilogue start */
 545:quantum/rgblight.c ****   }
 546:quantum/rgblight.c **** }
 2350               		.loc 1 546 1 view .LVU597
 2351 00ea DF91      		pop r29
 2352 00ec CF91      		pop r28
 2353 00ee 1F91      		pop r17
 2354 00f0 0F91      		pop r16
 2355 00f2 FF90      		pop r15
 2356               	.LVL160:
 2357               		.loc 1 546 1 view .LVU598
 2358 00f4 EF90      		pop r14
 2359 00f6 DF90      		pop r13
 2360 00f8 CF90      		pop r12
 2361 00fa BF90      		pop r11
 2362 00fc AF90      		pop r10
 2363 00fe 0895      		ret
 2364               	.LVL161:
 2365               	.L100:
 541:quantum/rgblight.c ****     }
 2366               		.loc 1 541 7 is_stmt 1 view .LVU599
 541:quantum/rgblight.c ****     }
 2367               		.loc 1 541 11 is_stmt 0 view .LVU600
 2368 0100 8150      		subi r24,lo8(-(-1))
 2369 0102 00C0      		rjmp .L104
 2370               	.L99:
 544:quantum/rgblight.c ****   }
 2371               		.loc 1 544 5 is_stmt 1 view .LVU601
 544:quantum/rgblight.c ****   }
 2372               		.loc 1 544 16 is_stmt 0 view .LVU602
 2373 0104 90E0      		ldi r25,0
 2374 0106 0196      		adiw r24,1
 544:quantum/rgblight.c ****   }
 2375               		.loc 1 544 21 view .LVU603
 2376 0108 B801      		movw r22,r16
 2377 010a 0E94 0000 		call __divmodhi4
 2378 010e 00C0      		rjmp .L104
 2379               		.cfi_endproc
 2380               	.LFE40:
 2382               		.section	.text.rgblight_effect_knight,"ax",@progbits
 2383               	.global	rgblight_effect_knight
 2385               	rgblight_effect_knight:
 2386               	.LVL162:
 2387               	.LFB41:
 547:quantum/rgblight.c **** void rgblight_effect_knight(uint8_t interval) {
 2388               		.loc 1 547 47 is_stmt 1 view -0
 2389               		.cfi_startproc
 2390               		.loc 1 547 47 is_stmt 0 view .LVU605
 2391 0000 BF92      		push r11
 2392               	.LCFI44:
 2393               		.cfi_def_cfa_offset 3
 2394               		.cfi_offset 11, -2
 2395 0002 CF92      		push r12
 2396               	.LCFI45:
 2397               		.cfi_def_cfa_offset 4
 2398               		.cfi_offset 12, -3
 2399 0004 DF92      		push r13
 2400               	.LCFI46:
 2401               		.cfi_def_cfa_offset 5
 2402               		.cfi_offset 13, -4
 2403 0006 EF92      		push r14
 2404               	.LCFI47:
 2405               		.cfi_def_cfa_offset 6
 2406               		.cfi_offset 14, -5
 2407 0008 FF92      		push r15
 2408               	.LCFI48:
 2409               		.cfi_def_cfa_offset 7
 2410               		.cfi_offset 15, -6
 2411 000a 0F93      		push r16
 2412               	.LCFI49:
 2413               		.cfi_def_cfa_offset 8
 2414               		.cfi_offset 16, -7
 2415 000c 1F93      		push r17
 2416               	.LCFI50:
 2417               		.cfi_def_cfa_offset 9
 2418               		.cfi_offset 17, -8
 2419 000e CF93      		push r28
 2420               	.LCFI51:
 2421               		.cfi_def_cfa_offset 10
 2422               		.cfi_offset 28, -9
 2423 0010 DF93      		push r29
 2424               	.LCFI52:
 2425               		.cfi_def_cfa_offset 11
 2426               		.cfi_offset 29, -10
 2427 0012 CDB7      		in r28,__SP_L__
 2428 0014 DEB7      		in r29,__SP_H__
 2429               	.LCFI53:
 2430               		.cfi_def_cfa_register 28
 2431 0016 6297      		sbiw r28,18
 2432               	.LCFI54:
 2433               		.cfi_def_cfa_offset 29
 2434 0018 0FB6      		in __tmp_reg__,__SREG__
 2435 001a F894      		cli
 2436 001c DEBF      		out __SP_H__,r29
 2437 001e 0FBE      		out __SREG__,__tmp_reg__
 2438 0020 CDBF      		out __SP_L__,r28
 2439               	/* prologue: function */
 2440               	/* frame size = 18 */
 2441               	/* stack size = 27 */
 2442               	.L__stack_usage = 27
 2443 0022 182F      		mov r17,r24
 548:quantum/rgblight.c ****   static int8_t pos = 0;
 2444               		.loc 1 548 3 is_stmt 1 view .LVU606
 549:quantum/rgblight.c ****   static uint16_t last_timer = 0;
 2445               		.loc 1 549 3 view .LVU607
 550:quantum/rgblight.c ****   uint8_t i, j, cur;
 2446               		.loc 1 550 3 view .LVU608
 551:quantum/rgblight.c ****   int8_t k;
 2447               		.loc 1 551 3 view .LVU609
 552:quantum/rgblight.c ****   LED_TYPE preled[RGBLED_NUM];
 2448               		.loc 1 552 3 view .LVU610
 553:quantum/rgblight.c ****   static int8_t increment = -1;
 2449               		.loc 1 553 3 view .LVU611
 554:quantum/rgblight.c ****   if (timer_elapsed(last_timer) < pgm_read_byte(&RGBLED_KNIGHT_INTERVALS[interval])) {
 2450               		.loc 1 554 3 view .LVU612
 2451               		.loc 1 554 7 is_stmt 0 view .LVU613
 2452 0024 8091 0000 		lds r24,last_timer.2277
 2453 0028 9091 0000 		lds r25,last_timer.2277+1
 2454               	.LVL163:
 2455               		.loc 1 554 7 view .LVU614
 2456 002c 0E94 0000 		call timer_elapsed
 2457               	.LVL164:
 2458               	.LBB46:
 2459               		.loc 1 554 35 is_stmt 1 view .LVU615
 2460               		.loc 1 554 35 view .LVU616
 2461               		.loc 1 554 35 view .LVU617
 2462 0030 E12F      		mov r30,r17
 2463 0032 F0E0      		ldi r31,0
 2464 0034 E050      		subi r30,lo8(-(RGBLED_KNIGHT_INTERVALS))
 2465 0036 F040      		sbci r31,hi8(-(RGBLED_KNIGHT_INTERVALS))
 2466               	/* #APP */
 2467               	 ;  554 "quantum/rgblight.c" 1
 2468 0038 E491      		lpm r30, Z
 2469               		
 2470               	 ;  0 "" 2
 2471               	.LVL165:
 2472               		.loc 1 554 35 view .LVU618
 2473               	/* #NOAPP */
 2474               	.LBE46:
 2475               		.loc 1 554 6 is_stmt 0 view .LVU619
 2476 003a E817      		cp r30,r24
 2477 003c 1906      		cpc __zero_reg__,r25
 2478 003e 01F0      		breq .+4
 2479 0040 00F0      		brlo .+2
 2480 0042 00C0      		rjmp .L105
 555:quantum/rgblight.c ****     return;
 556:quantum/rgblight.c ****   }
 557:quantum/rgblight.c ****   last_timer = timer_read();
 2481               		.loc 1 557 3 is_stmt 1 view .LVU620
 2482               		.loc 1 557 16 is_stmt 0 view .LVU621
 2483 0044 0E94 0000 		call timer_read
 2484               	.LVL166:
 2485               		.loc 1 557 14 view .LVU622
 2486 0048 9093 0000 		sts last_timer.2277+1,r25
 2487 004c 8093 0000 		sts last_timer.2277,r24
 558:quantum/rgblight.c ****   for (i = 0; i < RGBLED_NUM; i++) {
 2488               		.loc 1 558 3 is_stmt 1 view .LVU623
 2489               	.LVL167:
 2490               		.loc 1 558 3 is_stmt 0 view .LVU624
 2491 0050 8E01      		movw r16,r28
 2492 0052 0F5F      		subi r16,-1
 2493 0054 1F4F      		sbci r17,-1
 557:quantum/rgblight.c ****   for (i = 0; i < RGBLED_NUM; i++) {
 2494               		.loc 1 557 14 view .LVU625
 2495 0056 F12C      		mov r15,__zero_reg__
 2496 0058 E12C      		mov r14,__zero_reg__
 2497 005a 6801      		movw r12,r16
 2498               	.LVL168:
 2499               	.L111:
 559:quantum/rgblight.c ****     preled[i].r = 0;
 2500               		.loc 1 559 5 is_stmt 1 view .LVU626
 2501               		.loc 1 559 17 is_stmt 0 view .LVU627
 2502 005c D801      		movw r26,r16
 2503 005e 1196      		adiw r26,1
 2504 0060 1C92      		st X,__zero_reg__
 2505 0062 1197      		sbiw r26,1
 560:quantum/rgblight.c ****     preled[i].g = 0;
 2506               		.loc 1 560 5 is_stmt 1 view .LVU628
 2507               		.loc 1 560 17 is_stmt 0 view .LVU629
 2508 0064 1C92      		st X,__zero_reg__
 561:quantum/rgblight.c ****     preled[i].b = 0;
 2509               		.loc 1 561 5 is_stmt 1 view .LVU630
 2510               		.loc 1 561 17 is_stmt 0 view .LVU631
 2511 0066 1296      		adiw r26,2
 2512 0068 1C92      		st X,__zero_reg__
 562:quantum/rgblight.c ****     for (j = 0; j < RGBLIGHT_EFFECT_KNIGHT_LENGTH; j++) {
 2513               		.loc 1 562 5 is_stmt 1 view .LVU632
 2514               	.LVL169:
 2515               		.loc 1 562 12 is_stmt 0 view .LVU633
 2516 006a B12C      		mov r11,__zero_reg__
 2517               	.LVL170:
 2518               	.L110:
 563:quantum/rgblight.c ****       k = pos + j * increment;
 2519               		.loc 1 563 7 is_stmt 1 view .LVU634
 564:quantum/rgblight.c ****       if (k < 0) {
 2520               		.loc 1 564 7 view .LVU635
 563:quantum/rgblight.c ****       k = pos + j * increment;
 2521               		.loc 1 563 15 is_stmt 0 view .LVU636
 2522 006c 9091 0000 		lds r25,increment.2283
 2523 0070 8091 0000 		lds r24,pos.2276
 2524 0074 B99E      		mul r11,r25
 2525 0076 800D      		add r24,r0
 2526 0078 1124      		clr __zero_reg__
 2527               	.LVL171:
 563:quantum/rgblight.c ****       k = pos + j * increment;
 2528               		.loc 1 563 15 view .LVU637
 2529 007a 8630      		cpi r24,lo8(6)
 2530 007c 04F0      		brlt .L107
 2531 007e 85E0      		ldi r24,lo8(5)
 2532               	.LVL172:
 2533               	.L107:
 565:quantum/rgblight.c ****         k = 0;
 566:quantum/rgblight.c ****       }
 567:quantum/rgblight.c ****       if (k >= RGBLED_NUM) {
 568:quantum/rgblight.c ****         k = RGBLED_NUM - 1;
 569:quantum/rgblight.c ****       }
 570:quantum/rgblight.c ****       if (i == k) {
 2534               		.loc 1 570 7 is_stmt 1 view .LVU638
 2535               		.loc 1 570 13 is_stmt 0 view .LVU639
 2536 0080 87FD      		sbrc r24,7
 2537 0082 80E0      		ldi r24,0
 2538               	.LVL173:
 2539               	.L109:
 2540               		.loc 1 570 13 view .LVU640
 2541 0084 082E      		mov __tmp_reg__,r24
 2542 0086 000C      		lsl r0
 2543 0088 990B      		sbc r25,r25
 2544               		.loc 1 570 10 view .LVU641
 2545 008a 8E15      		cp r24,r14
 2546 008c 9F05      		cpc r25,r15
 2547 008e 01F4      		brne .L108
 571:quantum/rgblight.c ****         sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&preled[i
 2548               		.loc 1 571 9 is_stmt 1 view .LVU642
 2549               		.loc 1 571 31 is_stmt 0 view .LVU643
 2550 0090 8091 0000 		lds r24,rgblight_config
 2551 0094 881F      		rol r24
 2552 0096 8827      		clr r24
 2553 0098 881F      		rol r24
 2554 009a 9091 0000 		lds r25,rgblight_config+1
 2555 009e 592F      		mov r21,r25
 2556 00a0 550F      		lsl r21
 2557 00a2 97FB      		bst r25,7
 2558 00a4 9927      		clr r25
 2559 00a6 90F9      		bld r25,0
 2560               		.loc 1 571 9 view .LVU644
 2561 00a8 9801      		movw r18,r16
 2562 00aa 4091 0000 		lds r20,rgblight_config+3
 2563 00ae 6091 0000 		lds r22,rgblight_config+2
 2564 00b2 852B      		or r24,r21
 2565 00b4 0E94 0000 		call sethsv
 2566               	.LVL174:
 2567               	.L108:
 562:quantum/rgblight.c ****       k = pos + j * increment;
 2568               		.loc 1 562 53 discriminator 2 view .LVU645
 2569 00b8 B394      		inc r11
 2570               	.LVL175:
 562:quantum/rgblight.c ****       k = pos + j * increment;
 2571               		.loc 1 562 5 discriminator 2 view .LVU646
 2572 00ba B7E0      		ldi r27,lo8(7)
 2573 00bc BB12      		cpse r11,r27
 2574 00be 00C0      		rjmp .L110
 2575               	.LVL176:
 562:quantum/rgblight.c ****       k = pos + j * increment;
 2576               		.loc 1 562 5 discriminator 2 view .LVU647
 2577 00c0 EFEF      		ldi r30,-1
 2578 00c2 EE1A      		sub r14,r30
 2579 00c4 FE0A      		sbc r15,r30
 2580               	.LVL177:
 562:quantum/rgblight.c ****       k = pos + j * increment;
 2581               		.loc 1 562 5 discriminator 2 view .LVU648
 2582 00c6 0D5F      		subi r16,-3
 2583 00c8 1F4F      		sbci r17,-1
 558:quantum/rgblight.c ****     preled[i].r = 0;
 2584               		.loc 1 558 3 discriminator 2 view .LVU649
 2585 00ca F6E0      		ldi r31,6
 2586 00cc EF16      		cp r14,r31
 2587 00ce F104      		cpc r15,__zero_reg__
 2588 00d0 01F4      		brne .L111
 2589 00d2 20E0      		ldi r18,lo8(led)
 2590 00d4 30E0      		ldi r19,hi8(led)
 558:quantum/rgblight.c ****     preled[i].r = 0;
 2591               		.loc 1 558 3 view .LVU650
 2592 00d6 09E0      		ldi r16,lo8(9)
 2593 00d8 10E0      		ldi r17,0
 572:quantum/rgblight.c ****       }
 573:quantum/rgblight.c ****     }
 574:quantum/rgblight.c ****   }
 575:quantum/rgblight.c ****   if (RGBLIGHT_EFFECT_KNIGHT_OFFSET) {
 576:quantum/rgblight.c ****     for (i = 0; i < RGBLED_NUM; i++) {
 577:quantum/rgblight.c ****       cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % RGBLED_NUM;
 2594               		.loc 1 577 49 view .LVU651
 2595 00da 56E0      		ldi r21,lo8(6)
 2596 00dc E52E      		mov r14,r21
 2597 00de F12C      		mov r15,__zero_reg__
 2598               	.LVL178:
 2599               	.L112:
 2600               		.loc 1 577 7 is_stmt 1 discriminator 3 view .LVU652
 2601               		.loc 1 577 49 is_stmt 0 discriminator 3 view .LVU653
 2602 00e0 C801      		movw r24,r16
 2603 00e2 B701      		movw r22,r14
 2604 00e4 0E94 0000 		call __divmodhi4
 2605               	.LVL179:
 578:quantum/rgblight.c ****       led[i].r = preled[cur].r;
 2606               		.loc 1 578 7 is_stmt 1 discriminator 3 view .LVU654
 2607               		.loc 1 578 29 is_stmt 0 discriminator 3 view .LVU655
 2608 00e8 FC01      		movw r30,r24
 2609 00ea EE0F      		lsl r30
 2610 00ec FF1F      		rol r31
 2611 00ee E80F      		add r30,r24
 2612 00f0 F91F      		adc r31,r25
 2613 00f2 EC0D      		add r30,r12
 2614 00f4 FD1D      		adc r31,r13
 2615               		.loc 1 578 16 discriminator 3 view .LVU656
 2616 00f6 8181      		ldd r24,Z+1
 2617               	.LVL180:
 2618               		.loc 1 578 16 discriminator 3 view .LVU657
 2619 00f8 D901      		movw r26,r18
 2620 00fa 1196      		adiw r26,1
 2621 00fc 8C93      		st X,r24
 2622 00fe 1197      		sbiw r26,1
 579:quantum/rgblight.c ****       led[i].g = preled[cur].g;
 2623               		.loc 1 579 7 is_stmt 1 discriminator 3 view .LVU658
 2624               		.loc 1 579 16 is_stmt 0 discriminator 3 view .LVU659
 2625 0100 8081      		ld r24,Z
 2626 0102 8C93      		st X,r24
 580:quantum/rgblight.c ****       led[i].b = preled[cur].b;
 2627               		.loc 1 580 7 is_stmt 1 discriminator 3 view .LVU660
 2628               		.loc 1 580 16 is_stmt 0 discriminator 3 view .LVU661
 2629 0104 8281      		ldd r24,Z+2
 2630 0106 1296      		adiw r26,2
 2631 0108 8C93      		st X,r24
 2632               	.LVL181:
 2633               		.loc 1 580 16 discriminator 3 view .LVU662
 2634 010a 0F5F      		subi r16,-1
 2635 010c 1F4F      		sbci r17,-1
 2636               	.LVL182:
 2637               		.loc 1 580 16 discriminator 3 view .LVU663
 2638 010e 2D5F      		subi r18,-3
 2639 0110 3F4F      		sbci r19,-1
 576:quantum/rgblight.c ****       cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % RGBLED_NUM;
 2640               		.loc 1 576 5 discriminator 3 view .LVU664
 2641 0112 0F30      		cpi r16,15
 2642 0114 1105      		cpc r17,__zero_reg__
 2643 0116 01F4      		brne .L112
 581:quantum/rgblight.c ****     }
 582:quantum/rgblight.c ****   }
 583:quantum/rgblight.c ****   rgblight_set();
 2644               		.loc 1 583 3 is_stmt 1 view .LVU665
 2645 0118 0E94 0000 		call rgblight_set
 2646               	.LVL183:
 584:quantum/rgblight.c ****   if (increment == 1) {
 2647               		.loc 1 584 3 view .LVU666
 2648               		.loc 1 584 6 is_stmt 0 view .LVU667
 2649 011c 9091 0000 		lds r25,increment.2283
 2650 0120 8091 0000 		lds r24,pos.2276
 2651 0124 9130      		cpi r25,lo8(1)
 2652 0126 01F4      		brne .L113
 585:quantum/rgblight.c ****     if (pos - 1 < 0 - RGBLIGHT_EFFECT_KNIGHT_LENGTH) {
 2653               		.loc 1 585 5 is_stmt 1 view .LVU668
 2654               		.loc 1 585 8 is_stmt 0 view .LVU669
 2655 0128 8A3F      		cpi r24,lo8(-6)
 2656 012a 04F4      		brge .L114
 586:quantum/rgblight.c ****       pos = 0 - RGBLIGHT_EFFECT_KNIGHT_LENGTH;
 2657               		.loc 1 586 7 is_stmt 1 view .LVU670
 2658               		.loc 1 586 11 is_stmt 0 view .LVU671
 2659 012c 89EF      		ldi r24,lo8(-7)
 2660 012e 8093 0000 		sts pos.2276,r24
 587:quantum/rgblight.c ****       increment = -1;
 2661               		.loc 1 587 7 is_stmt 1 view .LVU672
 2662               		.loc 1 587 17 is_stmt 0 view .LVU673
 2663 0132 8FEF      		ldi r24,lo8(-1)
 2664               	.L120:
 588:quantum/rgblight.c ****     } else {
 589:quantum/rgblight.c ****       pos -= 1;
 590:quantum/rgblight.c ****     }
 591:quantum/rgblight.c ****   } else {
 592:quantum/rgblight.c ****     if (pos + 1 > RGBLED_NUM + RGBLIGHT_EFFECT_KNIGHT_LENGTH) {
 593:quantum/rgblight.c ****       pos = RGBLED_NUM + RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
 594:quantum/rgblight.c ****       increment = 1;
 2665               		.loc 1 594 17 view .LVU674
 2666 0134 8093 0000 		sts increment.2283,r24
 2667               	.LVL184:
 2668               	.L105:
 2669               	/* epilogue start */
 595:quantum/rgblight.c ****     } else {
 596:quantum/rgblight.c ****       pos += 1;
 597:quantum/rgblight.c ****     }
 598:quantum/rgblight.c ****   }
 599:quantum/rgblight.c **** }
 2670               		.loc 1 599 1 view .LVU675
 2671 0138 6296      		adiw r28,18
 2672 013a 0FB6      		in __tmp_reg__,__SREG__
 2673 013c F894      		cli
 2674 013e DEBF      		out __SP_H__,r29
 2675 0140 0FBE      		out __SREG__,__tmp_reg__
 2676 0142 CDBF      		out __SP_L__,r28
 2677 0144 DF91      		pop r29
 2678 0146 CF91      		pop r28
 2679 0148 1F91      		pop r17
 2680               	.LVL185:
 2681               		.loc 1 599 1 view .LVU676
 2682 014a 0F91      		pop r16
 2683 014c FF90      		pop r15
 2684 014e EF90      		pop r14
 2685 0150 DF90      		pop r13
 2686 0152 CF90      		pop r12
 2687 0154 BF90      		pop r11
 2688 0156 0895      		ret
 2689               	.LVL186:
 2690               	.L114:
 589:quantum/rgblight.c ****     }
 2691               		.loc 1 589 7 is_stmt 1 view .LVU677
 589:quantum/rgblight.c ****     }
 2692               		.loc 1 589 11 is_stmt 0 view .LVU678
 2693 0158 8150      		subi r24,lo8(-(-1))
 2694               	.L121:
 596:quantum/rgblight.c ****     }
 2695               		.loc 1 596 11 view .LVU679
 2696 015a 8093 0000 		sts pos.2276,r24
 2697 015e 00C0      		rjmp .L105
 2698               	.L113:
 592:quantum/rgblight.c ****       pos = RGBLED_NUM + RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
 2699               		.loc 1 592 5 is_stmt 1 view .LVU680
 592:quantum/rgblight.c ****       pos = RGBLED_NUM + RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
 2700               		.loc 1 592 8 is_stmt 0 view .LVU681
 2701 0160 8D30      		cpi r24,lo8(13)
 2702 0162 04F0      		brlt .L116
 593:quantum/rgblight.c ****       increment = 1;
 2703               		.loc 1 593 7 is_stmt 1 view .LVU682
 593:quantum/rgblight.c ****       increment = 1;
 2704               		.loc 1 593 11 is_stmt 0 view .LVU683
 2705 0164 8CE0      		ldi r24,lo8(12)
 2706 0166 8093 0000 		sts pos.2276,r24
 594:quantum/rgblight.c ****     } else {
 2707               		.loc 1 594 7 is_stmt 1 view .LVU684
 594:quantum/rgblight.c ****     } else {
 2708               		.loc 1 594 17 is_stmt 0 view .LVU685
 2709 016a 81E0      		ldi r24,lo8(1)
 2710 016c 00C0      		rjmp .L120
 2711               	.L116:
 596:quantum/rgblight.c ****     }
 2712               		.loc 1 596 7 is_stmt 1 view .LVU686
 596:quantum/rgblight.c ****     }
 2713               		.loc 1 596 11 is_stmt 0 view .LVU687
 2714 016e 8F5F      		subi r24,lo8(-(1))
 2715 0170 00C0      		rjmp .L121
 2716               		.cfi_endproc
 2717               	.LFE41:
 2719               		.section	.text.rgblight_effect_christmas,"ax",@progbits
 2720               	.global	rgblight_effect_christmas
 2722               	rgblight_effect_christmas:
 2723               	.LFB42:
 600:quantum/rgblight.c **** 
 601:quantum/rgblight.c **** 
 602:quantum/rgblight.c **** void rgblight_effect_christmas(void) {
 2724               		.loc 1 602 38 is_stmt 1 view -0
 2725               		.cfi_startproc
 2726 0000 CF93      		push r28
 2727               	.LCFI55:
 2728               		.cfi_def_cfa_offset 3
 2729               		.cfi_offset 28, -2
 2730 0002 DF93      		push r29
 2731               	.LCFI56:
 2732               		.cfi_def_cfa_offset 4
 2733               		.cfi_offset 29, -3
 2734               	/* prologue: function */
 2735               	/* frame size = 0 */
 2736               	/* stack size = 2 */
 2737               	.L__stack_usage = 2
 603:quantum/rgblight.c ****   static uint16_t current_offset = 0;
 2738               		.loc 1 603 3 view .LVU689
 604:quantum/rgblight.c ****   static uint16_t last_timer = 0;
 2739               		.loc 1 604 3 view .LVU690
 605:quantum/rgblight.c ****   uint16_t hue;
 2740               		.loc 1 605 3 view .LVU691
 606:quantum/rgblight.c ****   uint8_t i;
 2741               		.loc 1 606 3 view .LVU692
 607:quantum/rgblight.c ****   if (timer_elapsed(last_timer) < 1000) {
 2742               		.loc 1 607 3 view .LVU693
 2743               		.loc 1 607 7 is_stmt 0 view .LVU694
 2744 0004 8091 0000 		lds r24,last_timer.2300
 2745 0008 9091 0000 		lds r25,last_timer.2300+1
 2746 000c 0E94 0000 		call timer_elapsed
 2747               	.LVL187:
 2748               		.loc 1 607 6 view .LVU695
 2749 0010 883E      		cpi r24,-24
 2750 0012 9340      		sbci r25,3
 2751 0014 00F0      		brlo .L122
 608:quantum/rgblight.c ****     return;
 609:quantum/rgblight.c ****   }
 610:quantum/rgblight.c ****   last_timer = timer_read();
 2752               		.loc 1 610 3 is_stmt 1 view .LVU696
 2753               		.loc 1 610 16 is_stmt 0 view .LVU697
 2754 0016 0E94 0000 		call timer_read
 2755               	.LVL188:
 2756               		.loc 1 610 14 view .LVU698
 2757 001a 9093 0000 		sts last_timer.2300+1,r25
 2758 001e 8093 0000 		sts last_timer.2300,r24
 611:quantum/rgblight.c ****   current_offset = (current_offset + 1) % 2;
 2759               		.loc 1 611 3 is_stmt 1 view .LVU699
 2760               		.loc 1 611 36 is_stmt 0 view .LVU700
 2761 0022 8091 0000 		lds r24,current_offset.2299
 2762 0026 9091 0000 		lds r25,current_offset.2299+1
 2763 002a 0196      		adiw r24,1
 2764               		.loc 1 611 41 view .LVU701
 2765 002c 8170      		andi r24,1
 2766 002e 9927      		clr r25
 2767               		.loc 1 611 18 view .LVU702
 2768 0030 9093 0000 		sts current_offset.2299+1,r25
 2769 0034 8093 0000 		sts current_offset.2299,r24
 612:quantum/rgblight.c ****   for (i = 0; i < RGBLED_NUM; i++) {
 2770               		.loc 1 612 3 is_stmt 1 view .LVU703
 2771               	.LVL189:
 2772               		.loc 1 612 3 is_stmt 0 view .LVU704
 2773 0038 C0E0      		ldi r28,lo8(led)
 2774 003a D0E0      		ldi r29,hi8(led)
 2775               	.LVL190:
 2776               	.L124:
 613:quantum/rgblight.c ****     hue = 0 + ((RGBLED_NUM * (i + current_offset)) % 2) * 80;
 2777               		.loc 1 613 5 is_stmt 1 discriminator 3 view .LVU705
 614:quantum/rgblight.c ****     sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i]);
 2778               		.loc 1 614 5 discriminator 3 view .LVU706
 2779 003c 9E01      		movw r18,r28
 2780 003e 4091 0000 		lds r20,rgblight_config+3
 2781 0042 6091 0000 		lds r22,rgblight_config+2
 2782 0046 90E0      		ldi r25,0
 2783 0048 80E0      		ldi r24,0
 2784 004a 0E94 0000 		call sethsv
 2785               	.LVL191:
 2786               		.loc 1 614 5 is_stmt 0 discriminator 3 view .LVU707
 2787 004e 2396      		adiw r28,3
 612:quantum/rgblight.c ****   for (i = 0; i < RGBLED_NUM; i++) {
 2788               		.loc 1 612 3 discriminator 3 view .LVU708
 2789 0050 80E0      		ldi r24,hi8(led+18)
 2790 0052 C030      		cpi r28,lo8(led+18)
 2791 0054 D807      		cpc r29,r24
 2792 0056 01F4      		brne .L124
 615:quantum/rgblight.c ****   }
 616:quantum/rgblight.c ****   rgblight_set();
 2793               		.loc 1 616 3 is_stmt 1 view .LVU709
 2794               	/* epilogue start */
 617:quantum/rgblight.c **** }
 2795               		.loc 1 617 1 is_stmt 0 view .LVU710
 2796 0058 DF91      		pop r29
 2797 005a CF91      		pop r28
 616:quantum/rgblight.c **** }
 2798               		.loc 1 616 3 view .LVU711
 2799 005c 0C94 0000 		jmp rgblight_set
 2800               	.LVL192:
 2801               	.L122:
 2802               	/* epilogue start */
 2803               		.loc 1 617 1 view .LVU712
 2804 0060 DF91      		pop r29
 2805 0062 CF91      		pop r28
 2806 0064 0895      		ret
 2807               		.cfi_endproc
 2808               	.LFE42:
 2810               		.section	.text.rgblight_task,"ax",@progbits
 2811               	.global	rgblight_task
 2813               	rgblight_task:
 2814               	.LFB36:
 435:quantum/rgblight.c ****   if (rgblight_timer_enabled) {
 2815               		.loc 1 435 26 is_stmt 1 view -0
 2816               		.cfi_startproc
 2817               	/* prologue: function */
 2818               	/* frame size = 0 */
 2819               	/* stack size = 0 */
 2820               	.L__stack_usage = 0
 436:quantum/rgblight.c ****     // mode = 1, static light, do nothing here
 2821               		.loc 1 436 3 view .LVU714
 436:quantum/rgblight.c ****     // mode = 1, static light, do nothing here
 2822               		.loc 1 436 6 is_stmt 0 view .LVU715
 2823 0000 8091 0000 		lds r24,rgblight_timer_enabled
 2824 0004 8823      		tst r24
 2825 0006 01F0      		breq .L126
 438:quantum/rgblight.c ****       // mode = 2 to 5, breathing mode
 2826               		.loc 1 438 5 is_stmt 1 view .LVU716
 438:quantum/rgblight.c ****       // mode = 2 to 5, breathing mode
 2827               		.loc 1 438 24 is_stmt 0 view .LVU717
 2828 0008 8091 0000 		lds r24,rgblight_config
 2829 000c 8695      		lsr r24
 2830 000e 8F73      		andi r24,lo8(63)
 438:quantum/rgblight.c ****       // mode = 2 to 5, breathing mode
 2831               		.loc 1 438 35 view .LVU718
 2832 0010 9EE3      		ldi r25,lo8(62)
 2833 0012 980F      		add r25,r24
 2834 0014 9F73      		andi r25,lo8(63)
 438:quantum/rgblight.c ****       // mode = 2 to 5, breathing mode
 2835               		.loc 1 438 8 view .LVU719
 2836 0016 9430      		cpi r25,lo8(4)
 2837 0018 00F4      		brsh .L128
 440:quantum/rgblight.c ****     } else if (rgblight_config.mode >= 6 && rgblight_config.mode <= 8) {
 2838               		.loc 1 440 7 is_stmt 1 view .LVU720
 2839 001a 8250      		subi r24,lo8(-(-2))
 2840 001c 0C94 0000 		jmp rgblight_effect_breathing
 2841               	.LVL193:
 2842               	.L128:
 441:quantum/rgblight.c ****       // mode = 6 to 8, rainbow mood mod
 2843               		.loc 1 441 12 view .LVU721
 441:quantum/rgblight.c ****       // mode = 6 to 8, rainbow mood mod
 2844               		.loc 1 441 42 is_stmt 0 view .LVU722
 2845 0020 9AE3      		ldi r25,lo8(58)
 2846 0022 980F      		add r25,r24
 2847 0024 9F73      		andi r25,lo8(63)
 441:quantum/rgblight.c ****       // mode = 6 to 8, rainbow mood mod
 2848               		.loc 1 441 15 view .LVU723
 2849 0026 9330      		cpi r25,lo8(3)
 2850 0028 00F4      		brsh .L129
 443:quantum/rgblight.c ****     } else if (rgblight_config.mode >= 9 && rgblight_config.mode <= 14) {
 2851               		.loc 1 443 7 is_stmt 1 view .LVU724
 2852 002a 8650      		subi r24,lo8(-(-6))
 2853 002c 0C94 0000 		jmp rgblight_effect_rainbow_mood
 2854               	.LVL194:
 2855               	.L129:
 444:quantum/rgblight.c ****       // mode = 9 to 14, rainbow swirl mode
 2856               		.loc 1 444 12 view .LVU725
 444:quantum/rgblight.c ****       // mode = 9 to 14, rainbow swirl mode
 2857               		.loc 1 444 42 is_stmt 0 view .LVU726
 2858 0030 97E3      		ldi r25,lo8(55)
 2859 0032 980F      		add r25,r24
 2860 0034 9F73      		andi r25,lo8(63)
 444:quantum/rgblight.c ****       // mode = 9 to 14, rainbow swirl mode
 2861               		.loc 1 444 15 view .LVU727
 2862 0036 9630      		cpi r25,lo8(6)
 2863 0038 00F4      		brsh .L130
 446:quantum/rgblight.c ****     } else if (rgblight_config.mode >= 15 && rgblight_config.mode <= 20) {
 2864               		.loc 1 446 7 is_stmt 1 view .LVU728
 2865 003a 8950      		subi r24,lo8(-(-9))
 2866 003c 0C94 0000 		jmp rgblight_effect_rainbow_swirl
 2867               	.LVL195:
 2868               	.L130:
 447:quantum/rgblight.c ****       // mode = 15 to 20, snake mode
 2869               		.loc 1 447 12 view .LVU729
 447:quantum/rgblight.c ****       // mode = 15 to 20, snake mode
 2870               		.loc 1 447 43 is_stmt 0 view .LVU730
 2871 0040 91E3      		ldi r25,lo8(49)
 2872 0042 980F      		add r25,r24
 2873 0044 9F73      		andi r25,lo8(63)
 447:quantum/rgblight.c ****       // mode = 15 to 20, snake mode
 2874               		.loc 1 447 15 view .LVU731
 2875 0046 9630      		cpi r25,lo8(6)
 2876 0048 00F4      		brsh .L131
 449:quantum/rgblight.c ****     } else if (rgblight_config.mode >= 21 && rgblight_config.mode <= 23) {
 2877               		.loc 1 449 7 is_stmt 1 view .LVU732
 2878 004a 8F50      		subi r24,lo8(-(-15))
 2879 004c 0C94 0000 		jmp rgblight_effect_snake
 2880               	.LVL196:
 2881               	.L131:
 450:quantum/rgblight.c ****       // mode = 21 to 23, knight mode
 2882               		.loc 1 450 12 view .LVU733
 450:quantum/rgblight.c ****       // mode = 21 to 23, knight mode
 2883               		.loc 1 450 43 is_stmt 0 view .LVU734
 2884 0050 9BE2      		ldi r25,lo8(43)
 2885 0052 980F      		add r25,r24
 2886 0054 9F73      		andi r25,lo8(63)
 450:quantum/rgblight.c ****       // mode = 21 to 23, knight mode
 2887               		.loc 1 450 15 view .LVU735
 2888 0056 9330      		cpi r25,lo8(3)
 2889 0058 00F4      		brsh .L132
 452:quantum/rgblight.c ****     } else {
 2890               		.loc 1 452 7 is_stmt 1 view .LVU736
 2891 005a 8551      		subi r24,lo8(-(-21))
 2892 005c 0C94 0000 		jmp rgblight_effect_knight
 2893               	.LVL197:
 2894               	.L132:
 455:quantum/rgblight.c ****     }
 2895               		.loc 1 455 7 view .LVU737
 2896 0060 0C94 0000 		jmp rgblight_effect_christmas
 2897               	.LVL198:
 2898               	.L126:
 2899               	/* epilogue start */
 458:quantum/rgblight.c **** 
 2900               		.loc 1 458 1 is_stmt 0 view .LVU738
 2901 0064 0895      		ret
 2902               		.cfi_endproc
 2903               	.LFE36:
 2905               		.section	.bss.current_offset.2299,"aw",@nobits
 2908               	current_offset.2299:
 2909 0000 0000      		.zero	2
 2910               		.section	.bss.last_timer.2300,"aw",@nobits
 2913               	last_timer.2300:
 2914 0000 0000      		.zero	2
 2915               		.section	.bss.pos.2276,"aw",@nobits
 2918               	pos.2276:
 2919 0000 00        		.zero	1
 2920               		.section	.data.increment.2283,"aw"
 2923               	increment.2283:
 2924 0000 FF        		.byte	-1
 2925               		.section	.bss.last_timer.2277,"aw",@nobits
 2928               	last_timer.2277:
 2929 0000 0000      		.zero	2
 2930               		.section	.bss.pos.2258,"aw",@nobits
 2933               	pos.2258:
 2934 0000 00        		.zero	1
 2935               		.section	.bss.last_timer.2259,"aw",@nobits
 2938               	last_timer.2259:
 2939 0000 0000      		.zero	2
 2940               		.section	.bss.current_hue.2245,"aw",@nobits
 2943               	current_hue.2245:
 2944 0000 0000      		.zero	2
 2945               		.section	.bss.last_timer.2246,"aw",@nobits
 2948               	last_timer.2246:
 2949 0000 0000      		.zero	2
 2950               		.section	.bss.current_hue.2237,"aw",@nobits
 2953               	current_hue.2237:
 2954 0000 0000      		.zero	2
 2955               		.section	.bss.last_timer.2238,"aw",@nobits
 2958               	last_timer.2238:
 2959 0000 0000      		.zero	2
 2960               		.section	.bss.pos.2226,"aw",@nobits
 2963               	pos.2226:
 2964 0000 00        		.zero	1
 2965               		.section	.bss.last_timer.2227,"aw",@nobits
 2968               	last_timer.2227:
 2969 0000 0000      		.zero	2
 2970               	.global	rgblight_timer_enabled
 2971               		.section	.bss.rgblight_timer_enabled,"aw",@nobits
 2974               	rgblight_timer_enabled:
 2975 0000 00        		.zero	1
 2976               	.global	rgblight_inited
 2977               		.section	.bss.rgblight_inited,"aw",@nobits
 2980               	rgblight_inited:
 2981 0000 00        		.zero	1
 2982               		.comm	led,18,1
 2983               		.comm	inmem_config,4,1
 2984               		.comm	rgblight_config,4,1
 2985               		.weak	RGBLED_KNIGHT_INTERVALS
 2986               		.section	.progmem.data.RGBLED_KNIGHT_INTERVALS,"a"
 2989               	RGBLED_KNIGHT_INTERVALS:
 2990 0000 64        		.byte	100
 2991 0001 32        		.byte	50
 2992 0002 14        		.byte	20
 2993               		.weak	RGBLED_SNAKE_INTERVALS
 2994               		.section	.progmem.data.RGBLED_SNAKE_INTERVALS,"a"
 2997               	RGBLED_SNAKE_INTERVALS:
 2998 0000 64        		.byte	100
 2999 0001 32        		.byte	50
 3000 0002 14        		.byte	20
 3001               		.weak	RGBLED_RAINBOW_SWIRL_INTERVALS
 3002               		.section	.progmem.data.RGBLED_RAINBOW_SWIRL_INTERVALS,"a"
 3005               	RGBLED_RAINBOW_SWIRL_INTERVALS:
 3006 0000 64        		.byte	100
 3007 0001 32        		.byte	50
 3008 0002 14        		.byte	20
 3009               		.weak	RGBLED_RAINBOW_MOOD_INTERVALS
 3010               		.section	.progmem.data.RGBLED_RAINBOW_MOOD_INTERVALS,"a"
 3013               	RGBLED_RAINBOW_MOOD_INTERVALS:
 3014 0000 78        		.byte	120
 3015 0001 3C        		.byte	60
 3016 0002 1E        		.byte	30
 3017               		.weak	RGBLED_BREATHING_INTERVALS
 3018               		.section	.progmem.data.RGBLED_BREATHING_INTERVALS,"a"
 3021               	RGBLED_BREATHING_INTERVALS:
 3022 0000 1E        		.byte	30
 3023 0001 14        		.byte	20
 3024 0002 0A        		.byte	10
 3025 0003 05        		.byte	5
 3026               	.global	RGBLED_BREATHING_TABLE
 3027               		.section	.progmem.data.RGBLED_BREATHING_TABLE,"a"
 3030               	RGBLED_BREATHING_TABLE:
 3031 0000 00        		.byte	0
 3032 0001 00        		.byte	0
 3033 0002 00        		.byte	0
 3034 0003 00        		.byte	0
 3035 0004 01        		.byte	1
 3036 0005 01        		.byte	1
 3037 0006 01        		.byte	1
 3038 0007 02        		.byte	2
 3039 0008 02        		.byte	2
 3040 0009 03        		.byte	3
 3041 000a 04        		.byte	4
 3042 000b 05        		.byte	5
 3043 000c 05        		.byte	5
 3044 000d 06        		.byte	6
 3045 000e 07        		.byte	7
 3046 000f 09        		.byte	9
 3047 0010 0A        		.byte	10
 3048 0011 0B        		.byte	11
 3049 0012 0C        		.byte	12
 3050 0013 0E        		.byte	14
 3051 0014 0F        		.byte	15
 3052 0015 11        		.byte	17
 3053 0016 12        		.byte	18
 3054 0017 14        		.byte	20
 3055 0018 15        		.byte	21
 3056 0019 17        		.byte	23
 3057 001a 19        		.byte	25
 3058 001b 1B        		.byte	27
 3059 001c 1D        		.byte	29
 3060 001d 1F        		.byte	31
 3061 001e 21        		.byte	33
 3062 001f 23        		.byte	35
 3063 0020 25        		.byte	37
 3064 0021 28        		.byte	40
 3065 0022 2A        		.byte	42
 3066 0023 2C        		.byte	44
 3067 0024 2F        		.byte	47
 3068 0025 31        		.byte	49
 3069 0026 34        		.byte	52
 3070 0027 36        		.byte	54
 3071 0028 39        		.byte	57
 3072 0029 3B        		.byte	59
 3073 002a 3E        		.byte	62
 3074 002b 41        		.byte	65
 3075 002c 43        		.byte	67
 3076 002d 46        		.byte	70
 3077 002e 49        		.byte	73
 3078 002f 4C        		.byte	76
 3079 0030 4F        		.byte	79
 3080 0031 52        		.byte	82
 3081 0032 55        		.byte	85
 3082 0033 58        		.byte	88
 3083 0034 5A        		.byte	90
 3084 0035 5D        		.byte	93
 3085 0036 61        		.byte	97
 3086 0037 64        		.byte	100
 3087 0038 67        		.byte	103
 3088 0039 6A        		.byte	106
 3089 003a 6D        		.byte	109
 3090 003b 70        		.byte	112
 3091 003c 73        		.byte	115
 3092 003d 76        		.byte	118
 3093 003e 79        		.byte	121
 3094 003f 7C        		.byte	124
 3095 0040 7F        		.byte	127
 3096 0041 83        		.byte	-125
 3097 0042 86        		.byte	-122
 3098 0043 89        		.byte	-119
 3099 0044 8C        		.byte	-116
 3100 0045 8F        		.byte	-113
 3101 0046 92        		.byte	-110
 3102 0047 95        		.byte	-107
 3103 0048 98        		.byte	-104
 3104 0049 9B        		.byte	-101
 3105 004a 9E        		.byte	-98
 3106 004b A2        		.byte	-94
 3107 004c A5        		.byte	-91
 3108 004d A7        		.byte	-89
 3109 004e AA        		.byte	-86
 3110 004f AD        		.byte	-83
 3111 0050 B0        		.byte	-80
 3112 0051 B3        		.byte	-77
 3113 0052 B6        		.byte	-74
 3114 0053 B9        		.byte	-71
 3115 0054 BC        		.byte	-68
 3116 0055 BE        		.byte	-66
 3117 0056 C1        		.byte	-63
 3118 0057 C4        		.byte	-60
 3119 0058 C6        		.byte	-58
 3120 0059 C9        		.byte	-55
 3121 005a CB        		.byte	-53
 3122 005b CE        		.byte	-50
 3123 005c D0        		.byte	-48
 3124 005d D3        		.byte	-45
 3125 005e D5        		.byte	-43
 3126 005f D7        		.byte	-41
 3127 0060 DA        		.byte	-38
 3128 0061 DC        		.byte	-36
 3129 0062 DE        		.byte	-34
 3130 0063 E0        		.byte	-32
 3131 0064 E2        		.byte	-30
 3132 0065 E4        		.byte	-28
 3133 0066 E6        		.byte	-26
 3134 0067 E8        		.byte	-24
 3135 0068 EA        		.byte	-22
 3136 0069 EB        		.byte	-21
 3137 006a ED        		.byte	-19
 3138 006b EE        		.byte	-18
 3139 006c F0        		.byte	-16
 3140 006d F1        		.byte	-15
 3141 006e F3        		.byte	-13
 3142 006f F4        		.byte	-12
 3143 0070 F5        		.byte	-11
 3144 0071 F6        		.byte	-10
 3145 0072 F8        		.byte	-8
 3146 0073 F9        		.byte	-7
 3147 0074 FA        		.byte	-6
 3148 0075 FA        		.byte	-6
 3149 0076 FB        		.byte	-5
 3150 0077 FC        		.byte	-4
 3151 0078 FD        		.byte	-3
 3152 0079 FD        		.byte	-3
 3153 007a FE        		.byte	-2
 3154 007b FE        		.byte	-2
 3155 007c FE        		.byte	-2
 3156 007d FF        		.byte	-1
 3157 007e FF        		.byte	-1
 3158 007f FF        		.byte	-1
 3159 0080 FF        		.byte	-1
 3160 0081 FF        		.byte	-1
 3161 0082 FF        		.byte	-1
 3162 0083 FF        		.byte	-1
 3163 0084 FE        		.byte	-2
 3164 0085 FE        		.byte	-2
 3165 0086 FE        		.byte	-2
 3166 0087 FD        		.byte	-3
 3167 0088 FD        		.byte	-3
 3168 0089 FC        		.byte	-4
 3169 008a FB        		.byte	-5
 3170 008b FA        		.byte	-6
 3171 008c FA        		.byte	-6
 3172 008d F9        		.byte	-7
 3173 008e F8        		.byte	-8
 3174 008f F6        		.byte	-10
 3175 0090 F5        		.byte	-11
 3176 0091 F4        		.byte	-12
 3177 0092 F3        		.byte	-13
 3178 0093 F1        		.byte	-15
 3179 0094 F0        		.byte	-16
 3180 0095 EE        		.byte	-18
 3181 0096 ED        		.byte	-19
 3182 0097 EB        		.byte	-21
 3183 0098 EA        		.byte	-22
 3184 0099 E8        		.byte	-24
 3185 009a E6        		.byte	-26
 3186 009b E4        		.byte	-28
 3187 009c E2        		.byte	-30
 3188 009d E0        		.byte	-32
 3189 009e DE        		.byte	-34
 3190 009f DC        		.byte	-36
 3191 00a0 DA        		.byte	-38
 3192 00a1 D7        		.byte	-41
 3193 00a2 D5        		.byte	-43
 3194 00a3 D3        		.byte	-45
 3195 00a4 D0        		.byte	-48
 3196 00a5 CE        		.byte	-50
 3197 00a6 CB        		.byte	-53
 3198 00a7 C9        		.byte	-55
 3199 00a8 C6        		.byte	-58
 3200 00a9 C4        		.byte	-60
 3201 00aa C1        		.byte	-63
 3202 00ab BE        		.byte	-66
 3203 00ac BC        		.byte	-68
 3204 00ad B9        		.byte	-71
 3205 00ae B6        		.byte	-74
 3206 00af B3        		.byte	-77
 3207 00b0 B0        		.byte	-80
 3208 00b1 AD        		.byte	-83
 3209 00b2 AA        		.byte	-86
 3210 00b3 A7        		.byte	-89
 3211 00b4 A5        		.byte	-91
 3212 00b5 A2        		.byte	-94
 3213 00b6 9E        		.byte	-98
 3214 00b7 9B        		.byte	-101
 3215 00b8 98        		.byte	-104
 3216 00b9 95        		.byte	-107
 3217 00ba 92        		.byte	-110
 3218 00bb 8F        		.byte	-113
 3219 00bc 8C        		.byte	-116
 3220 00bd 89        		.byte	-119
 3221 00be 86        		.byte	-122
 3222 00bf 83        		.byte	-125
 3223 00c0 80        		.byte	-128
 3224 00c1 7C        		.byte	124
 3225 00c2 79        		.byte	121
 3226 00c3 76        		.byte	118
 3227 00c4 73        		.byte	115
 3228 00c5 70        		.byte	112
 3229 00c6 6D        		.byte	109
 3230 00c7 6A        		.byte	106
 3231 00c8 67        		.byte	103
 3232 00c9 64        		.byte	100
 3233 00ca 61        		.byte	97
 3234 00cb 5D        		.byte	93
 3235 00cc 5A        		.byte	90
 3236 00cd 58        		.byte	88
 3237 00ce 55        		.byte	85
 3238 00cf 52        		.byte	82
 3239 00d0 4F        		.byte	79
 3240 00d1 4C        		.byte	76
 3241 00d2 49        		.byte	73
 3242 00d3 46        		.byte	70
 3243 00d4 43        		.byte	67
 3244 00d5 41        		.byte	65
 3245 00d6 3E        		.byte	62
 3246 00d7 3B        		.byte	59
 3247 00d8 39        		.byte	57
 3248 00d9 36        		.byte	54
 3249 00da 34        		.byte	52
 3250 00db 31        		.byte	49
 3251 00dc 2F        		.byte	47
 3252 00dd 2C        		.byte	44
 3253 00de 2A        		.byte	42
 3254 00df 28        		.byte	40
 3255 00e0 25        		.byte	37
 3256 00e1 23        		.byte	35
 3257 00e2 21        		.byte	33
 3258 00e3 1F        		.byte	31
 3259 00e4 1D        		.byte	29
 3260 00e5 1B        		.byte	27
 3261 00e6 19        		.byte	25
 3262 00e7 17        		.byte	23
 3263 00e8 15        		.byte	21
 3264 00e9 14        		.byte	20
 3265 00ea 12        		.byte	18
 3266 00eb 11        		.byte	17
 3267 00ec 0F        		.byte	15
 3268 00ed 0E        		.byte	14
 3269 00ee 0C        		.byte	12
 3270 00ef 0B        		.byte	11
 3271 00f0 0A        		.byte	10
 3272 00f1 09        		.byte	9
 3273 00f2 07        		.byte	7
 3274 00f3 06        		.byte	6
 3275 00f4 05        		.byte	5
 3276 00f5 05        		.byte	5
 3277 00f6 04        		.byte	4
 3278 00f7 03        		.byte	3
 3279 00f8 02        		.byte	2
 3280 00f9 02        		.byte	2
 3281 00fa 01        		.byte	1
 3282 00fb 01        		.byte	1
 3283 00fc 01        		.byte	1
 3284 00fd 00        		.byte	0
 3285 00fe 00        		.byte	0
 3286 00ff 00        		.byte	0
 3287               	.global	DIM_CURVE
 3288               		.section	.progmem.data.DIM_CURVE,"a"
 3291               	DIM_CURVE:
 3292 0000 00        		.byte	0
 3293 0001 00        		.byte	0
 3294 0002 00        		.byte	0
 3295 0003 00        		.byte	0
 3296 0004 00        		.byte	0
 3297 0005 01        		.byte	1
 3298 0006 01        		.byte	1
 3299 0007 01        		.byte	1
 3300 0008 01        		.byte	1
 3301 0009 01        		.byte	1
 3302 000a 01        		.byte	1
 3303 000b 01        		.byte	1
 3304 000c 01        		.byte	1
 3305 000d 01        		.byte	1
 3306 000e 02        		.byte	2
 3307 000f 02        		.byte	2
 3308 0010 02        		.byte	2
 3309 0011 02        		.byte	2
 3310 0012 02        		.byte	2
 3311 0013 02        		.byte	2
 3312 0014 02        		.byte	2
 3313 0015 02        		.byte	2
 3314 0016 02        		.byte	2
 3315 0017 03        		.byte	3
 3316 0018 03        		.byte	3
 3317 0019 03        		.byte	3
 3318 001a 03        		.byte	3
 3319 001b 03        		.byte	3
 3320 001c 03        		.byte	3
 3321 001d 03        		.byte	3
 3322 001e 03        		.byte	3
 3323 001f 04        		.byte	4
 3324 0020 04        		.byte	4
 3325 0021 04        		.byte	4
 3326 0022 04        		.byte	4
 3327 0023 04        		.byte	4
 3328 0024 04        		.byte	4
 3329 0025 05        		.byte	5
 3330 0026 05        		.byte	5
 3331 0027 05        		.byte	5
 3332 0028 05        		.byte	5
 3333 0029 05        		.byte	5
 3334 002a 06        		.byte	6
 3335 002b 06        		.byte	6
 3336 002c 06        		.byte	6
 3337 002d 06        		.byte	6
 3338 002e 06        		.byte	6
 3339 002f 07        		.byte	7
 3340 0030 07        		.byte	7
 3341 0031 07        		.byte	7
 3342 0032 07        		.byte	7
 3343 0033 08        		.byte	8
 3344 0034 08        		.byte	8
 3345 0035 08        		.byte	8
 3346 0036 08        		.byte	8
 3347 0037 09        		.byte	9
 3348 0038 09        		.byte	9
 3349 0039 09        		.byte	9
 3350 003a 0A        		.byte	10
 3351 003b 0A        		.byte	10
 3352 003c 0A        		.byte	10
 3353 003d 0A        		.byte	10
 3354 003e 0B        		.byte	11
 3355 003f 0B        		.byte	11
 3356 0040 0B        		.byte	11
 3357 0041 0C        		.byte	12
 3358 0042 0C        		.byte	12
 3359 0043 0C        		.byte	12
 3360 0044 0D        		.byte	13
 3361 0045 0D        		.byte	13
 3362 0046 0D        		.byte	13
 3363 0047 0E        		.byte	14
 3364 0048 0E        		.byte	14
 3365 0049 0F        		.byte	15
 3366 004a 0F        		.byte	15
 3367 004b 0F        		.byte	15
 3368 004c 10        		.byte	16
 3369 004d 10        		.byte	16
 3370 004e 11        		.byte	17
 3371 004f 11        		.byte	17
 3372 0050 11        		.byte	17
 3373 0051 12        		.byte	18
 3374 0052 12        		.byte	18
 3375 0053 13        		.byte	19
 3376 0054 13        		.byte	19
 3377 0055 14        		.byte	20
 3378 0056 14        		.byte	20
 3379 0057 15        		.byte	21
 3380 0058 15        		.byte	21
 3381 0059 16        		.byte	22
 3382 005a 16        		.byte	22
 3383 005b 17        		.byte	23
 3384 005c 17        		.byte	23
 3385 005d 18        		.byte	24
 3386 005e 18        		.byte	24
 3387 005f 19        		.byte	25
 3388 0060 19        		.byte	25
 3389 0061 1A        		.byte	26
 3390 0062 1A        		.byte	26
 3391 0063 1B        		.byte	27
 3392 0064 1C        		.byte	28
 3393 0065 1C        		.byte	28
 3394 0066 1D        		.byte	29
 3395 0067 1D        		.byte	29
 3396 0068 1E        		.byte	30
 3397 0069 1F        		.byte	31
 3398 006a 1F        		.byte	31
 3399 006b 20        		.byte	32
 3400 006c 20        		.byte	32
 3401 006d 21        		.byte	33
 3402 006e 22        		.byte	34
 3403 006f 22        		.byte	34
 3404 0070 23        		.byte	35
 3405 0071 24        		.byte	36
 3406 0072 25        		.byte	37
 3407 0073 25        		.byte	37
 3408 0074 26        		.byte	38
 3409 0075 27        		.byte	39
 3410 0076 27        		.byte	39
 3411 0077 28        		.byte	40
 3412 0078 29        		.byte	41
 3413 0079 2A        		.byte	42
 3414 007a 2B        		.byte	43
 3415 007b 2B        		.byte	43
 3416 007c 2C        		.byte	44
 3417 007d 2D        		.byte	45
 3418 007e 2E        		.byte	46
 3419 007f 2F        		.byte	47
 3420 0080 2F        		.byte	47
 3421 0081 30        		.byte	48
 3422 0082 31        		.byte	49
 3423 0083 32        		.byte	50
 3424 0084 33        		.byte	51
 3425 0085 34        		.byte	52
 3426 0086 35        		.byte	53
 3427 0087 36        		.byte	54
 3428 0088 36        		.byte	54
 3429 0089 37        		.byte	55
 3430 008a 38        		.byte	56
 3431 008b 39        		.byte	57
 3432 008c 3A        		.byte	58
 3433 008d 3B        		.byte	59
 3434 008e 3C        		.byte	60
 3435 008f 3D        		.byte	61
 3436 0090 3E        		.byte	62
 3437 0091 3F        		.byte	63
 3438 0092 40        		.byte	64
 3439 0093 41        		.byte	65
 3440 0094 42        		.byte	66
 3441 0095 43        		.byte	67
 3442 0096 44        		.byte	68
 3443 0097 46        		.byte	70
 3444 0098 47        		.byte	71
 3445 0099 48        		.byte	72
 3446 009a 49        		.byte	73
 3447 009b 4A        		.byte	74
 3448 009c 4B        		.byte	75
 3449 009d 4C        		.byte	76
 3450 009e 4D        		.byte	77
 3451 009f 4F        		.byte	79
 3452 00a0 50        		.byte	80
 3453 00a1 51        		.byte	81
 3454 00a2 52        		.byte	82
 3455 00a3 53        		.byte	83
 3456 00a4 55        		.byte	85
 3457 00a5 56        		.byte	86
 3458 00a6 57        		.byte	87
 3459 00a7 58        		.byte	88
 3460 00a8 5A        		.byte	90
 3461 00a9 5B        		.byte	91
 3462 00aa 5C        		.byte	92
 3463 00ab 5E        		.byte	94
 3464 00ac 5F        		.byte	95
 3465 00ad 60        		.byte	96
 3466 00ae 62        		.byte	98
 3467 00af 63        		.byte	99
 3468 00b0 64        		.byte	100
 3469 00b1 66        		.byte	102
 3470 00b2 67        		.byte	103
 3471 00b3 69        		.byte	105
 3472 00b4 6A        		.byte	106
 3473 00b5 6C        		.byte	108
 3474 00b6 6D        		.byte	109
 3475 00b7 6E        		.byte	110
 3476 00b8 70        		.byte	112
 3477 00b9 71        		.byte	113
 3478 00ba 73        		.byte	115
 3479 00bb 74        		.byte	116
 3480 00bc 76        		.byte	118
 3481 00bd 78        		.byte	120
 3482 00be 79        		.byte	121
 3483 00bf 7B        		.byte	123
 3484 00c0 7C        		.byte	124
 3485 00c1 7E        		.byte	126
 3486 00c2 80        		.byte	-128
 3487 00c3 81        		.byte	-127
 3488 00c4 83        		.byte	-125
 3489 00c5 84        		.byte	-124
 3490 00c6 86        		.byte	-122
 3491 00c7 88        		.byte	-120
 3492 00c8 8A        		.byte	-118
 3493 00c9 8B        		.byte	-117
 3494 00ca 8D        		.byte	-115
 3495 00cb 8F        		.byte	-113
 3496 00cc 91        		.byte	-111
 3497 00cd 92        		.byte	-110
 3498 00ce 94        		.byte	-108
 3499 00cf 96        		.byte	-106
 3500 00d0 98        		.byte	-104
 3501 00d1 9A        		.byte	-102
 3502 00d2 9B        		.byte	-101
 3503 00d3 9D        		.byte	-99
 3504 00d4 9F        		.byte	-97
 3505 00d5 A1        		.byte	-95
 3506 00d6 A3        		.byte	-93
 3507 00d7 A5        		.byte	-91
 3508 00d8 A7        		.byte	-89
 3509 00d9 A9        		.byte	-87
 3510 00da AB        		.byte	-85
 3511 00db AD        		.byte	-83
 3512 00dc AF        		.byte	-81
 3513 00dd B1        		.byte	-79
 3514 00de B3        		.byte	-77
 3515 00df B5        		.byte	-75
 3516 00e0 B7        		.byte	-73
 3517 00e1 B9        		.byte	-71
 3518 00e2 BB        		.byte	-69
 3519 00e3 BD        		.byte	-67
 3520 00e4 BF        		.byte	-65
 3521 00e5 C1        		.byte	-63
 3522 00e6 C4        		.byte	-60
 3523 00e7 C6        		.byte	-58
 3524 00e8 C8        		.byte	-56
 3525 00e9 CA        		.byte	-54
 3526 00ea CC        		.byte	-52
 3527 00eb CF        		.byte	-49
 3528 00ec D1        		.byte	-47
 3529 00ed D3        		.byte	-45
 3530 00ee D6        		.byte	-42
 3531 00ef D8        		.byte	-40
 3532 00f0 DA        		.byte	-38
 3533 00f1 DC        		.byte	-36
 3534 00f2 DF        		.byte	-33
 3535 00f3 E1        		.byte	-31
 3536 00f4 E4        		.byte	-28
 3537 00f5 E6        		.byte	-26
 3538 00f6 E8        		.byte	-24
 3539 00f7 EB        		.byte	-21
 3540 00f8 ED        		.byte	-19
 3541 00f9 F0        		.byte	-16
 3542 00fa F2        		.byte	-14
 3543 00fb F5        		.byte	-11
 3544 00fc F7        		.byte	-9
 3545 00fd FA        		.byte	-6
 3546 00fe FC        		.byte	-4
 3547 00ff FF        		.byte	-1
 3548               		.text
 3549               	.Letext0:
 3550               		.file 3 "/usr/avr/include/stdint.h"
 3551               		.file 4 "quantum/light_ws2812.h"
 3552               		.file 5 "./tmk_core/common/timer.h"
 3553               		.file 6 "quantum/rgblight.h"
 3554               		.file 7 "./tmk_core/common/debug.h"
 3555               		.file 8 "./tmk_core/common/eeconfig.h"
 3556               		.file 9 "/usr/avr/include/avr/eeprom.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 rgblight.c
     /tmp/cc07PDBH.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cc07PDBH.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cc07PDBH.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cc07PDBH.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc07PDBH.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc07PDBH.s:13     .text.sethsv:0000000000000000 sethsv
     /tmp/cc07PDBH.s:3291   .progmem.data.DIM_CURVE:0000000000000000 DIM_CURVE
     /tmp/cc07PDBH.s:315    .text.setrgb:0000000000000000 setrgb
     /tmp/cc07PDBH.s:344    .text.eeconfig_read_rgblight:0000000000000000 eeconfig_read_rgblight
     /tmp/cc07PDBH.s:364    .text.eeconfig_update_rgblight:0000000000000000 eeconfig_update_rgblight
     /tmp/cc07PDBH.s:388    .text.eeconfig_update_rgblight_default:0000000000000000 eeconfig_update_rgblight_default
                            *COM*:0000000000000004 rgblight_config
     /tmp/cc07PDBH.s:427    .text.eeconfig_debug_rgblight:0000000000000000 eeconfig_debug_rgblight
     /tmp/cc07PDBH.s:450    .text.rgblight_set:0000000000000000 rgblight_set
                            *COM*:0000000000000012 led
     /tmp/cc07PDBH.s:501    .text.rgblight_setrgb:0000000000000000 rgblight_setrgb
     /tmp/cc07PDBH.s:546    .text.rgblight_sethsv_noeeprom:0000000000000000 rgblight_sethsv_noeeprom
                            *COM*:0000000000000004 inmem_config
     /tmp/cc07PDBH.s:669    .text.rgblight_sethsv:0000000000000000 rgblight_sethsv
     /tmp/cc07PDBH.s:819    .text.rgblight_increase_hue:0000000000000000 rgblight_increase_hue
     /tmp/cc07PDBH.s:865    .text.rgblight_decrease_hue:0000000000000000 rgblight_decrease_hue
     /tmp/cc07PDBH.s:920    .text.rgblight_increase_sat:0000000000000000 rgblight_increase_sat
     /tmp/cc07PDBH.s:967    .text.rgblight_decrease_sat:0000000000000000 rgblight_decrease_sat
     /tmp/cc07PDBH.s:1014   .text.rgblight_increase_val:0000000000000000 rgblight_increase_val
     /tmp/cc07PDBH.s:1061   .text.rgblight_decrease_val:0000000000000000 rgblight_decrease_val
     /tmp/cc07PDBH.s:1108   .text.rgblight_mode:0000000000000000 rgblight_mode
     /tmp/cc07PDBH.s:2974   .bss.rgblight_timer_enabled:0000000000000000 rgblight_timer_enabled
     /tmp/cc07PDBH.s:1233   .text.rgblight_init:0000000000000000 rgblight_init
     /tmp/cc07PDBH.s:2980   .bss.rgblight_inited:0000000000000000 rgblight_inited
     /tmp/cc07PDBH.s:1330   .text.rgblight_increase:0000000000000000 rgblight_increase
     /tmp/cc07PDBH.s:1366   .text.rgblight_decrease:0000000000000000 rgblight_decrease
     /tmp/cc07PDBH.s:1402   .text.rgblight_step:0000000000000000 rgblight_step
     /tmp/cc07PDBH.s:1438   .text.rgblight_enable:0000000000000000 rgblight_enable
     /tmp/cc07PDBH.s:1488   .text.rgblight_update_dword:0000000000000000 rgblight_update_dword
     /tmp/cc07PDBH.s:1540   .text.rgblight_toggle:0000000000000000 rgblight_toggle
     /tmp/cc07PDBH.s:1624   .text.rgblight_timer_init:0000000000000000 rgblight_timer_init
     /tmp/cc07PDBH.s:1645   .text.rgblight_timer_enable:0000000000000000 rgblight_timer_enable
     /tmp/cc07PDBH.s:1662   .text.rgblight_timer_disable:0000000000000000 rgblight_timer_disable
     /tmp/cc07PDBH.s:1683   .text.rgblight_timer_toggle:0000000000000000 rgblight_timer_toggle
     /tmp/cc07PDBH.s:1699   .text.rgblight_show_solid_color:0000000000000000 rgblight_show_solid_color
     /tmp/cc07PDBH.s:1755   .text.rgblight_effect_breathing:0000000000000000 rgblight_effect_breathing
     /tmp/cc07PDBH.s:2968   .bss.last_timer.2227:0000000000000000 last_timer.2227
     /tmp/cc07PDBH.s:3021   .progmem.data.RGBLED_BREATHING_INTERVALS:0000000000000000 RGBLED_BREATHING_INTERVALS
     /tmp/cc07PDBH.s:2963   .bss.pos.2226:0000000000000000 pos.2226
     /tmp/cc07PDBH.s:3030   .progmem.data.RGBLED_BREATHING_TABLE:0000000000000000 RGBLED_BREATHING_TABLE
     /tmp/cc07PDBH.s:1862   .text.rgblight_effect_rainbow_mood:0000000000000000 rgblight_effect_rainbow_mood
     /tmp/cc07PDBH.s:2958   .bss.last_timer.2238:0000000000000000 last_timer.2238
     /tmp/cc07PDBH.s:3013   .progmem.data.RGBLED_RAINBOW_MOOD_INTERVALS:0000000000000000 RGBLED_RAINBOW_MOOD_INTERVALS
     /tmp/cc07PDBH.s:2953   .bss.current_hue.2237:0000000000000000 current_hue.2237
     /tmp/cc07PDBH.s:1948   .text.rgblight_effect_rainbow_swirl:0000000000000000 rgblight_effect_rainbow_swirl
     /tmp/cc07PDBH.s:2948   .bss.last_timer.2246:0000000000000000 last_timer.2246
     /tmp/cc07PDBH.s:2943   .bss.current_hue.2245:0000000000000000 current_hue.2245
     /tmp/cc07PDBH.s:2114   .text.rgblight_effect_snake:0000000000000000 rgblight_effect_snake
     /tmp/cc07PDBH.s:2938   .bss.last_timer.2259:0000000000000000 last_timer.2259
     /tmp/cc07PDBH.s:2997   .progmem.data.RGBLED_SNAKE_INTERVALS:0000000000000000 RGBLED_SNAKE_INTERVALS
     /tmp/cc07PDBH.s:2933   .bss.pos.2258:0000000000000000 pos.2258
     /tmp/cc07PDBH.s:2385   .text.rgblight_effect_knight:0000000000000000 rgblight_effect_knight
     /tmp/cc07PDBH.s:2928   .bss.last_timer.2277:0000000000000000 last_timer.2277
     /tmp/cc07PDBH.s:2989   .progmem.data.RGBLED_KNIGHT_INTERVALS:0000000000000000 RGBLED_KNIGHT_INTERVALS
     /tmp/cc07PDBH.s:2923   .data.increment.2283:0000000000000000 increment.2283
     /tmp/cc07PDBH.s:2918   .bss.pos.2276:0000000000000000 pos.2276
     /tmp/cc07PDBH.s:2722   .text.rgblight_effect_christmas:0000000000000000 rgblight_effect_christmas
     /tmp/cc07PDBH.s:2913   .bss.last_timer.2300:0000000000000000 last_timer.2300
     /tmp/cc07PDBH.s:2908   .bss.current_offset.2299:0000000000000000 current_offset.2299
     /tmp/cc07PDBH.s:2813   .text.rgblight_task:0000000000000000 rgblight_task
     /tmp/cc07PDBH.s:3005   .progmem.data.RGBLED_RAINBOW_SWIRL_INTERVALS:0000000000000000 RGBLED_RAINBOW_SWIRL_INTERVALS

UNDEFINED SYMBOLS
__udivmodhi4
eeprom_read_dword
eeprom_update_dword
ws2812_setleds
__divmodhi4
debug_config
eeconfig_is_enabled
eeconfig_init
timer_elapsed
timer_read
__do_copy_data
__do_clear_bss
