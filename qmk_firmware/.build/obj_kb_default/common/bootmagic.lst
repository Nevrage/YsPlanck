   1               		.file	"bootmagic.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.scan_keycode,"ax",@progbits
  12               	scan_keycode:
  13               	.LVL0:
  14               	.LFB104:
  15               		.file 1 "./tmk_core/common/bootmagic.c"
   1:./tmk_core/common/bootmagic.c **** #include <stdint.h>
   2:./tmk_core/common/bootmagic.c **** #include <stdbool.h>
   3:./tmk_core/common/bootmagic.c **** #include "wait.h"
   4:./tmk_core/common/bootmagic.c **** #include "matrix.h"
   5:./tmk_core/common/bootmagic.c **** #include "bootloader.h"
   6:./tmk_core/common/bootmagic.c **** #include "debug.h"
   7:./tmk_core/common/bootmagic.c **** #include "keymap.h"
   8:./tmk_core/common/bootmagic.c **** #include "host.h"
   9:./tmk_core/common/bootmagic.c **** #include "action_layer.h"
  10:./tmk_core/common/bootmagic.c **** #include "eeconfig.h"
  11:./tmk_core/common/bootmagic.c **** #include "bootmagic.h"
  12:./tmk_core/common/bootmagic.c **** 
  13:./tmk_core/common/bootmagic.c **** keymap_config_t keymap_config;
  14:./tmk_core/common/bootmagic.c **** 
  15:./tmk_core/common/bootmagic.c **** void bootmagic(void)
  16:./tmk_core/common/bootmagic.c **** {
  17:./tmk_core/common/bootmagic.c ****     /* check signature */
  18:./tmk_core/common/bootmagic.c ****     if (!eeconfig_is_enabled()) {
  19:./tmk_core/common/bootmagic.c ****         eeconfig_init();
  20:./tmk_core/common/bootmagic.c ****     }
  21:./tmk_core/common/bootmagic.c **** 
  22:./tmk_core/common/bootmagic.c ****     /* do scans in case of bounce */
  23:./tmk_core/common/bootmagic.c ****     print("bootmagic scan: ... ");
  24:./tmk_core/common/bootmagic.c ****     uint8_t scan = 100;
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
  26:./tmk_core/common/bootmagic.c ****     print("done.\n");
  27:./tmk_core/common/bootmagic.c **** 
  28:./tmk_core/common/bootmagic.c ****     /* bootmagic skip */
  29:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SKIP)) {
  30:./tmk_core/common/bootmagic.c ****         return;
  31:./tmk_core/common/bootmagic.c ****     }
  32:./tmk_core/common/bootmagic.c **** 
  33:./tmk_core/common/bootmagic.c ****     /* eeconfig clear */
  34:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_EEPROM_CLEAR)) {
  35:./tmk_core/common/bootmagic.c ****         eeconfig_init();
  36:./tmk_core/common/bootmagic.c ****     }
  37:./tmk_core/common/bootmagic.c **** 
  38:./tmk_core/common/bootmagic.c ****     /* bootloader */
  39:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_BOOTLOADER)) {
  40:./tmk_core/common/bootmagic.c ****         bootloader_jump();
  41:./tmk_core/common/bootmagic.c ****     }
  42:./tmk_core/common/bootmagic.c **** 
  43:./tmk_core/common/bootmagic.c ****     /* debug enable */
  44:./tmk_core/common/bootmagic.c ****     debug_config.raw = eeconfig_read_debug();
  45:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_ENABLE)) {
  46:./tmk_core/common/bootmagic.c ****         if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MATRIX)) {
  47:./tmk_core/common/bootmagic.c ****             debug_config.matrix = !debug_config.matrix;
  48:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_KEYBOARD)) {
  49:./tmk_core/common/bootmagic.c ****             debug_config.keyboard = !debug_config.keyboard;
  50:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MOUSE)) {
  51:./tmk_core/common/bootmagic.c ****             debug_config.mouse = !debug_config.mouse;
  52:./tmk_core/common/bootmagic.c ****         } else {
  53:./tmk_core/common/bootmagic.c ****             debug_config.enable = !debug_config.enable;
  54:./tmk_core/common/bootmagic.c ****         }
  55:./tmk_core/common/bootmagic.c ****     }
  56:./tmk_core/common/bootmagic.c ****     eeconfig_update_debug(debug_config.raw);
  57:./tmk_core/common/bootmagic.c **** 
  58:./tmk_core/common/bootmagic.c ****     /* keymap config */
  59:./tmk_core/common/bootmagic.c ****     keymap_config.raw = eeconfig_read_keymap();
  60:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_CONTROL_CAPSLOCK)) {
  61:./tmk_core/common/bootmagic.c ****         keymap_config.swap_control_capslock = !keymap_config.swap_control_capslock;
  62:./tmk_core/common/bootmagic.c ****     }
  63:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_CAPSLOCK_TO_CONTROL)) {
  64:./tmk_core/common/bootmagic.c ****         keymap_config.capslock_to_control = !keymap_config.capslock_to_control;
  65:./tmk_core/common/bootmagic.c ****     }
  66:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_LALT_LGUI)) {
  67:./tmk_core/common/bootmagic.c ****         keymap_config.swap_lalt_lgui = !keymap_config.swap_lalt_lgui;
  68:./tmk_core/common/bootmagic.c ****     }
  69:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_RALT_RGUI)) {
  70:./tmk_core/common/bootmagic.c ****         keymap_config.swap_ralt_rgui = !keymap_config.swap_ralt_rgui;
  71:./tmk_core/common/bootmagic.c ****     }
  72:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_NO_GUI)) {
  73:./tmk_core/common/bootmagic.c ****         keymap_config.no_gui = !keymap_config.no_gui;
  74:./tmk_core/common/bootmagic.c ****     }
  75:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_GRAVE_ESC)) {
  76:./tmk_core/common/bootmagic.c ****         keymap_config.swap_grave_esc = !keymap_config.swap_grave_esc;
  77:./tmk_core/common/bootmagic.c ****     }
  78:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_BACKSLASH_BACKSPACE)) {
  79:./tmk_core/common/bootmagic.c ****         keymap_config.swap_backslash_backspace = !keymap_config.swap_backslash_backspace;
  80:./tmk_core/common/bootmagic.c ****     }
  81:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_HOST_NKRO)) {
  82:./tmk_core/common/bootmagic.c ****         keymap_config.nkro = !keymap_config.nkro;
  83:./tmk_core/common/bootmagic.c ****     }
  84:./tmk_core/common/bootmagic.c ****     eeconfig_update_keymap(keymap_config.raw);
  85:./tmk_core/common/bootmagic.c **** 
  86:./tmk_core/common/bootmagic.c ****     /* default layer */
  87:./tmk_core/common/bootmagic.c ****     uint8_t default_layer = 0;
  88:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_0)) { default_layer |= (1<<0); }
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
  96:./tmk_core/common/bootmagic.c ****     if (default_layer) {
  97:./tmk_core/common/bootmagic.c ****         eeconfig_update_default_layer(default_layer);
  98:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
  99:./tmk_core/common/bootmagic.c ****     } else {
 100:./tmk_core/common/bootmagic.c ****         default_layer = eeconfig_read_default_layer();
 101:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 102:./tmk_core/common/bootmagic.c ****     }
 103:./tmk_core/common/bootmagic.c **** }
 104:./tmk_core/common/bootmagic.c **** 
 105:./tmk_core/common/bootmagic.c **** static bool scan_keycode(uint8_t keycode)
 106:./tmk_core/common/bootmagic.c **** {
  16               		.loc 1 106 1 view -0
  17               		.cfi_startproc
  18               		.loc 1 106 1 is_stmt 0 view .LVU1
  19 0000 AF92      		push r10
  20               	.LCFI0:
  21               		.cfi_def_cfa_offset 3
  22               		.cfi_offset 10, -2
  23 0002 BF92      		push r11
  24               	.LCFI1:
  25               		.cfi_def_cfa_offset 4
  26               		.cfi_offset 11, -3
  27 0004 CF92      		push r12
  28               	.LCFI2:
  29               		.cfi_def_cfa_offset 5
  30               		.cfi_offset 12, -4
  31 0006 DF92      		push r13
  32               	.LCFI3:
  33               		.cfi_def_cfa_offset 6
  34               		.cfi_offset 13, -5
  35 0008 EF92      		push r14
  36               	.LCFI4:
  37               		.cfi_def_cfa_offset 7
  38               		.cfi_offset 14, -6
  39 000a FF92      		push r15
  40               	.LCFI5:
  41               		.cfi_def_cfa_offset 8
  42               		.cfi_offset 15, -7
  43 000c 0F93      		push r16
  44               	.LCFI6:
  45               		.cfi_def_cfa_offset 9
  46               		.cfi_offset 16, -8
  47 000e 1F93      		push r17
  48               	.LCFI7:
  49               		.cfi_def_cfa_offset 10
  50               		.cfi_offset 17, -9
  51 0010 CF93      		push r28
  52               	.LCFI8:
  53               		.cfi_def_cfa_offset 11
  54               		.cfi_offset 28, -10
  55               	/* prologue: function */
  56               	/* frame size = 0 */
  57               	/* stack size = 9 */
  58               	.L__stack_usage = 9
 107:./tmk_core/common/bootmagic.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
  59               		.loc 1 107 5 is_stmt 1 view .LVU2
  60               	.LBB4:
  61               		.loc 1 107 10 view .LVU3
  62               	.LVL1:
  63               		.loc 1 107 18 is_stmt 0 view .LVU4
  64 0012 C0E0      		ldi r28,0
  65               	.LBB5:
  66               	.LBB6:
 108:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
 109:./tmk_core/common/bootmagic.c ****         for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 110:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
  67               		.loc 1 110 46 view .LVU5
  68 0014 CC24      		clr r12
  69 0016 C394      		inc r12
  70 0018 D12C      		mov r13,__zero_reg__
 111:./tmk_core/common/bootmagic.c ****                 if (keycode == keymap_key_to_keycode(0, (keypos_t){ .row = r, .col = c })) {
  71               		.loc 1 111 29 view .LVU6
  72 001a E82E      		mov r14,r24
  73 001c F12C      		mov r15,__zero_reg__
  74               	.LVL2:
  75               	.L7:
  76               		.loc 1 111 29 view .LVU7
  77               	.LBE6:
 108:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
  78               		.loc 1 108 9 is_stmt 1 view .LVU8
 108:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
  79               		.loc 1 108 35 is_stmt 0 view .LVU9
  80 001e 8C2F      		mov r24,r28
  81 0020 0E94 0000 		call matrix_get_row
  82               	.LVL3:
  83 0024 5C01      		movw r10,r24
  84               	.LVL4:
 109:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
  85               		.loc 1 109 9 is_stmt 1 view .LVU10
  86               	.LBB7:
 109:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
  87               		.loc 1 109 14 view .LVU11
 109:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
  88               		.loc 1 109 14 is_stmt 0 view .LVU12
  89               	.LBE7:
 108:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
  90               		.loc 1 108 35 view .LVU13
  91 0026 10E0      		ldi r17,0
  92 0028 00E0      		ldi r16,0
  93               	.LVL5:
  94               	.L3:
  95               	.LBB8:
 110:./tmk_core/common/bootmagic.c ****                 if (keycode == keymap_key_to_keycode(0, (keypos_t){ .row = r, .col = c })) {
  96               		.loc 1 110 13 is_stmt 1 view .LVU14
 110:./tmk_core/common/bootmagic.c ****                 if (keycode == keymap_key_to_keycode(0, (keypos_t){ .row = r, .col = c })) {
  97               		.loc 1 110 46 is_stmt 0 view .LVU15
  98 002a C601      		movw r24,r12
  99 002c 002E      		mov r0,r16
 100 002e 00C0      		rjmp 2f
 101               		1:
 102 0030 880F      		lsl r24
 103 0032 991F      		rol r25
 104               		2:
 105 0034 0A94      		dec r0
 106 0036 02F4      		brpl 1b
 110:./tmk_core/common/bootmagic.c ****                 if (keycode == keymap_key_to_keycode(0, (keypos_t){ .row = r, .col = c })) {
 107               		.loc 1 110 28 view .LVU16
 108 0038 8A21      		and r24,r10
 109 003a 9B21      		and r25,r11
 110:./tmk_core/common/bootmagic.c ****                 if (keycode == keymap_key_to_keycode(0, (keypos_t){ .row = r, .col = c })) {
 110               		.loc 1 110 16 view .LVU17
 111 003c 892B      		or r24,r25
 112 003e 01F4      		brne .L2
 113               	.L6:
 114               	.LVL6:
 110:./tmk_core/common/bootmagic.c ****                 if (keycode == keymap_key_to_keycode(0, (keypos_t){ .row = r, .col = c })) {
 115               		.loc 1 110 16 view .LVU18
 116 0040 0F5F      		subi r16,-1
 117 0042 1F4F      		sbci r17,-1
 118               	.LVL7:
 109:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
 119               		.loc 1 109 9 view .LVU19
 120 0044 0C30      		cpi r16,12
 121 0046 1105      		cpc r17,__zero_reg__
 122 0048 01F4      		brne .L3
 123               	.LBE8:
 124               	.LBE5:
 107:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
 125               		.loc 1 107 43 discriminator 2 view .LVU20
 126 004a CF5F      		subi r28,lo8(-(1))
 127               	.LVL8:
 107:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
 128               		.loc 1 107 5 discriminator 2 view .LVU21
 129 004c C430      		cpi r28,lo8(4)
 130 004e 01F4      		brne .L7
 131               	.LBE4:
 112:./tmk_core/common/bootmagic.c ****                     return true;
 113:./tmk_core/common/bootmagic.c ****                 }
 114:./tmk_core/common/bootmagic.c ****             }
 115:./tmk_core/common/bootmagic.c ****         }
 116:./tmk_core/common/bootmagic.c ****     }
 117:./tmk_core/common/bootmagic.c ****     return false;
 132               		.loc 1 117 12 view .LVU22
 133 0050 80E0      		ldi r24,0
 134               	.LVL9:
 135               	.L1:
 136               	/* epilogue start */
 118:./tmk_core/common/bootmagic.c **** }
 137               		.loc 1 118 1 view .LVU23
 138 0052 CF91      		pop r28
 139               	.LVL10:
 140               		.loc 1 118 1 view .LVU24
 141 0054 1F91      		pop r17
 142 0056 0F91      		pop r16
 143 0058 FF90      		pop r15
 144 005a EF90      		pop r14
 145               	.LVL11:
 146               		.loc 1 118 1 view .LVU25
 147 005c DF90      		pop r13
 148 005e CF90      		pop r12
 149 0060 BF90      		pop r11
 150 0062 AF90      		pop r10
 151               	.LVL12:
 152               		.loc 1 118 1 view .LVU26
 153 0064 0895      		ret
 154               	.LVL13:
 155               	.L2:
 156               	.LBB11:
 157               	.LBB10:
 158               	.LBB9:
 111:./tmk_core/common/bootmagic.c ****                     return true;
 159               		.loc 1 111 17 is_stmt 1 view .LVU27
 111:./tmk_core/common/bootmagic.c ****                     return true;
 160               		.loc 1 111 32 is_stmt 0 view .LVU28
 161 0066 602F      		mov r22,r16
 162 0068 7C2F      		mov r23,r28
 163 006a 80E0      		ldi r24,0
 164 006c 0E94 0000 		call keymap_key_to_keycode
 165               	.LVL14:
 111:./tmk_core/common/bootmagic.c ****                     return true;
 166               		.loc 1 111 20 view .LVU29
 167 0070 E816      		cp r14,r24
 168 0072 F906      		cpc r15,r25
 169 0074 01F4      		brne .L6
 112:./tmk_core/common/bootmagic.c ****                     return true;
 170               		.loc 1 112 28 view .LVU30
 171 0076 81E0      		ldi r24,lo8(1)
 172 0078 00C0      		rjmp .L1
 173               	.LBE9:
 174               	.LBE10:
 175               	.LBE11:
 176               		.cfi_endproc
 177               	.LFE104:
 179               		.section	.text.bootmagic_scan_keycode,"ax",@progbits
 180               	.global	bootmagic_scan_keycode
 182               	bootmagic_scan_keycode:
 183               	.LVL15:
 184               	.LFB105:
 119:./tmk_core/common/bootmagic.c **** 
 120:./tmk_core/common/bootmagic.c **** bool bootmagic_scan_keycode(uint8_t keycode)
 121:./tmk_core/common/bootmagic.c **** {
 185               		.loc 1 121 1 is_stmt 1 view -0
 186               		.cfi_startproc
 187               		.loc 1 121 1 is_stmt 0 view .LVU32
 188 0000 CF93      		push r28
 189               	.LCFI9:
 190               		.cfi_def_cfa_offset 3
 191               		.cfi_offset 28, -2
 192               	/* prologue: function */
 193               	/* frame size = 0 */
 194               	/* stack size = 1 */
 195               	.L__stack_usage = 1
 196 0002 C82F      		mov r28,r24
 122:./tmk_core/common/bootmagic.c ****     if (!scan_keycode(BOOTMAGIC_KEY_SALT)) return false;
 197               		.loc 1 122 5 is_stmt 1 view .LVU33
 198               		.loc 1 122 10 is_stmt 0 view .LVU34
 199 0004 8CE2      		ldi r24,lo8(44)
 200               	.LVL16:
 201               		.loc 1 122 10 view .LVU35
 202 0006 0E94 0000 		call scan_keycode
 203               	.LVL17:
 204               		.loc 1 122 8 view .LVU36
 205 000a 8823      		tst r24
 206 000c 01F0      		breq .L12
 123:./tmk_core/common/bootmagic.c **** 
 124:./tmk_core/common/bootmagic.c ****     return scan_keycode(keycode);
 207               		.loc 1 124 5 is_stmt 1 view .LVU37
 208               		.loc 1 124 12 is_stmt 0 view .LVU38
 209 000e 8C2F      		mov r24,r28
 210               	/* epilogue start */
 125:./tmk_core/common/bootmagic.c **** }...
 211               		.loc 1 125 1 view .LVU39
 212 0010 CF91      		pop r28
 213               	.LVL18:
 124:./tmk_core/common/bootmagic.c ****     return scan_keycode(keycode);
 214               		.loc 1 124 12 view .LVU40
 215 0012 0C94 0000 		jmp scan_keycode
 216               	.LVL19:
 217               	.L12:
 218               		.loc 1 125 1 view .LVU41
 219 0016 80E0      		ldi r24,0
 220               	/* epilogue start */
 221 0018 CF91      		pop r28
 222               	.LVL20:
 223               		.loc 1 125 1 view .LVU42
 224 001a 0895      		ret
 225               		.cfi_endproc
 226               	.LFE105:
 228               		.section	.text.bootmagic,"ax",@progbits
 229               	.global	bootmagic
 231               	bootmagic:
 232               	.LFB103:
  16:./tmk_core/common/bootmagic.c **** {
 233               		.loc 1 16 1 is_stmt 1 view -0
 234               		.cfi_startproc
 235 0000 CF93      		push r28
 236               	.LCFI10:
 237               		.cfi_def_cfa_offset 3
 238               		.cfi_offset 28, -2
 239               	/* prologue: function */
 240               	/* frame size = 0 */
 241               	/* stack size = 1 */
 242               	.L__stack_usage = 1
  18:./tmk_core/common/bootmagic.c ****     if (!eeconfig_is_enabled()) {
 243               		.loc 1 18 5 view .LVU44
  18:./tmk_core/common/bootmagic.c ****     if (!eeconfig_is_enabled()) {
 244               		.loc 1 18 10 is_stmt 0 view .LVU45
 245 0002 0E94 0000 		call eeconfig_is_enabled
 246               	.LVL21:
  18:./tmk_core/common/bootmagic.c ****     if (!eeconfig_is_enabled()) {
 247               		.loc 1 18 8 view .LVU46
 248 0006 8111      		cpse r24,__zero_reg__
 249 0008 00C0      		rjmp .L15
  19:./tmk_core/common/bootmagic.c ****         eeconfig_init();
 250               		.loc 1 19 9 is_stmt 1 view .LVU47
 251 000a 0E94 0000 		call eeconfig_init
 252               	.LVL22:
 253               	.L15:
  16:./tmk_core/common/bootmagic.c **** {
 254               		.loc 1 16 1 is_stmt 0 discriminator 1 view .LVU48
 255 000e C5E6      		ldi r28,lo8(101)
 256 0010 00C0      		rjmp .L16
 257               	.LVL23:
 258               	.L17:
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
 259               		.loc 1 25 22 is_stmt 1 discriminator 2 view .LVU49
 260 0012 0E94 0000 		call matrix_scan
 261               	.LVL24:
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
 262               		.loc 1 25 37 discriminator 2 view .LVU50
 263               	.LBB12:
 264               	.LBI12:
 265               		.file 2 "/usr/avr/include/util/delay.h"
   1:/usr/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/avr/include/util/delay.h **** 
   6:/usr/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/avr/include/util/delay.h **** 
   9:/usr/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/avr/include/util/delay.h **** 
  12:/usr/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/avr/include/util/delay.h ****      distribution.
  16:/usr/avr/include/util/delay.h **** 
  17:/usr/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/avr/include/util/delay.h **** 
  21:/usr/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/avr/include/util/delay.h **** 
  33:/usr/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/avr/include/util/delay.h **** 
  35:/usr/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/avr/include/util/delay.h **** 
  38:/usr/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/avr/include/util/delay.h **** #  endif
  42:/usr/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/avr/include/util/delay.h **** 
  44:/usr/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/avr/include/util/delay.h **** #include <math.h>
  47:/usr/avr/include/util/delay.h **** 
  48:/usr/avr/include/util/delay.h **** /** \file */
  49:/usr/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/avr/include/util/delay.h ****     \code
  51:/usr/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/avr/include/util/delay.h ****     \endcode
  55:/usr/avr/include/util/delay.h **** 
  56:/usr/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/avr/include/util/delay.h ****     used.
  60:/usr/avr/include/util/delay.h **** 
  61:/usr/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/avr/include/util/delay.h **** 
  70:/usr/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/avr/include/util/delay.h **** 
  79:/usr/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/avr/include/util/delay.h **** 
  83:/usr/avr/include/util/delay.h **** */
  84:/usr/avr/include/util/delay.h **** 
  85:/usr/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/avr/include/util/delay.h **** #endif
  89:/usr/avr/include/util/delay.h **** 
  90:/usr/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/avr/include/util/delay.h **** 
  97:/usr/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/avr/include/util/delay.h **** 
 103:/usr/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/avr/include/util/delay.h ****     integer value.
 107:/usr/avr/include/util/delay.h ****  */
 108:/usr/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/avr/include/util/delay.h **** #endif
 110:/usr/avr/include/util/delay.h **** 
 111:/usr/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/avr/include/util/delay.h **** #endif
 114:/usr/avr/include/util/delay.h **** 
 115:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/avr/include/util/delay.h **** #endif
 120:/usr/avr/include/util/delay.h **** 
 121:/usr/avr/include/util/delay.h **** /**
 122:/usr/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/avr/include/util/delay.h **** 
 124:/usr/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/avr/include/util/delay.h **** 
 126:/usr/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/avr/include/util/delay.h **** 
 129:/usr/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/avr/include/util/delay.h **** 
 131:/usr/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/avr/include/util/delay.h **** 
 137:/usr/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/avr/include/util/delay.h **** 
 142:/usr/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/avr/include/util/delay.h **** 
 147:/usr/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/avr/include/util/delay.h ****    respectively.
 151:/usr/avr/include/util/delay.h **** 
 152:/usr/avr/include/util/delay.h ****    \note
 153:/usr/avr/include/util/delay.h **** 
 154:/usr/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/avr/include/util/delay.h **** 
 164:/usr/avr/include/util/delay.h ****  */
 165:/usr/avr/include/util/delay.h **** void
 166:/usr/avr/include/util/delay.h **** _delay_ms(double __ms)
 266               		.loc 2 166 1 discriminator 2 view .LVU51
 267               	.LBB13:
 167:/usr/avr/include/util/delay.h **** {
 168:/usr/avr/include/util/delay.h **** 	double __tmp ;
 268               		.loc 2 168 2 discriminator 2 view .LVU52
 169:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 269               		.loc 2 172 2 discriminator 2 view .LVU53
 173:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 270               		.loc 2 173 2 discriminator 2 view .LVU54
 174:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 271               		.loc 2 174 2 discriminator 2 view .LVU55
 175:/usr/avr/include/util/delay.h **** 
 176:/usr/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/avr/include/util/delay.h **** 
 179:/usr/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/avr/include/util/delay.h **** 
 182:/usr/avr/include/util/delay.h **** 	#else
 183:/usr/avr/include/util/delay.h **** 		//round up by default
 184:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 272               		.loc 2 184 3 discriminator 2 view .LVU56
 185:/usr/avr/include/util/delay.h **** 	#endif
 186:/usr/avr/include/util/delay.h **** 
 187:/usr/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 273               		.loc 2 187 2 discriminator 2 view .LVU57
 274 0016 8FE3      		ldi r24,lo8(-25537)
 275 0018 9CE9      		ldi r25,hi8(-25537)
 276 001a 0197      	1:	sbiw r24,1
 277 001c 01F4      		brne 1b
 278 001e 00C0      		rjmp .
 279 0020 0000      		nop
 280               	.LVL25:
 281               	.L16:
 282               		.loc 2 187 2 is_stmt 0 discriminator 2 view .LVU58
 283 0022 C150      		subi r28,lo8(-(-1))
 284               	.LVL26:
 285               		.loc 2 187 2 discriminator 2 view .LVU59
 286               	.LBE13:
 287               	.LBE12:
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
 288               		.loc 1 25 11 discriminator 1 view .LVU60
 289 0024 01F4      		brne .L17
  26:./tmk_core/common/bootmagic.c ****     print("done.\n");
 290               		.loc 1 26 21 is_stmt 1 view .LVU61
  29:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SKIP)) {
 291               		.loc 1 29 5 view .LVU62
  29:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SKIP)) {
 292               		.loc 1 29 9 is_stmt 0 view .LVU63
 293 0026 89E2      		ldi r24,lo8(41)
 294 0028 0E94 0000 		call bootmagic_scan_keycode
 295               	.LVL27:
  29:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SKIP)) {
 296               		.loc 1 29 8 view .LVU64
 297 002c 8111      		cpse r24,__zero_reg__
 298 002e 00C0      		rjmp .L14
  34:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_EEPROM_CLEAR)) {
 299               		.loc 1 34 5 is_stmt 1 view .LVU65
  34:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_EEPROM_CLEAR)) {
 300               		.loc 1 34 9 is_stmt 0 view .LVU66
 301 0030 8AE2      		ldi r24,lo8(42)
 302 0032 0E94 0000 		call bootmagic_scan_keycode
 303               	.LVL28:
  34:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_EEPROM_CLEAR)) {
 304               		.loc 1 34 8 view .LVU67
 305 0036 8111      		cpse r24,__zero_reg__
  35:./tmk_core/common/bootmagic.c ****         eeconfig_init();
 306               		.loc 1 35 9 is_stmt 1 view .LVU68
 307 0038 0E94 0000 		call eeconfig_init
 308               	.LVL29:
 309               	.L19:
  39:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_BOOTLOADER)) {
 310               		.loc 1 39 5 view .LVU69
  39:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_BOOTLOADER)) {
 311               		.loc 1 39 9 is_stmt 0 view .LVU70
 312 003c 85E0      		ldi r24,lo8(5)
 313 003e 0E94 0000 		call bootmagic_scan_keycode
 314               	.LVL30:
  39:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_BOOTLOADER)) {
 315               		.loc 1 39 8 view .LVU71
 316 0042 8111      		cpse r24,__zero_reg__
  40:./tmk_core/common/bootmagic.c ****         bootloader_jump();
 317               		.loc 1 40 9 is_stmt 1 view .LVU72
 318 0044 0E94 0000 		call bootloader_jump
 319               	.LVL31:
 320               	.L20:
  44:./tmk_core/common/bootmagic.c ****     debug_config.raw = eeconfig_read_debug();
 321               		.loc 1 44 5 view .LVU73
  44:./tmk_core/common/bootmagic.c ****     debug_config.raw = eeconfig_read_debug();
 322               		.loc 1 44 24 is_stmt 0 view .LVU74
 323 0048 0E94 0000 		call eeconfig_read_debug
 324               	.LVL32:
  44:./tmk_core/common/bootmagic.c ****     debug_config.raw = eeconfig_read_debug();
 325               		.loc 1 44 22 view .LVU75
 326 004c 8093 0000 		sts debug_config,r24
  45:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_ENABLE)) {
 327               		.loc 1 45 5 is_stmt 1 view .LVU76
  45:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_ENABLE)) {
 328               		.loc 1 45 9 is_stmt 0 view .LVU77
 329 0050 87E0      		ldi r24,lo8(7)
 330 0052 0E94 0000 		call bootmagic_scan_keycode
 331               	.LVL33:
  45:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_ENABLE)) {
 332               		.loc 1 45 8 view .LVU78
 333 0056 8823      		tst r24
 334 0058 01F0      		breq .L21
  46:./tmk_core/common/bootmagic.c ****         if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MATRIX)) {
 335               		.loc 1 46 9 is_stmt 1 view .LVU79
  46:./tmk_core/common/bootmagic.c ****         if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MATRIX)) {
 336               		.loc 1 46 13 is_stmt 0 view .LVU80
 337 005a 8BE1      		ldi r24,lo8(27)
 338 005c 0E94 0000 		call bootmagic_scan_keycode
 339               	.LVL34:
  46:./tmk_core/common/bootmagic.c ****         if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MATRIX)) {
 340               		.loc 1 46 12 view .LVU81
 341 0060 8823      		tst r24
 342 0062 01F4      		brne .+2
 343 0064 00C0      		rjmp .L22
  47:./tmk_core/common/bootmagic.c ****             debug_config.matrix = !debug_config.matrix;
 344               		.loc 1 47 13 is_stmt 1 view .LVU82
  47:./tmk_core/common/bootmagic.c ****             debug_config.matrix = !debug_config.matrix;
 345               		.loc 1 47 48 is_stmt 0 view .LVU83
 346 0066 9091 0000 		lds r25,debug_config
  47:./tmk_core/common/bootmagic.c ****             debug_config.matrix = !debug_config.matrix;
 347               		.loc 1 47 33 view .LVU84
 348 006a 892F      		mov r24,r25
 349 006c 8D7F      		andi r24,~(1<<1)
 350 006e 91FF      		sbrs r25,1
 351 0070 8260      		ori r24,1<<1
 352               	.L93:
  53:./tmk_core/common/bootmagic.c ****             debug_config.enable = !debug_config.enable;
 353               		.loc 1 53 33 view .LVU85
 354 0072 8093 0000 		sts debug_config,r24
 355               	.L21:
  56:./tmk_core/common/bootmagic.c ****     eeconfig_update_debug(debug_config.raw);
 356               		.loc 1 56 5 is_stmt 1 view .LVU86
 357 0076 8091 0000 		lds r24,debug_config
 358 007a 0E94 0000 		call eeconfig_update_debug
 359               	.LVL35:
  59:./tmk_core/common/bootmagic.c ****     keymap_config.raw = eeconfig_read_keymap();
 360               		.loc 1 59 5 view .LVU87
  59:./tmk_core/common/bootmagic.c ****     keymap_config.raw = eeconfig_read_keymap();
 361               		.loc 1 59 25 is_stmt 0 view .LVU88
 362 007e 0E94 0000 		call eeconfig_read_keymap
 363               	.LVL36:
 364 0082 90E0      		ldi r25,0
 365 0084 9093 0000 		sts keymap_config+1,r25
 366 0088 8093 0000 		sts keymap_config,r24
  60:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_CONTROL_CAPSLOCK)) {
 367               		.loc 1 60 5 is_stmt 1 view .LVU89
  60:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_CONTROL_CAPSLOCK)) {
 368               		.loc 1 60 9 is_stmt 0 view .LVU90
 369 008c 80EE      		ldi r24,lo8(-32)
 370 008e 0E94 0000 		call bootmagic_scan_keycode
 371               	.LVL37:
  60:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_CONTROL_CAPSLOCK)) {
 372               		.loc 1 60 8 view .LVU91
 373 0092 8823      		tst r24
 374 0094 01F0      		breq .L25
  61:./tmk_core/common/bootmagic.c ****         keymap_config.swap_control_capslock = !keymap_config.swap_control_capslock;
 375               		.loc 1 61 9 is_stmt 1 view .LVU92
  61:./tmk_core/common/bootmagic.c ****         keymap_config.swap_control_capslock = !keymap_config.swap_control_capslock;
 376               		.loc 1 61 61 is_stmt 0 view .LVU93
 377 0096 9091 0000 		lds r25,keymap_config
  61:./tmk_core/common/bootmagic.c ****         keymap_config.swap_control_capslock = !keymap_config.swap_control_capslock;
 378               		.loc 1 61 45 view .LVU94
 379 009a 892F      		mov r24,r25
 380 009c 8E7F      		andi r24,~(1<<0)
 381 009e 90FF      		sbrs r25,0
 382 00a0 8160      		ori r24,1<<0
 383 00a2 8093 0000 		sts keymap_config,r24
 384               	.L25:
  63:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_CAPSLOCK_TO_CONTROL)) {
 385               		.loc 1 63 5 is_stmt 1 view .LVU95
  63:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_CAPSLOCK_TO_CONTROL)) {
 386               		.loc 1 63 9 is_stmt 0 view .LVU96
 387 00a6 89E3      		ldi r24,lo8(57)
 388 00a8 0E94 0000 		call bootmagic_scan_keycode
 389               	.LVL38:
  63:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_CAPSLOCK_TO_CONTROL)) {
 390               		.loc 1 63 8 view .LVU97
 391 00ac 8823      		tst r24
 392 00ae 01F0      		breq .L26
  64:./tmk_core/common/bootmagic.c ****         keymap_config.capslock_to_control = !keymap_config.capslock_to_control;
 393               		.loc 1 64 9 is_stmt 1 view .LVU98
  64:./tmk_core/common/bootmagic.c ****         keymap_config.capslock_to_control = !keymap_config.capslock_to_control;
 394               		.loc 1 64 59 is_stmt 0 view .LVU99
 395 00b0 9091 0000 		lds r25,keymap_config
  64:./tmk_core/common/bootmagic.c ****         keymap_config.capslock_to_control = !keymap_config.capslock_to_control;
 396               		.loc 1 64 43 view .LVU100
 397 00b4 892F      		mov r24,r25
 398 00b6 8D7F      		andi r24,~(1<<1)
 399 00b8 91FF      		sbrs r25,1
 400 00ba 8260      		ori r24,1<<1
 401 00bc 8093 0000 		sts keymap_config,r24
 402               	.L26:
  66:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_LALT_LGUI)) {
 403               		.loc 1 66 5 is_stmt 1 view .LVU101
  66:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_LALT_LGUI)) {
 404               		.loc 1 66 9 is_stmt 0 view .LVU102
 405 00c0 82EE      		ldi r24,lo8(-30)
 406 00c2 0E94 0000 		call bootmagic_scan_keycode
 407               	.LVL39:
  66:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_LALT_LGUI)) {
 408               		.loc 1 66 8 view .LVU103
 409 00c6 8823      		tst r24
 410 00c8 01F0      		breq .L27
  67:./tmk_core/common/bootmagic.c ****         keymap_config.swap_lalt_lgui = !keymap_config.swap_lalt_lgui;
 411               		.loc 1 67 9 is_stmt 1 view .LVU104
  67:./tmk_core/common/bootmagic.c ****         keymap_config.swap_lalt_lgui = !keymap_config.swap_lalt_lgui;
 412               		.loc 1 67 54 is_stmt 0 view .LVU105
 413 00ca 9091 0000 		lds r25,keymap_config
  67:./tmk_core/common/bootmagic.c ****         keymap_config.swap_lalt_lgui = !keymap_config.swap_lalt_lgui;
 414               		.loc 1 67 38 view .LVU106
 415 00ce 892F      		mov r24,r25
 416 00d0 8B7F      		andi r24,~(1<<2)
 417 00d2 92FF      		sbrs r25,2
 418 00d4 8460      		ori r24,1<<2
 419 00d6 8093 0000 		sts keymap_config,r24
 420               	.L27:
  69:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_RALT_RGUI)) {
 421               		.loc 1 69 5 is_stmt 1 view .LVU107
  69:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_RALT_RGUI)) {
 422               		.loc 1 69 9 is_stmt 0 view .LVU108
 423 00da 86EE      		ldi r24,lo8(-26)
 424 00dc 0E94 0000 		call bootmagic_scan_keycode
 425               	.LVL40:
  69:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_RALT_RGUI)) {
 426               		.loc 1 69 8 view .LVU109
 427 00e0 8823      		tst r24
 428 00e2 01F0      		breq .L28
  70:./tmk_core/common/bootmagic.c ****         keymap_config.swap_ralt_rgui = !keymap_config.swap_ralt_rgui;
 429               		.loc 1 70 9 is_stmt 1 view .LVU110
  70:./tmk_core/common/bootmagic.c ****         keymap_config.swap_ralt_rgui = !keymap_config.swap_ralt_rgui;
 430               		.loc 1 70 54 is_stmt 0 view .LVU111
 431 00e4 9091 0000 		lds r25,keymap_config
  70:./tmk_core/common/bootmagic.c ****         keymap_config.swap_ralt_rgui = !keymap_config.swap_ralt_rgui;
 432               		.loc 1 70 38 view .LVU112
 433 00e8 892F      		mov r24,r25
 434 00ea 877F      		andi r24,~(1<<3)
 435 00ec 93FF      		sbrs r25,3
 436 00ee 8860      		ori r24,1<<3
 437 00f0 8093 0000 		sts keymap_config,r24
 438               	.L28:
  72:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_NO_GUI)) {
 439               		.loc 1 72 5 is_stmt 1 view .LVU113
  72:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_NO_GUI)) {
 440               		.loc 1 72 9 is_stmt 0 view .LVU114
 441 00f4 83EE      		ldi r24,lo8(-29)
 442 00f6 0E94 0000 		call bootmagic_scan_keycode
 443               	.LVL41:
  72:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_NO_GUI)) {
 444               		.loc 1 72 8 view .LVU115
 445 00fa 8823      		tst r24
 446 00fc 01F0      		breq .L29
  73:./tmk_core/common/bootmagic.c ****         keymap_config.no_gui = !keymap_config.no_gui;
 447               		.loc 1 73 9 is_stmt 1 view .LVU116
  73:./tmk_core/common/bootmagic.c ****         keymap_config.no_gui = !keymap_config.no_gui;
 448               		.loc 1 73 46 is_stmt 0 view .LVU117
 449 00fe 9091 0000 		lds r25,keymap_config
  73:./tmk_core/common/bootmagic.c ****         keymap_config.no_gui = !keymap_config.no_gui;
 450               		.loc 1 73 30 view .LVU118
 451 0102 892F      		mov r24,r25
 452 0104 8F7E      		andi r24,~(1<<4)
 453 0106 94FF      		sbrs r25,4
 454 0108 8061      		ori r24,1<<4
 455 010a 8093 0000 		sts keymap_config,r24
 456               	.L29:
  75:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_GRAVE_ESC)) {
 457               		.loc 1 75 5 is_stmt 1 view .LVU119
  75:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_GRAVE_ESC)) {
 458               		.loc 1 75 9 is_stmt 0 view .LVU120
 459 010e 85E3      		ldi r24,lo8(53)
 460 0110 0E94 0000 		call bootmagic_scan_keycode
 461               	.LVL42:
  75:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_GRAVE_ESC)) {
 462               		.loc 1 75 8 view .LVU121
 463 0114 8823      		tst r24
 464 0116 01F0      		breq .L30
  76:./tmk_core/common/bootmagic.c ****         keymap_config.swap_grave_esc = !keymap_config.swap_grave_esc;
 465               		.loc 1 76 9 is_stmt 1 view .LVU122
  76:./tmk_core/common/bootmagic.c ****         keymap_config.swap_grave_esc = !keymap_config.swap_grave_esc;
 466               		.loc 1 76 54 is_stmt 0 view .LVU123
 467 0118 9091 0000 		lds r25,keymap_config
  76:./tmk_core/common/bootmagic.c ****         keymap_config.swap_grave_esc = !keymap_config.swap_grave_esc;
 468               		.loc 1 76 38 view .LVU124
 469 011c 892F      		mov r24,r25
 470 011e 8F7D      		andi r24,~(1<<5)
 471 0120 95FF      		sbrs r25,5
 472 0122 8062      		ori r24,1<<5
 473 0124 8093 0000 		sts keymap_config,r24
 474               	.L30:
  78:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_BACKSLASH_BACKSPACE)) {
 475               		.loc 1 78 5 is_stmt 1 view .LVU125
  78:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_BACKSLASH_BACKSPACE)) {
 476               		.loc 1 78 9 is_stmt 0 view .LVU126
 477 0128 81E3      		ldi r24,lo8(49)
 478 012a 0E94 0000 		call bootmagic_scan_keycode
 479               	.LVL43:
  78:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_BACKSLASH_BACKSPACE)) {
 480               		.loc 1 78 8 view .LVU127
 481 012e 8823      		tst r24
 482 0130 01F0      		breq .L31
  79:./tmk_core/common/bootmagic.c ****         keymap_config.swap_backslash_backspace = !keymap_config.swap_backslash_backspace;
 483               		.loc 1 79 9 is_stmt 1 view .LVU128
  79:./tmk_core/common/bootmagic.c ****         keymap_config.swap_backslash_backspace = !keymap_config.swap_backslash_backspace;
 484               		.loc 1 79 64 is_stmt 0 view .LVU129
 485 0132 9091 0000 		lds r25,keymap_config
  79:./tmk_core/common/bootmagic.c ****         keymap_config.swap_backslash_backspace = !keymap_config.swap_backslash_backspace;
 486               		.loc 1 79 48 view .LVU130
 487 0136 892F      		mov r24,r25
 488 0138 8F7B      		andi r24,~(1<<6)
 489 013a 96FF      		sbrs r25,6
 490 013c 8064      		ori r24,1<<6
 491 013e 8093 0000 		sts keymap_config,r24
 492               	.L31:
  81:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_HOST_NKRO)) {
 493               		.loc 1 81 5 is_stmt 1 view .LVU131
  81:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_HOST_NKRO)) {
 494               		.loc 1 81 9 is_stmt 0 view .LVU132
 495 0142 81E1      		ldi r24,lo8(17)
 496 0144 0E94 0000 		call bootmagic_scan_keycode
 497               	.LVL44:
  81:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_HOST_NKRO)) {
 498               		.loc 1 81 8 view .LVU133
 499 0148 8823      		tst r24
 500 014a 01F0      		breq .L32
  82:./tmk_core/common/bootmagic.c ****         keymap_config.nkro = !keymap_config.nkro;
 501               		.loc 1 82 9 is_stmt 1 view .LVU134
  82:./tmk_core/common/bootmagic.c ****         keymap_config.nkro = !keymap_config.nkro;
 502               		.loc 1 82 44 is_stmt 0 view .LVU135
 503 014c 9091 0000 		lds r25,keymap_config
  82:./tmk_core/common/bootmagic.c ****         keymap_config.nkro = !keymap_config.nkro;
 504               		.loc 1 82 28 view .LVU136
 505 0150 892F      		mov r24,r25
 506 0152 97FB      		bst r25,7
 507 0154 87F9      		bld r24,7
 508 0156 8058      		subi r24,0x80
 509 0158 8093 0000 		sts keymap_config,r24
 510               	.L32:
  84:./tmk_core/common/bootmagic.c ****     eeconfig_update_keymap(keymap_config.raw);
 511               		.loc 1 84 5 is_stmt 1 view .LVU137
 512 015c 8091 0000 		lds r24,keymap_config
 513 0160 0E94 0000 		call eeconfig_update_keymap
 514               	.LVL45:
  87:./tmk_core/common/bootmagic.c ****     uint8_t default_layer = 0;
 515               		.loc 1 87 5 view .LVU138
  88:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_0)) { default_layer |= (1<<0); }
 516               		.loc 1 88 5 view .LVU139
  88:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_0)) { default_layer |= (1<<0); }
 517               		.loc 1 88 9 is_stmt 0 view .LVU140
 518 0164 87E2      		ldi r24,lo8(39)
 519 0166 0E94 0000 		call bootmagic_scan_keycode
 520               	.LVL46:
 521 016a C82F      		mov r28,r24
 522               	.LVL47:
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 523               		.loc 1 89 5 is_stmt 1 view .LVU141
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 524               		.loc 1 89 9 is_stmt 0 view .LVU142
 525 016c 8EE1      		ldi r24,lo8(30)
 526               	.LVL48:
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 527               		.loc 1 89 9 view .LVU143
 528 016e 0E94 0000 		call bootmagic_scan_keycode
 529               	.LVL49:
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 530               		.loc 1 89 8 view .LVU144
 531 0172 8111      		cpse r24,__zero_reg__
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 532               		.loc 1 89 66 is_stmt 1 discriminator 1 view .LVU145
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 533               		.loc 1 89 80 is_stmt 0 discriminator 1 view .LVU146
 534 0174 C260      		ori r28,lo8(2)
 535               	.LVL50:
 536               	.L33:
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 537               		.loc 1 90 5 is_stmt 1 view .LVU147
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 538               		.loc 1 90 9 is_stmt 0 view .LVU148
 539 0176 8FE1      		ldi r24,lo8(31)
 540 0178 0E94 0000 		call bootmagic_scan_keycode
 541               	.LVL51:
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 542               		.loc 1 90 8 view .LVU149
 543 017c 8111      		cpse r24,__zero_reg__
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 544               		.loc 1 90 66 is_stmt 1 discriminator 1 view .LVU150
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 545               		.loc 1 90 80 is_stmt 0 discriminator 1 view .LVU151
 546 017e C460      		ori r28,lo8(4)
 547               	.LVL52:
 548               	.L34:
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 549               		.loc 1 91 5 is_stmt 1 view .LVU152
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 550               		.loc 1 91 9 is_stmt 0 view .LVU153
 551 0180 80E2      		ldi r24,lo8(32)
 552 0182 0E94 0000 		call bootmagic_scan_keycode
 553               	.LVL53:
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 554               		.loc 1 91 8 view .LVU154
 555 0186 8111      		cpse r24,__zero_reg__
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 556               		.loc 1 91 66 is_stmt 1 discriminator 1 view .LVU155
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 557               		.loc 1 91 80 is_stmt 0 discriminator 1 view .LVU156
 558 0188 C860      		ori r28,lo8(8)
 559               	.LVL54:
 560               	.L35:
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 561               		.loc 1 92 5 is_stmt 1 view .LVU157
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 562               		.loc 1 92 9 is_stmt 0 view .LVU158
 563 018a 81E2      		ldi r24,lo8(33)
 564 018c 0E94 0000 		call bootmagic_scan_keycode
 565               	.LVL55:
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 566               		.loc 1 92 8 view .LVU159
 567 0190 8111      		cpse r24,__zero_reg__
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 568               		.loc 1 92 66 is_stmt 1 discriminator 1 view .LVU160
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 569               		.loc 1 92 80 is_stmt 0 discriminator 1 view .LVU161
 570 0192 C061      		ori r28,lo8(16)
 571               	.LVL56:
 572               	.L36:
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 573               		.loc 1 93 5 is_stmt 1 view .LVU162
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 574               		.loc 1 93 9 is_stmt 0 view .LVU163
 575 0194 82E2      		ldi r24,lo8(34)
 576 0196 0E94 0000 		call bootmagic_scan_keycode
 577               	.LVL57:
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 578               		.loc 1 93 8 view .LVU164
 579 019a 8111      		cpse r24,__zero_reg__
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 580               		.loc 1 93 66 is_stmt 1 discriminator 1 view .LVU165
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 581               		.loc 1 93 80 is_stmt 0 discriminator 1 view .LVU166
 582 019c C062      		ori r28,lo8(32)
 583               	.LVL58:
 584               	.L37:
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 585               		.loc 1 94 5 is_stmt 1 view .LVU167
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 586               		.loc 1 94 9 is_stmt 0 view .LVU168
 587 019e 83E2      		ldi r24,lo8(35)
 588 01a0 0E94 0000 		call bootmagic_scan_keycode
 589               	.LVL59:
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 590               		.loc 1 94 8 view .LVU169
 591 01a4 8111      		cpse r24,__zero_reg__
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 592               		.loc 1 94 66 is_stmt 1 discriminator 1 view .LVU170
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 593               		.loc 1 94 80 is_stmt 0 discriminator 1 view .LVU171
 594 01a6 C064      		ori r28,lo8(64)
 595               	.LVL60:
 596               	.L38:
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 597               		.loc 1 95 5 is_stmt 1 view .LVU172
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 598               		.loc 1 95 9 is_stmt 0 view .LVU173
 599 01a8 84E2      		ldi r24,lo8(36)
 600 01aa 0E94 0000 		call bootmagic_scan_keycode
 601               	.LVL61:
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 602               		.loc 1 95 8 view .LVU174
 603 01ae 8823      		tst r24
 604 01b0 01F0      		breq .L39
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 605               		.loc 1 95 66 is_stmt 1 discriminator 1 view .LVU175
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 606               		.loc 1 95 80 is_stmt 0 discriminator 1 view .LVU176
 607 01b2 C068      		ori r28,lo8(-128)
 608               	.LVL62:
  96:./tmk_core/common/bootmagic.c ****     if (default_layer) {
 609               		.loc 1 96 5 is_stmt 1 discriminator 1 view .LVU177
 610               	.L40:
  97:./tmk_core/common/bootmagic.c ****         eeconfig_update_default_layer(default_layer);
 611               		.loc 1 97 9 view .LVU178
 612 01b4 8C2F      		mov r24,r28
 613 01b6 0E94 0000 		call eeconfig_update_default_layer
 614               	.LVL63:
  98:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 615               		.loc 1 98 9 view .LVU179
 616 01ba 6C2F      		mov r22,r28
 617               	.LVL64:
 618               	.L94:
 101:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 619               		.loc 1 101 9 is_stmt 0 view .LVU180
 620 01bc 70E0      		ldi r23,0
 621 01be 90E0      		ldi r25,0
 622 01c0 80E0      		ldi r24,0
 623               	/* epilogue start */
 103:./tmk_core/common/bootmagic.c **** }
 624               		.loc 1 103 1 view .LVU181
 625 01c2 CF91      		pop r28
 101:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 626               		.loc 1 101 9 view .LVU182
 627 01c4 0C94 0000 		jmp default_layer_set
 628               	.LVL65:
 629               	.L22:
  48:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_KEYBOARD)) {
 630               		.loc 1 48 16 is_stmt 1 view .LVU183
  48:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_KEYBOARD)) {
 631               		.loc 1 48 20 is_stmt 0 view .LVU184
 632 01c8 8EE0      		ldi r24,lo8(14)
 633 01ca 0E94 0000 		call bootmagic_scan_keycode
 634               	.LVL66:
  48:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_KEYBOARD)) {
 635               		.loc 1 48 19 view .LVU185
 636 01ce 8823      		tst r24
 637 01d0 01F0      		breq .L23
  49:./tmk_core/common/bootmagic.c ****             debug_config.keyboard = !debug_config.keyboard;
 638               		.loc 1 49 13 is_stmt 1 view .LVU186
  49:./tmk_core/common/bootmagic.c ****             debug_config.keyboard = !debug_config.keyboard;
 639               		.loc 1 49 50 is_stmt 0 view .LVU187
 640 01d2 9091 0000 		lds r25,debug_config
  49:./tmk_core/common/bootmagic.c ****             debug_config.keyboard = !debug_config.keyboard;
 641               		.loc 1 49 35 view .LVU188
 642 01d6 892F      		mov r24,r25
 643 01d8 8B7F      		andi r24,~(1<<2)
 644 01da 92FF      		sbrs r25,2
 645 01dc 8460      		ori r24,1<<2
 646 01de 00C0      		rjmp .L93
 647               	.L23:
  50:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MOUSE)) {
 648               		.loc 1 50 16 is_stmt 1 view .LVU189
  50:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MOUSE)) {
 649               		.loc 1 50 20 is_stmt 0 view .LVU190
 650 01e0 80E1      		ldi r24,lo8(16)
 651 01e2 0E94 0000 		call bootmagic_scan_keycode
 652               	.LVL67:
 653 01e6 9091 0000 		lds r25,debug_config
  50:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MOUSE)) {
 654               		.loc 1 50 19 view .LVU191
 655 01ea 8823      		tst r24
 656 01ec 01F0      		breq .L24
  51:./tmk_core/common/bootmagic.c ****             debug_config.mouse = !debug_config.mouse;
 657               		.loc 1 51 13 is_stmt 1 view .LVU192
  51:./tmk_core/common/bootmagic.c ****             debug_config.mouse = !debug_config.mouse;
 658               		.loc 1 51 32 is_stmt 0 view .LVU193
 659 01ee 892F      		mov r24,r25
 660 01f0 877F      		andi r24,~(1<<3)
 661 01f2 93FF      		sbrs r25,3
 662 01f4 8860      		ori r24,1<<3
 663 01f6 00C0      		rjmp .L93
 664               	.L24:
  53:./tmk_core/common/bootmagic.c ****             debug_config.enable = !debug_config.enable;
 665               		.loc 1 53 13 is_stmt 1 view .LVU194
  53:./tmk_core/common/bootmagic.c ****             debug_config.enable = !debug_config.enable;
 666               		.loc 1 53 33 is_stmt 0 view .LVU195
 667 01f8 892F      		mov r24,r25
 668 01fa 8E7F      		andi r24,~(1<<0)
 669 01fc 90FF      		sbrs r25,0
 670 01fe 8160      		ori r24,1<<0
 671 0200 00C0      		rjmp .L93
 672               	.LVL68:
 673               	.L39:
  96:./tmk_core/common/bootmagic.c ****     if (default_layer) {
 674               		.loc 1 96 5 is_stmt 1 view .LVU196
  96:./tmk_core/common/bootmagic.c ****     if (default_layer) {
 675               		.loc 1 96 8 is_stmt 0 view .LVU197
 676 0202 C111      		cpse r28,__zero_reg__
 677 0204 00C0      		rjmp .L40
 100:./tmk_core/common/bootmagic.c ****         default_layer = eeconfig_read_default_layer();
 678               		.loc 1 100 9 is_stmt 1 view .LVU198
 100:./tmk_core/common/bootmagic.c ****         default_layer = eeconfig_read_default_layer();
 679               		.loc 1 100 25 is_stmt 0 view .LVU199
 680 0206 0E94 0000 		call eeconfig_read_default_layer
 681               	.LVL69:
 101:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 682               		.loc 1 101 9 is_stmt 1 view .LVU200
 683 020a 682F      		mov r22,r24
 684 020c 00C0      		rjmp .L94
 685               	.LVL70:
 686               	.L14:
 687               	/* epilogue start */
 103:./tmk_core/common/bootmagic.c **** }
 688               		.loc 1 103 1 is_stmt 0 view .LVU201
 689 020e CF91      		pop r28
 690               	.LVL71:
 103:./tmk_core/common/bootmagic.c **** }
 691               		.loc 1 103 1 view .LVU202
 692 0210 0895      		ret
 693               		.cfi_endproc
 694               	.LFE103:
 696               		.comm	keymap_config,2,1
 697               		.text
 698               	.Letext0:
 699               		.file 3 "/usr/avr/include/stdint.h"
 700               		.file 4 "./tmk_core/common/matrix.h"
 701               		.file 5 "./tmk_core/common/debug.h"
 702               		.file 6 "./tmk_core/common/keyboard.h"
 703               		.file 7 "./tmk_core/common/action.h"
 704               		.file 8 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 705               		.file 9 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 706               		.file 10 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 707               		.file 11 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/HostStandardReq.h"
 708               		.file 12 "/usr/avr/include/stdio.h"
 709               		.file 13 "./tmk_core/common/host.h"
 710               		.file 14 "./quantum/keycode_config.h"
 711               		.file 15 "./quantum/keymap.h"
 712               		.file 16 "./tmk_core/common/action_layer.h"
 713               		.file 17 "./tmk_core/common/eeconfig.h"
 714               		.file 18 "./tmk_core/common/bootloader.h"
 715               		.file 19 "./tmk_core/common/keycode.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 bootmagic.c
     /tmp/ccjYiEbt.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccjYiEbt.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccjYiEbt.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccjYiEbt.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccjYiEbt.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccjYiEbt.s:12     .text.scan_keycode:0000000000000000 scan_keycode
     /tmp/ccjYiEbt.s:182    .text.bootmagic_scan_keycode:0000000000000000 bootmagic_scan_keycode
     /tmp/ccjYiEbt.s:231    .text.bootmagic:0000000000000000 bootmagic
                            *COM*:0000000000000002 keymap_config

UNDEFINED SYMBOLS
matrix_get_row
keymap_key_to_keycode
eeconfig_is_enabled
eeconfig_init
matrix_scan
bootloader_jump
eeconfig_read_debug
debug_config
eeconfig_update_debug
eeconfig_read_keymap
eeconfig_update_keymap
eeconfig_update_default_layer
default_layer_set
eeconfig_read_default_layer
__do_clear_bss
